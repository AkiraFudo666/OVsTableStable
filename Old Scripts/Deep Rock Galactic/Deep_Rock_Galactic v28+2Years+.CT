<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="29">
  <CheatEntries>
    <CheatEntry>
      <ID>1693</ID>
      <Description>"WARNING: Do NOT host games with random people online while using this table! You will be sent to BANana Island! Do not ruin other people's experiences!"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>FF8000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>1286</ID>
          <Description>"Want to help make this table better? Join our Discord! - https://discord.gg/rSjnn6r"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>836</ID>
              <Description>"Bosco"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>1467</ID>
                  <Description>"Unlimited Revives"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version:
  Date   : 2020-03-01
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(UnlimitedRevives,FSD-Win64-Shipping.exe,89 81 F8 05 00 00 48 81) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+6BAFDE)

label(code)
label(return)

newmem:

code:
  add [rcx+000005F8],(int)0
  jmp return

UnlimitedRevives:
  jmp newmem
  nop
return:
registersymbol(UnlimitedRevives)

[DISABLE]

UnlimitedRevives:
  db 89 81 F8 05 00 00

unregistersymbol(UnlimitedRevives)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+6BAFDE

"FSD-Win64-Shipping.exe"+6BAFBE: CC                       -  int 3
"FSD-Win64-Shipping.exe"+6BAFBF: CC                       -  int 3
"FSD-Win64-Shipping.exe"+6BAFC0: 48 83 EC 28              -  sub rsp,28
"FSD-Win64-Shipping.exe"+6BAFC4: 80 B9 18 01 00 00 03     -  cmp byte ptr [rcx+00000118],03
"FSD-Win64-Shipping.exe"+6BAFCB: 75 2E                    -  jne FSD-Win64-Shipping.exe+6BAFFB
"FSD-Win64-Shipping.exe"+6BAFCD: 8B 81 F8 05 00 00        -  mov eax,[rcx+000005F8]
"FSD-Win64-Shipping.exe"+6BAFD3: 85 C0                    -  test eax,eax
"FSD-Win64-Shipping.exe"+6BAFD5: 7E 24                    -  jle FSD-Win64-Shipping.exe+6BAFFB
"FSD-Win64-Shipping.exe"+6BAFD7: FF C8                    -  dec eax
"FSD-Win64-Shipping.exe"+6BAFD9: 48 8D 54 24 30           -  lea rdx,[rsp+30]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+6BAFDE: 89 81 F8 05 00 00        -  mov [rcx+000005F8],eax
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+6BAFE4: 48 81 C1 90 04 00 00     -  add rcx,00000490
"FSD-Win64-Shipping.exe"+6BAFEB: 89 44 24 30              -  mov [rsp+30],eax
"FSD-Win64-Shipping.exe"+6BAFEF: E8 2C 3F C2 FF           -  call FSD-Win64-Shipping.exe+2DEF20
"FSD-Win64-Shipping.exe"+6BAFF4: B0 01                    -  mov al,01
"FSD-Win64-Shipping.exe"+6BAFF6: 48 83 C4 28              -  add rsp,28
"FSD-Win64-Shipping.exe"+6BAFFA: C3                       -  ret
"FSD-Win64-Shipping.exe"+6BAFFB: 32 C0                    -  xor al,al
"FSD-Win64-Shipping.exe"+6BAFFD: 48 83 C4 28              -  add rsp,28
"FSD-Win64-Shipping.exe"+6BB001: C3                       -  ret
"FSD-Win64-Shipping.exe"+6BB002: CC                       -  int 3
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>986</ID>
                  <Description>"Unlimited Rockets"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version:
  Date   : 2019-09-26
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(BoscoMissiles,FSD-Win64-Shipping.exe,FF 8E 90 01 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+71AB68)

label(code)
label(return)

newmem:

code:
  add [rsi+00000190],(int)0
  jmp return

BoscoMissiles:
  jmp newmem
  nop
return:
registersymbol(BoscoMissiles)

[DISABLE]

BoscoMissiles:
  db FF 8E 90 01 00 00

unregistersymbol(BoscoMissiles)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+71AB68

"FSD-Win64-Shipping.exe"+71AB38: 48 8B D0                    -  mov rdx,rax
"FSD-Win64-Shipping.exe"+71AB3B: 48 8B 41 30                 -  mov rax,[rcx+30]
"FSD-Win64-Shipping.exe"+71AB3F: 4C 39 04 D0                 -  cmp [rax+rdx*8],r8
"FSD-Win64-Shipping.exe"+71AB43: 75 16                       -  jne FSD-Win64-Shipping.exe+71AB5B
"FSD-Win64-Shipping.exe"+71AB45: 48 8B 8B 08 04 00 00        -  mov rcx,[rbx+00000408]
"FSD-Win64-Shipping.exe"+71AB4C: 48 8D 15 C5 5C F0 02        -  lea rdx,[FSD-Win64-Shipping.exe+3620818]
"FSD-Win64-Shipping.exe"+71AB53: 45 33 C0                    -  xor r8d,r8d
"FSD-Win64-Shipping.exe"+71AB56: E8 75 F3 8E 01              -  call FSD-Win64-Shipping.exe+2009ED0
"FSD-Win64-Shipping.exe"+71AB5B: 80 BE 96 01 00 00 00        -  cmp byte ptr [rsi+00000196],00
"FSD-Win64-Shipping.exe"+71AB62: 0F 85 34 0C 00 00           -  jne FSD-Win64-Shipping.exe+71B79C
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+71AB68: FF 8E 90 01 00 00           -  dec [rsi+00000190]
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+71AB6E: 48 8D 8E 08 01 00 00        -  lea rcx,[rsi+00000108]
"FSD-Win64-Shipping.exe"+71AB75: 8B 86 90 01 00 00           -  mov eax,[rsi+00000190]
"FSD-Win64-Shipping.exe"+71AB7B: 48 8D 55 67                 -  lea rdx,[rbp+67]
"FSD-Win64-Shipping.exe"+71AB7F: 89 45 67                    -  mov [rbp+67],eax
"FSD-Win64-Shipping.exe"+71AB82: C6 86 96 01 00 00 01        -  mov byte ptr [rsi+00000196],01
"FSD-Win64-Shipping.exe"+71AB89: E8 32 EA BB FF              -  call FSD-Win64-Shipping.exe+2D95C0
"FSD-Win64-Shipping.exe"+71AB8E: 48 8B CF                    -  mov rcx,rdi
"FSD-Win64-Shipping.exe"+71AB91: E8 EA 15 55 00              -  call FSD-Win64-Shipping.exe+C6C180
"FSD-Win64-Shipping.exe"+71AB96: 84 C0                       -  test al,al
"FSD-Win64-Shipping.exe"+71AB98: 0F 84 FE 0B 00 00           -  je FSD-Win64-Shipping.exe+71B79C
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>673</ID>
              <Description>"Scout"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" Activated="1" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>1258</ID>
                  <Description>"Instant Grapple Cooldown"</Description>
                  <LastState Activated="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-10-04
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(GrappleCooldown,FSD-Win64-Shipping.exe,89 81 20 01 00 00 88) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+7558C6)

label(code)
label(return)

newmem:
// Do not use update function, only the click to release grapple
code:
  mov [rcx+00000120],(float)0.0
  jmp return

GrappleCooldown:
  jmp newmem
  nop
return:
registersymbol(GrappleCooldown)

[DISABLE]

GrappleCooldown:
  db 89 81 20 01 00 00

unregistersymbol(GrappleCooldown)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+7558C6

"FSD-Win64-Shipping.exe"+7558AC: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7558AD: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7558AE: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7558AF: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7558B0: 48 8B 89 48 03 00 00     -  mov rcx,[rcx+00000348]
"FSD-Win64-Shipping.exe"+7558B7: B2 01                    -  mov dl,01
"FSD-Win64-Shipping.exe"+7558B9: E9 22 25 EB FF           -  jmp FSD-Win64-Shipping.exe+607DE0
"FSD-Win64-Shipping.exe"+7558BE: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7558BF: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7558C0: 8B 81 10 01 00 00        -  mov eax,[rcx+00000110]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+7558C6: 89 81 20 01 00 00        -  mov [rcx+00000120],eax
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+7558CC: 88 91 24 01 00 00        -  mov [rcx+00000124],dl
"FSD-Win64-Shipping.exe"+7558D2: C3                       -  ret 
"FSD-Win64-Shipping.exe"+7558D3: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7558D4: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7558D5: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7558D6: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7558D7: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7558D8: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7558D9: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7558DA: CC                       -  int 3 
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1744</ID>
                  <Description>"Instant Grapple Projectile Speed (Must be enabled on the station before starting a mission)"</Description>
                  <LastState Activated="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-01-31
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InstantGrapple,FSD-Win64-Shipping.exe,F3 0F 11 83 AC 04 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+6C7B0A)

label(code)
label(return)

label(InstaGrapple)
registersymbol(InstaGrapple)
// 7FF78B307AA0 - FSD-Win64-Shipping.UGrapplingHookUpgrade::AddToItem()
newmem:

code:
  mulss xmm0,[InstaGrapple]
  movss [rbx+000004AC],xmm0
  jmp return

InstaGrapple:
  dd (float)0.0

InstantGrapple:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(InstantGrapple)

[DISABLE]

InstantGrapple:
  db F3 0F 11 83 AC 04 00 00

unregistersymbol(InstaGrapple)
unregistersymbol(InstantGrapple)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+6C7B0A

"FSD-Win64-Shipping.exe"+6C7AE3: 75 73                    -  jne FSD-Win64-Shipping.exe+6C7B58
"FSD-Win64-Shipping.exe"+6C7AE5: 0F B6 8F 48 01 00 00     -  movzx ecx,byte ptr [rdi+00000148]
"FSD-Win64-Shipping.exe"+6C7AEC: 85 C9                    -  test ecx,ecx
"FSD-Win64-Shipping.exe"+6C7AEE: 74 50                    -  je FSD-Win64-Shipping.exe+6C7B40
"FSD-Win64-Shipping.exe"+6C7AF0: 83 E9 01                 -  sub ecx,01
"FSD-Win64-Shipping.exe"+6C7AF3: 74 28                    -  je FSD-Win64-Shipping.exe+6C7B1D
"FSD-Win64-Shipping.exe"+6C7AF5: 83 F9 01                 -  cmp ecx,01
"FSD-Win64-Shipping.exe"+6C7AF8: 75 5E                    -  jne FSD-Win64-Shipping.exe+6C7B58
"FSD-Win64-Shipping.exe"+6C7AFA: F3 0F 10 87 4C 01 00 00  -  movss xmm0,[rdi+0000014C]
"FSD-Win64-Shipping.exe"+6C7B02: F3 0F 58 83 AC 04 00 00  -  addss xmm0,[rbx+000004AC]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+6C7B0A: F3 0F 11 83 AC 04 00 00  -  movss [rbx+000004AC],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+6C7B12: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"FSD-Win64-Shipping.exe"+6C7B17: 48 83 C4 20              -  add rsp,20
"FSD-Win64-Shipping.exe"+6C7B1B: 5F                       -  pop rdi
"FSD-Win64-Shipping.exe"+6C7B1C: C3                       -  ret 
"FSD-Win64-Shipping.exe"+6C7B1D: F3 0F 10 87 4C 01 00 00  -  movss xmm0,[rdi+0000014C]
"FSD-Win64-Shipping.exe"+6C7B25: F3 0F 58 83 A8 04 00 00  -  addss xmm0,[rbx+000004A8]
"FSD-Win64-Shipping.exe"+6C7B2D: F3 0F 11 83 A8 04 00 00  -  movss [rbx+000004A8],xmm0
"FSD-Win64-Shipping.exe"+6C7B35: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"FSD-Win64-Shipping.exe"+6C7B3A: 48 83 C4 20              -  add rsp,20
"FSD-Win64-Shipping.exe"+6C7B3E: 5F                       -  pop rdi
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1442</ID>
                  <Description>"Instant M1000 Classic ADS Bonus Damage"</Description>
                  <LastState Activated="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-11-21
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(SniperADS,FSD-Win64-Shipping.exe,F3 0F 11 87 FC 07 00 00 84) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+7A8372)

label(code)
label(return)

newmem:
// Unzoomed = 0.0, Zoomed = 1.0
code:
  mov [rdi+000007FC],(float)1.0
  jmp return

SniperADS:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(SniperADS)

[DISABLE]

SniperADS:
  db F3 0F 11 87 FC 07 00 00

unregistersymbol(SniperADS)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+7A8372

"FSD-Win64-Shipping.exe"+7A8334: F3 0F 10 89 F8 00 00 00  -  movss xmm1,[rcx+000000F8]
"FSD-Win64-Shipping.exe"+7A833C: F3 0F 10 97 9C 07 00 00  -  movss xmm2,[rdi+0000079C]
"FSD-Win64-Shipping.exe"+7A8344: E8 77 EC DE FF           -  call FSD-Win64-Shipping.exe+596FC0
"FSD-Win64-Shipping.exe"+7A8349: 0F B6 87 D1 07 00 00     -  movzx eax,byte ptr [rdi+000007D1]
"FSD-Win64-Shipping.exe"+7A8350: 40 38 AF F9 07 00 00     -  cmp [rdi+000007F9],bpl
"FSD-Win64-Shipping.exe"+7A8357: 74 76                    -  je FSD-Win64-Shipping.exe+7A83CF
"FSD-Win64-Shipping.exe"+7A8359: 41 0F 28 C2              -  movaps xmm0,xmm10
"FSD-Win64-Shipping.exe"+7A835D: F3 0F 59 87 64 07 00 00  -  mulss xmm0,[rdi+00000764]
"FSD-Win64-Shipping.exe"+7A8365: F3 0F 58 87 FC 07 00 00  -  addss xmm0,[rdi+000007FC]
"FSD-Win64-Shipping.exe"+7A836D: F3 41 0F 5D C1           -  minss xmm0,xmm9
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+7A8372: F3 0F 11 87 FC 07 00 00  -  movss [rdi+000007FC],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+7A837A: 84 C0                    -  test al,al
"FSD-Win64-Shipping.exe"+7A837C: 75 5C                    -  jne FSD-Win64-Shipping.exe+7A83DA
"FSD-Win64-Shipping.exe"+7A837E: 41 0F 2F C1              -  comiss xmm0,xmm9
"FSD-Win64-Shipping.exe"+7A8382: 72 56                    -  jb FSD-Win64-Shipping.exe+7A83DA
"FSD-Win64-Shipping.exe"+7A8384: 48 8D 8F 10 07 00 00     -  lea rcx,[rdi+00000710]
"FSD-Win64-Shipping.exe"+7A838B: C6 87 D1 07 00 00 01     -  mov byte ptr [rdi+000007D1],01
"FSD-Win64-Shipping.exe"+7A8392: 33 D2                    -  xor edx,edx
"FSD-Win64-Shipping.exe"+7A8394: E8 E7 FF B2 FF           -  call FSD-Win64-Shipping.exe+2D8380
"FSD-Win64-Shipping.exe"+7A8399: 48 8B 07                 -  mov rax,[rdi]
"FSD-Win64-Shipping.exe"+7A839C: 48 8B CF                 -  mov rcx,rdi
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1746</ID>
                  <Description>"Unlimited Grapple Distance (Enable Before Mission Launch)"</Description>
                  <LastState Activated="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-01-31
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(GrappleDistance,FSD-Win64-Shipping.exe,F3 0F 11 83 74 04 00 00 48) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+6C7B50)

label(code)
label(return)

label(GrappleDist)
registersymbol(GrappleDist)
// 7FF78B307AA0 - FSD-Win64-Shipping.UGrapplingHookUpgrade::AddToItem()
newmem:

code:
  mulss xmm0,[GrappleDist]
  movss [rbx+00000474],xmm0
  jmp return

GrappleDist:
  dd (float)100.0

GrappleDistance:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(GrappleDistance)

[DISABLE]

GrappleDistance:
  db F3 0F 11 83 74 04 00 00

unregistersymbol(GrappleDist)
unregistersymbol(GrappleDistance)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+6C7B50

"FSD-Win64-Shipping.exe"+6C7B1C: C3                       -  ret 
"FSD-Win64-Shipping.exe"+6C7B1D: F3 0F 10 87 4C 01 00 00  -  movss xmm0,[rdi+0000014C]
"FSD-Win64-Shipping.exe"+6C7B25: F3 0F 58 83 A8 04 00 00  -  addss xmm0,[rbx+000004A8]
"FSD-Win64-Shipping.exe"+6C7B2D: F3 0F 11 83 A8 04 00 00  -  movss [rbx+000004A8],xmm0
"FSD-Win64-Shipping.exe"+6C7B35: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"FSD-Win64-Shipping.exe"+6C7B3A: 48 83 C4 20              -  add rsp,20
"FSD-Win64-Shipping.exe"+6C7B3E: 5F                       -  pop rdi
"FSD-Win64-Shipping.exe"+6C7B3F: C3                       -  ret 
"FSD-Win64-Shipping.exe"+6C7B40: F3 0F 10 87 4C 01 00 00  -  movss xmm0,[rdi+0000014C]
"FSD-Win64-Shipping.exe"+6C7B48: F3 0F 58 83 74 04 00 00  -  addss xmm0,[rbx+00000474]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+6C7B50: F3 0F 11 83 74 04 00 00  -  movss [rbx+00000474],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+6C7B58: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"FSD-Win64-Shipping.exe"+6C7B5D: 48 83 C4 20              -  add rsp,20
"FSD-Win64-Shipping.exe"+6C7B61: 5F                       -  pop rdi
"FSD-Win64-Shipping.exe"+6C7B62: C3                       -  ret 
"FSD-Win64-Shipping.exe"+6C7B63: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+6C7B64: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+6C7B65: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+6C7B66: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+6C7B67: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+6C7B68: CC                       -  int 3 
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>661</ID>
              <Description>"Driller"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>1830</ID>
                  <Description>"Drill"</Description>
                  <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1254</ID>
                      <Description>"Unlimited Drill Fuel VS Organic"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-10-03
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(DrillVsOrganic,FSD-Win64-Shipping.exe,F3 0F 11 87 40 05 00 00 0F) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+77E4D5)

label(code)
label(return)

newmem:

code:
  add [rdi+00000540],(float)0.0
  jmp return

DrillVsOrganic:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(DrillVsOrganic)

[DISABLE]

DrillVsOrganic:
  db F3 0F 11 87 40 05 00 00

unregistersymbol(DrillVsOrganic)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+77E4D5

"FSD-Win64-Shipping.exe"+77E49F: 48 8B CF                    -  mov rcx,rdi
"FSD-Win64-Shipping.exe"+77E4A2: E8 99 28 15 00              -  call FSD-Win64-Shipping.exe+8D0D40
"FSD-Win64-Shipping.exe"+77E4A7: 49 8B D6                    -  mov rdx,r14
"FSD-Win64-Shipping.exe"+77E4AA: 48 8B CF                    -  mov rcx,rdi
"FSD-Win64-Shipping.exe"+77E4AD: E8 AE 30 15 00              -  call FSD-Win64-Shipping.exe+8D1560
"FSD-Win64-Shipping.exe"+77E4B2: F3 0F 10 87 40 05 00 00     -  movss xmm0,[rdi+00000540]
"FSD-Win64-Shipping.exe"+77E4BA: 48 8B CF                    -  mov rcx,rdi
"FSD-Win64-Shipping.exe"+77E4BD: F3 0F 5C 87 48 05 00 00     -  subss xmm0,[rdi+00000548]
"FSD-Win64-Shipping.exe"+77E4C5: F3 0F 10 0D 9F B9 FB 01     -  movss xmm1,[FSD-Win64-Shipping.exe+2739E6C]
"FSD-Win64-Shipping.exe"+77E4CD: F3 0F 5E 8F F0 04 00 00     -  divss xmm1,[rdi+000004F0]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+77E4D5: F3 0F 11 87 40 05 00 00     -  movss [rdi+00000540],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+77E4DD: 0F 28 C7                    -  movaps xmm0,xmm7
"FSD-Win64-Shipping.exe"+77E4E0: F3 0F 5E 87 20 05 00 00     -  divss xmm0,[rdi+00000520]
"FSD-Win64-Shipping.exe"+77E4E8: F3 0F 11 8F 0C 05 00 00     -  movss [rdi+0000050C],xmm1
"FSD-Win64-Shipping.exe"+77E4F0: F3 0F 10 8F 7C 05 00 00     -  movss xmm1,[rdi+0000057C]
"FSD-Win64-Shipping.exe"+77E4F8: F3 0F 11 87 78 05 00 00     -  movss [rdi+00000578],xmm0
"FSD-Win64-Shipping.exe"+77E500: E8 7B 48 03 00              -  call FSD-Win64-Shipping.exe+7B2D80
"FSD-Win64-Shipping.exe"+77E505: 4C 8B B4 24 58 01 00 00     -  mov r14,[rsp+00000158]
"FSD-Win64-Shipping.exe"+77E50D: F3 0F 10 8F 10 05 00 00     -  movss xmm1,[rdi+00000510]
"FSD-Win64-Shipping.exe"+77E515: 48 8D 95 90 00 00 00        -  lea rdx,[rbp+00000090]
"FSD-Win64-Shipping.exe"+77E51C: F3 0F 2C 87 40 05 00 00     -  cvttss2si eax,[rdi+00000540]
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1128</ID>
                      <Description>"Unlimited Drill Fuel VS Terrain"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-27
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(DrillerFuel,FSD-Win64-Shipping.exe,F3 0F 11 87 40 05 00 00 48) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+776D60)

label(code)
label(return)

newmem:

code:
  sub [rdi+00000540],(float)0.0
  jmp return

DrillerFuel:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(DrillerFuel)

[DISABLE]

DrillerFuel:
  db F3 0F 11 87 40 05 00 00

unregistersymbol(DrillerFuel)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+776D60

"FSD-Win64-Shipping.exe"+776D24: 41 0F 14 C4                 -  unpcklps xmm0,xmm12
"FSD-Win64-Shipping.exe"+776D28: F2 0F 11 44 24 50           -  movsd [rsp+50],xmm0
"FSD-Win64-Shipping.exe"+776D2E: F3 44 0F 11 6D 98           -  movss [rbp-68],xmm13
"FSD-Win64-Shipping.exe"+776D34: 8B 45 98                    -  mov eax,[rbp-68]
"FSD-Win64-Shipping.exe"+776D37: 89 44 24 58                 -  mov [rsp+58],eax
"FSD-Win64-Shipping.exe"+776D3B: E8 30 5D 14 00              -  call FSD-Win64-Shipping.exe+8BCA70
"FSD-Win64-Shipping.exe"+776D40: F3 0F 10 87 40 05 00 00     -  movss xmm0,[rdi+00000540]
"FSD-Win64-Shipping.exe"+776D48: F3 0F 5E BF F0 04 00 00     -  divss xmm7,[rdi+000004F0]
"FSD-Win64-Shipping.exe"+776D50: F3 0F 5C 87 44 05 00 00     -  subss xmm0,[rdi+00000544]
"FSD-Win64-Shipping.exe"+776D58: F3 0F 11 BF 0C 05 00 00     -  movss [rdi+0000050C],xmm7
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+776D60: F3 0F 11 87 40 05 00 00     -  movss [rdi+00000540],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+776D68: 48 8B CF                    -  mov rcx,rdi
"FSD-Win64-Shipping.exe"+776D6B: E8 B0 D1 01 00              -  call FSD-Win64-Shipping.exe+793F20
"FSD-Win64-Shipping.exe"+776D70: 44 0F 28 B4 24 C0 00 00 00  -  movaps xmm14,[rsp+000000C0]
"FSD-Win64-Shipping.exe"+776D79: 44 0F 28 AC 24 D0 00 00 00  -  movaps xmm13,[rsp+000000D0]
"FSD-Win64-Shipping.exe"+776D82: 44 0F 28 A4 24 E0 00 00 00  -  movaps xmm12,[rsp+000000E0]
"FSD-Win64-Shipping.exe"+776D8B: 44 0F 28 94 24 00 01 00 00  -  movaps xmm10,[rsp+00000100]
"FSD-Win64-Shipping.exe"+776D94: F3 0F 10 BF 10 05 00 00     -  movss xmm7,[rdi+00000510]
"FSD-Win64-Shipping.exe"+776D9C: EB 5E                       -  jmp FSD-Win64-Shipping.exe+776DFC
"FSD-Win64-Shipping.exe"+776D9E: F3 44 0F 59 0D 21 76 FF 01  -  mulss xmm9,[FSD-Win64-Shipping.exe+276E3C8]
"FSD-Win64-Shipping.exe"+776DA7: F3 41 0F 5C F9              -  subss xmm7,xmm9
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1132</ID>
                      <Description>"No Drill Heat"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-27
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(DrillerHear,FSD-Win64-Shipping.exe,F3 0F 11 B3 A4 03 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+796FB1)

label(code)
label(return)

newmem:
// Not 0.0 -&gt; 1.0 / Goes from 0.0 to about 5.2-ish
code:
  mov [rbx+000003A4],(float)0.0
  jmp return

DrillerHear:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(DrillerHear)

[DISABLE]

DrillerHear:
  db F3 0F 11 B3 A4 03 00 00

unregistersymbol(DrillerHear)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+796FB1

"FSD-Win64-Shipping.exe"+796F7C: 0F 28 F0                 -  movaps xmm6,xmm0
"FSD-Win64-Shipping.exe"+796F7F: 48 8B 03                 -  mov rax,[rbx]
"FSD-Win64-Shipping.exe"+796F82: 48 8B CB                 -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+796F85: FF 90 40 01 00 00        -  call qword ptr [rax+00000140]
"FSD-Win64-Shipping.exe"+796F8B: F3 0F 59 B3 C0 03 00 00  -  mulss xmm6,[rbx+000003C0]
"FSD-Win64-Shipping.exe"+796F93: 8B 88 28 05 00 00        -  mov ecx,[rax+00000528]
"FSD-Win64-Shipping.exe"+796F99: F3 0F 58 B3 A4 03 00 00  -  addss xmm6,[rbx+000003A4]
"FSD-Win64-Shipping.exe"+796FA1: 89 8B A8 03 00 00        -  mov [rbx+000003A8],ecx
"FSD-Win64-Shipping.exe"+796FA7: 48 8B 8B B0 03 00 00     -  mov rcx,[rbx+000003B0]
"FSD-Win64-Shipping.exe"+796FAE: 0F 28 CE                 -  movaps xmm1,xmm6
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+796FB1: F3 0F 11 B3 A4 03 00 00  -  movss [rbx+000003A4],xmm6
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+796FB9: E8 32 ED 16 01           -  call FSD-Win64-Shipping.exe+1905CF0
"FSD-Win64-Shipping.exe"+796FBE: F3 0F 10 15 3A 2E F8 01  -  movss xmm2,[FSD-Win64-Shipping.exe+2719E00]
"FSD-Win64-Shipping.exe"+796FC6: 0F 57 C9                 -  xorps xmm1,xmm1
"FSD-Win64-Shipping.exe"+796FC9: 0F 2F C1                 -  comiss xmm0,xmm1
"FSD-Win64-Shipping.exe"+796FCC: 72 07                    -  jb FSD-Win64-Shipping.exe+796FD5
"FSD-Win64-Shipping.exe"+796FCE: F3 0F 5D C2              -  minss xmm0,xmm2
"FSD-Win64-Shipping.exe"+796FD2: 0F 28 C8                 -  movaps xmm1,xmm0
"FSD-Win64-Shipping.exe"+796FD5: 0F 2E CA                 -  ucomiss xmm1,xmm2
"FSD-Win64-Shipping.exe"+796FD8: F3 0F 11 8B C4 03 00 00  -  movss [rbx+000003C4],xmm1
"FSD-Win64-Shipping.exe"+796FE0: 75 76                    -  jne FSD-Win64-Shipping.exe+797058
}
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1832</ID>
                  <Description>"Cryo Cannon"</Description>
                  <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1449</ID>
                      <Description>"No Cryo Cannon Heat"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version:
  Date   : 2020-02-17
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(IceGunHeat,FSD-Win64-Shipping.exe,F3 0F 11 89 F4 07 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+7A5AC0)

label(code)
label(return)

newmem:
// Starts at 4.5 and maxes out at 0.0
code:
  add [rcx+000007F4],(float)0.0
  jmp return

IceGunHeat:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(IceGunHeat)

[DISABLE]

IceGunHeat:
  db F3 0F 11 89 F4 07 00 00

unregistersymbol(IceGunHeat)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+7A5AC0

"FSD-Win64-Shipping.exe"+7A5A9E: 0F 28 D1                 -  movaps xmm2,xmm1
"FSD-Win64-Shipping.exe"+7A5AA1: 0F 57 C0                 -  xorps xmm0,xmm0
"FSD-Win64-Shipping.exe"+7A5AA4: 48 8B D9                 -  mov rbx,rcx
"FSD-Win64-Shipping.exe"+7A5AA7: 0F 2F D0                 -  comiss xmm2,xmm0
"FSD-Win64-Shipping.exe"+7A5AAA: 73 05                    -  jae FSD-Win64-Shipping.exe+7A5AB1
"FSD-Win64-Shipping.exe"+7A5AAC: 0F 57 C9                 -  xorps xmm1,xmm1
"FSD-Win64-Shipping.exe"+7A5AAF: EB 0C                    -  jmp FSD-Win64-Shipping.exe+7A5ABD
"FSD-Win64-Shipping.exe"+7A5AB1: F3 0F 10 89 E8 07 00 00  -  movss xmm1,[rcx+000007E8]
"FSD-Win64-Shipping.exe"+7A5AB9: F3 0F 5D CA              -  minss xmm1,xmm2
"FSD-Win64-Shipping.exe"+7A5ABD: 0F 2E CB                 -  ucomiss xmm1,xmm3
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+7A5AC0: F3 0F 11 89 F4 07 00 00  -  movss [rcx+000007F4],xmm1
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+7A5AC8: 74 55                    -  je FSD-Win64-Shipping.exe+7A5B1F
"FSD-Win64-Shipping.exe"+7A5ACA: 0F 2E C8                 -  ucomiss xmm1,xmm0
"FSD-Win64-Shipping.exe"+7A5ACD: 75 1F                    -  jne FSD-Win64-Shipping.exe+7A5AEE
"FSD-Win64-Shipping.exe"+7A5ACF: 80 B9 D0 07 00 00 01     -  cmp byte ptr [rcx+000007D0],01
"FSD-Win64-Shipping.exe"+7A5AD6: 74 16                    -  je FSD-Win64-Shipping.exe+7A5AEE
"FSD-Win64-Shipping.exe"+7A5AD8: B2 01                    -  mov dl,01
"FSD-Win64-Shipping.exe"+7A5ADA: C6 81 D0 07 00 00 01     -  mov byte ptr [rcx+000007D0],01
"FSD-Win64-Shipping.exe"+7A5AE1: E8 1A 46 13 00           -  call FSD-Win64-Shipping.exe+8DA100
"FSD-Win64-Shipping.exe"+7A5AE6: F3 0F 10 8B F4 07 00 00  -  movss xmm1,[rbx+000007F4]
"FSD-Win64-Shipping.exe"+7A5AEE: 44 0F B6 83 D0 07 00 00  -  movzx r8d,byte ptr [rbx+000007D0]
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1149</ID>
                      <Description>"No Cryo Cannon Spinup Time"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version:
  Date   : 2020-02-17
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(IceGunSpinUp,FSD-Win64-Shipping.exe,F3 0F 11 87 CC 07 00 00 E8) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+7AC30D)

label(code)
label(return)

newmem:
// 0.0 = Stopped, 1.0 = Full Blast
code:
  mov [rdi+000007CC],(float)1.0
  jmp return

IceGunSpinUp:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(IceGunSpinUp)

[DISABLE]

IceGunSpinUp:
  db F3 0F 11 87 CC 07 00 00

unregistersymbol(IceGunSpinUp)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+7AC30D

"FSD-Win64-Shipping.exe"+7AC2D8: E8 43 41 E1 FF           -  call FSD-Win64-Shipping.exe+5C0420
"FSD-Win64-Shipping.exe"+7AC2DD: 48 89 87 68 07 00 00     -  mov [rdi+00000768],rax
"FSD-Win64-Shipping.exe"+7AC2E4: B2 01                    -  mov dl,01
"FSD-Win64-Shipping.exe"+7AC2E6: 48 8B CF                 -  mov rcx,rdi
"FSD-Win64-Shipping.exe"+7AC2E9: E8 C2 99 FF FF           -  call FSD-Win64-Shipping.exe+7A5CB0
"FSD-Win64-Shipping.exe"+7AC2EE: 48 8B 8F 88 03 00 00     -  mov rcx,[rdi+00000388]
"FSD-Win64-Shipping.exe"+7AC2F5: 0F 28 C7                 -  movaps xmm0,xmm7
"FSD-Win64-Shipping.exe"+7AC2F8: F3 0F 5E 87 C0 07 00 00  -  divss xmm0,[rdi+000007C0]
"FSD-Win64-Shipping.exe"+7AC300: F3 0F 58 87 CC 07 00 00  -  addss xmm0,[rdi+000007CC]
"FSD-Win64-Shipping.exe"+7AC308: F3 41 0F 5D C0           -  minss xmm0,xmm8
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+7AC30D: F3 0F 11 87 CC 07 00 00  -  movss [rdi+000007CC],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+7AC315: E8 06 06 E1 FF           -  call FSD-Win64-Shipping.exe+5BC920
"FSD-Win64-Shipping.exe"+7AC31A: 44 0F 2E 87 CC 07 00 00  -  ucomiss xmm8,[rdi+000007CC]
"FSD-Win64-Shipping.exe"+7AC322: 0F 85 E3 01 00 00        -  jne FSD-Win64-Shipping.exe+7AC50B
"FSD-Win64-Shipping.exe"+7AC328: 40 38 B7 C8 07 00 00     -  cmp [rdi+000007C8],sil
"FSD-Win64-Shipping.exe"+7AC32F: 0F 85 D6 01 00 00        -  jne FSD-Win64-Shipping.exe+7AC50B
"FSD-Win64-Shipping.exe"+7AC335: C6 87 C8 07 00 00 01     -  mov byte ptr [rdi+000007C8],01
"FSD-Win64-Shipping.exe"+7AC33C: 40 38 B7 40 08 00 00     -  cmp [rdi+00000840],sil
"FSD-Win64-Shipping.exe"+7AC343: 0F 84 A6 01 00 00        -  je FSD-Win64-Shipping.exe+7AC4EF
"FSD-Win64-Shipping.exe"+7AC349: 48 8D 05 10 DF 12 00     -  lea rax,[FSD-Win64-Shipping.exe+8DA260]
"FSD-Win64-Shipping.exe"+7AC350: 89 75 C8                 -  mov [rbp-38],esi
}
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1831</ID>
                  <Description>"Plasma Charger"</Description>
                  <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1157</ID>
                      <Description>"No Plasma Charger Heat"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-27
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(PlasmaChargerHeatChargeup,FSD-Win64-Shipping.exe,F3 0F 11 83 80 07 00 00 0F) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+777ACA)

label(code)
label(return)

newmem:

code:
  mov [rbx+00000780],(float)0.0
  jmp return

PlasmaChargerHeatChargeup:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(PlasmaChargerHeatChargeup)

[DISABLE]

PlasmaChargerHeatChargeup:
  db F3 0F 11 83 80 07 00 00

unregistersymbol(PlasmaChargerHeatChargeup)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+777ACA

"FSD-Win64-Shipping.exe"+777A98: 48 8B CB                       -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+777A9B: E8 B0 A2 15 00                 -  call FSD-Win64-Shipping.exe+8D1D50
"FSD-Win64-Shipping.exe"+777AA0: 0F 2F BB 78 07 00 00           -  comiss xmm7,[rbx+00000778]
"FSD-Win64-Shipping.exe"+777AA7: 77 0A                          -  ja FSD-Win64-Shipping.exe+777AB3
"FSD-Win64-Shipping.exe"+777AA9: F3 0F 10 83 90 07 00 00        -  movss xmm0,[rbx+00000790]
"FSD-Win64-Shipping.exe"+777AB1: EB 08                          -  jmp FSD-Win64-Shipping.exe+777ABB
"FSD-Win64-Shipping.exe"+777AB3: F3 0F 10 83 8C 07 00 00        -  movss xmm0,[rbx+0000078C]
"FSD-Win64-Shipping.exe"+777ABB: F3 0F 59 C6                    -  mulss xmm0,xmm6
"FSD-Win64-Shipping.exe"+777ABF: F3 0F 58 83 80 07 00 00        -  addss xmm0,[rbx+00000780]
"FSD-Win64-Shipping.exe"+777AC7: 0F 2F C7                       -  comiss xmm0,xmm7
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+777ACA: F3 0F 11 83 80 07 00 00        -  movss [rbx+00000780],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+777AD2: 0F 82 A0 00 00 00              -  jb FSD-Win64-Shipping.exe+777B78
"FSD-Win64-Shipping.exe"+777AD8: 48 8B 03                       -  mov rax,[rbx]
"FSD-Win64-Shipping.exe"+777ADB: 48 8B CB                       -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+777ADE: FF 90 E0 06 00 00              -  call qword ptr [rax+000006E0]
"FSD-Win64-Shipping.exe"+777AE4: B2 01                          -  mov dl,01
"FSD-Win64-Shipping.exe"+777AE6: 48 8B CB                       -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+777AE9: E8 12 C1 FF FF                 -  call FSD-Win64-Shipping.exe+773C00
"FSD-Win64-Shipping.exe"+777AEE: C7 83 80 07 00 00 00 00 80 3F  -  mov [rbx+00000780],3F800000
"FSD-Win64-Shipping.exe"+777AF8: EB 7E                          -  jmp FSD-Win64-Shipping.exe+777B78
"FSD-Win64-Shipping.exe"+777AFA: 48 85 C9                       -  test rcx,rcx
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1158</ID>
                      <Description>"No Plasma Charger Heat After Firing"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-27
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(PlasmaChargerHeatAfterFire,FSD-Win64-Shipping.exe,C7 83 80 07 00 00 00 00 80 3F 48) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+76C030)

label(code)
label(return)

newmem:

code:
  mov [rbx+00000780],(float)0.0
  jmp return

PlasmaChargerHeatAfterFire:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(PlasmaChargerHeatAfterFire)

[DISABLE]

PlasmaChargerHeatAfterFire:
  db C7 83 80 07 00 00 00 00 80 3F

unregistersymbol(PlasmaChargerHeatAfterFire)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+76C030

"FSD-Win64-Shipping.exe"+76C005: 77 0A                          -  ja FSD-Win64-Shipping.exe+76C011
"FSD-Win64-Shipping.exe"+76C007: F3 0F 58 83 98 07 00 00        -  addss xmm0,[rbx+00000798]
"FSD-Win64-Shipping.exe"+76C00F: EB 08                          -  jmp FSD-Win64-Shipping.exe+76C019
"FSD-Win64-Shipping.exe"+76C011: F3 0F 58 83 94 07 00 00        -  addss xmm0,[rbx+00000794]
"FSD-Win64-Shipping.exe"+76C019: 0F 2F C1                       -  comiss xmm0,xmm1
"FSD-Win64-Shipping.exe"+76C01C: F3 0F 11 83 80 07 00 00        -  movss [rbx+00000780],xmm0
"FSD-Win64-Shipping.exe"+76C024: 72 14                          -  jb FSD-Win64-Shipping.exe+76C03A
"FSD-Win64-Shipping.exe"+76C026: B2 01                          -  mov dl,01
"FSD-Win64-Shipping.exe"+76C028: 48 8B CB                       -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+76C02B: E8 D0 7B 00 00                 -  call FSD-Win64-Shipping.exe+773C00
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+76C030: C7 83 80 07 00 00 00 00 80 3F  -  mov [rbx+00000780],3F800000
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+76C03A: 48 8B CB                       -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+76C03D: 48 83 C4 20                    -  add rsp,20
"FSD-Win64-Shipping.exe"+76C041: 5B                             -  pop rbx
"FSD-Win64-Shipping.exe"+76C042: E9 C9 57 FE FF                 -  jmp FSD-Win64-Shipping.exe+751810
"FSD-Win64-Shipping.exe"+76C047: CC                             -  int 3 
"FSD-Win64-Shipping.exe"+76C048: CC                             -  int 3 
"FSD-Win64-Shipping.exe"+76C049: CC                             -  int 3 
"FSD-Win64-Shipping.exe"+76C04A: CC                             -  int 3 
"FSD-Win64-Shipping.exe"+76C04B: CC                             -  int 3 
"FSD-Win64-Shipping.exe"+76C04C: CC                             -  int 3 
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1173</ID>
                      <Description>"No Plasma Charger Spinup Time (Easily Noticed By Other Players, Use Wisely)"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-27
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(PlasmaChargerChargupTime,FSD-Win64-Shipping.exe,F3 0F 11 83 78 07 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+777A7E)

label(code)
label(return)

newmem:

code:
  mov [rbx+00000778],(float)1.0
  jmp return

PlasmaChargerChargupTime:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(PlasmaChargerChargupTime)

[DISABLE]

PlasmaChargerChargupTime:
  db F3 0F 11 83 78 07 00 00

unregistersymbol(PlasmaChargerChargupTime)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+777A7E

"FSD-Win64-Shipping.exe"+777A43: 48 89 44 24 20                 -  mov [rsp+20],rax
"FSD-Win64-Shipping.exe"+777A48: E8 F3 7E 22 01                 -  call FSD-Win64-Shipping.exe+199F940
"FSD-Win64-Shipping.exe"+777A4D: 48 8B BC 24 D8 00 00 00        -  mov rdi,[rsp+000000D8]
"FSD-Win64-Shipping.exe"+777A55: 48 89 83 50 07 00 00           -  mov [rbx+00000750],rax
"FSD-Win64-Shipping.exe"+777A5C: 0F 28 C6                       -  movaps xmm0,xmm6
"FSD-Win64-Shipping.exe"+777A5F: 48 8D 8B 10 07 00 00           -  lea rcx,[rbx+00000710]
"FSD-Win64-Shipping.exe"+777A66: F3 0F 59 83 70 07 00 00        -  mulss xmm0,[rbx+00000770]
"FSD-Win64-Shipping.exe"+777A6E: 48 8D 55 67                    -  lea rdx,[rbp+67]
"FSD-Win64-Shipping.exe"+777A72: F3 0F 58 83 78 07 00 00        -  addss xmm0,[rbx+00000778]
"FSD-Win64-Shipping.exe"+777A7A: F3 0F 5D C7                    -  minss xmm0,xmm7
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+777A7E: F3 0F 11 83 78 07 00 00        -  movss [rbx+00000778],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+777A86: F3 0F 11 45 67                 -  movss [rbp+67],xmm0
"FSD-Win64-Shipping.exe"+777A8B: E8 70 18 B6 FF                 -  call FSD-Win64-Shipping.exe+2D9300
"FSD-Win64-Shipping.exe"+777A90: F3 0F 10 8B 78 07 00 00        -  movss xmm1,[rbx+00000778]
"FSD-Win64-Shipping.exe"+777A98: 48 8B CB                       -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+777A9B: E8 B0 A2 15 00                 -  call FSD-Win64-Shipping.exe+8D1D50
"FSD-Win64-Shipping.exe"+777AA0: 0F 2F BB 78 07 00 00           -  comiss xmm7,[rbx+00000778]
"FSD-Win64-Shipping.exe"+777AA7: 77 0A                          -  ja FSD-Win64-Shipping.exe+777AB3
"FSD-Win64-Shipping.exe"+777AA9: F3 0F 10 83 90 07 00 00        -  movss xmm0,[rbx+00000790]
"FSD-Win64-Shipping.exe"+777AB1: EB 08                          -  jmp FSD-Win64-Shipping.exe+777ABB
"FSD-Win64-Shipping.exe"+777AB3: F3 0F 10 83 8C 07 00 00        -  movss xmm0,[rbx+0000078C]
}
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1610</ID>
                  <Description>"Unlimited Satchel Charge"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version:
  Date   : 2020-01-31
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(UnlimitedSatchel,FSD-Win64-Shipping.exe,C4 89 81 9C 01 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+7ABF8B)

label(code)
label(return)

newmem:

code:
  add [rcx+0000019C],(int)0
  jmp return

UnlimitedSatchel+01:
  jmp newmem
  nop
return:
registersymbol(UnlimitedSatchel)

[DISABLE]

UnlimitedSatchel+01:
  db 89 81 9C 01 00 00

unregistersymbol(UnlimitedSatchel)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+7ABF8B

"FSD-Win64-Shipping.exe"+7ABF64: 48 8B 81 E8 00 00 00        -  mov rax,[rcx+000000E8]
"FSD-Win64-Shipping.exe"+7ABF6B: 80 B8 18 01 00 00 03        -  cmp byte ptr [rax+00000118],03
"FSD-Win64-Shipping.exe"+7ABF72: 75 2D                       -  jne FSD-Win64-Shipping.exe+7ABFA1
"FSD-Win64-Shipping.exe"+7ABF74: 8B 81 9C 01 00 00           -  mov eax,[rcx+0000019C]
"FSD-Win64-Shipping.exe"+7ABF7A: 85 C0                       -  test eax,eax
"FSD-Win64-Shipping.exe"+7ABF7C: 7E 23                       -  jle FSD-Win64-Shipping.exe+7ABFA1
"FSD-Win64-Shipping.exe"+7ABF7E: FF C8                       -  dec eax
"FSD-Win64-Shipping.exe"+7ABF80: 48 8D 54 24 5C              -  lea rdx,[rsp+5C]
"FSD-Win64-Shipping.exe"+7ABF85: 85 C0                       -  test eax,eax
"FSD-Win64-Shipping.exe"+7ABF87: 41 0F 4E C4                 -  cmovle eax,r12d
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+7ABF8B: 89 81 9C 01 00 00           -  mov [rcx+0000019C],eax
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+7ABF91: 48 81 C1 10 01 00 00        -  add rcx,00000110
"FSD-Win64-Shipping.exe"+7ABF98: 89 44 24 5C                 -  mov [rsp+5C],eax
"FSD-Win64-Shipping.exe"+7ABF9C: E8 4F 2B B3 FF              -  call FSD-Win64-Shipping.exe+2DEAF0
"FSD-Win64-Shipping.exe"+7ABFA1: 48 8B 83 88 03 00 00        -  mov rax,[rbx+00000388]
"FSD-Win64-Shipping.exe"+7ABFA8: 44 88 A3 28 05 00 00        -  mov [rbx+00000528],r12l
"FSD-Win64-Shipping.exe"+7ABFAF: 66 C7 83 2A 05 00 00 01 01  -  mov word ptr [rbx+0000052A],0101
"FSD-Win64-Shipping.exe"+7ABFB8: 80 B8 18 01 00 00 03        -  cmp byte ptr [rax+00000118],03
"FSD-Win64-Shipping.exe"+7ABFBF: 75 52                       -  jne FSD-Win64-Shipping.exe+7AC013
"FSD-Win64-Shipping.exe"+7ABFC1: 48 8B 8B C0 04 00 00        -  mov rcx,[rbx+000004C0]
"FSD-Win64-Shipping.exe"+7ABFC8: 48 8B 01                    -  mov rax,[rcx]
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>669</ID>
              <Description>"Gunner"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" Activated="1" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>1827</ID>
                  <Description>"Shield Generator"</Description>
                  <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1813</ID>
                      <Description>"Unlimited Shield Generators (Host Required)"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-02-04
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(UnlimitedShieldGenerators,FSD-Win64-Shipping.exe,00 48 8B 81 E8 00 00 00 80 B8 18 01 00 00 03 75 2C 8B 81 9C 01 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+79C994)

label(code)
label(return)

newmem:

code:
  mov eax,(int)0
  jmp return

UnlimitedShieldGenerators+11:
  jmp newmem
  nop
return:
registersymbol(UnlimitedShieldGenerators)

[DISABLE]

UnlimitedShieldGenerators+11:
  db 8B 81 9C 01 00 00

unregistersymbol(UnlimitedShieldGenerators)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+79C994

"FSD-Win64-Shipping.exe"+79C962: 85 C0                    -  test eax,eax
"FSD-Win64-Shipping.exe"+79C964: 0F 4E C3                 -  cmovle eax,ebx
"FSD-Win64-Shipping.exe"+79C967: 89 81 9C 01 00 00        -  mov [rcx+0000019C],eax
"FSD-Win64-Shipping.exe"+79C96D: 48 81 C1 10 01 00 00     -  add rcx,00000110
"FSD-Win64-Shipping.exe"+79C974: 89 44 24 40              -  mov [rsp+40],eax
"FSD-Win64-Shipping.exe"+79C978: E8 53 21 B4 FF           -  call FSD-Win64-Shipping.exe+2DEAD0
"FSD-Win64-Shipping.exe"+79C97D: 48 8B 8D D8 04 00 00     -  mov rcx,[rbp+000004D8]
"FSD-Win64-Shipping.exe"+79C984: 48 8B 81 E8 00 00 00     -  mov rax,[rcx+000000E8]
"FSD-Win64-Shipping.exe"+79C98B: 80 B8 18 01 00 00 03     -  cmp byte ptr [rax+00000118],03
"FSD-Win64-Shipping.exe"+79C992: 75 2C                    -  jne FSD-Win64-Shipping.exe+79C9C0
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+79C994: 8B 81 9C 01 00 00        -  mov eax,[rcx+0000019C]
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+79C99A: 85 C0                    -  test eax,eax
"FSD-Win64-Shipping.exe"+79C99C: 7E 22                    -  jle FSD-Win64-Shipping.exe+79C9C0
"FSD-Win64-Shipping.exe"+79C99E: FF C8                    -  dec eax
"FSD-Win64-Shipping.exe"+79C9A0: 48 8D 54 24 40           -  lea rdx,[rsp+40]
"FSD-Win64-Shipping.exe"+79C9A5: 85 C0                    -  test eax,eax
"FSD-Win64-Shipping.exe"+79C9A7: 0F 4E C3                 -  cmovle eax,ebx
"FSD-Win64-Shipping.exe"+79C9AA: 89 81 9C 01 00 00        -  mov [rcx+0000019C],eax
"FSD-Win64-Shipping.exe"+79C9B0: 48 81 C1 10 01 00 00     -  add rcx,00000110
"FSD-Win64-Shipping.exe"+79C9B7: 89 44 24 40              -  mov [rsp+40],eax
"FSD-Win64-Shipping.exe"+79C9BB: E8 10 21 B4 FF           -  call FSD-Win64-Shipping.exe+2DEAD0
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1192</ID>
                      <Description>"Instant Shield Generator Recharge (Host Required)"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version:
  Date   : 2020-01-31
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InstantShieldRecharge,FSD-Win64-Shipping.exe,F3 0F 11 B3 F0 04 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+7A896D)

label(code)
label(return)

newmem:
// Starts at 0.0 Ends at 1.0
code:
  mov [rbx+000004F0],(float)1.0
  jmp return

InstantShieldRecharge:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(InstantShieldRecharge)

[DISABLE]

InstantShieldRecharge:
  db F3 0F 11 B3 F0 04 00 00

unregistersymbol(InstantShieldRecharge)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+7A896D

"FSD-Win64-Shipping.exe"+7A8933: 85 C0                    -  test eax,eax
"FSD-Win64-Shipping.exe"+7A8935: 0F 84 F6 00 00 00        -  je FSD-Win64-Shipping.exe+7A8A31
"FSD-Win64-Shipping.exe"+7A893B: F3 0F 5E B3 E8 04 00 00  -  divss xmm6,[rbx+000004E8]
"FSD-Win64-Shipping.exe"+7A8943: 4C 8B 8B 88 03 00 00     -  mov r9,[rbx+00000388]
"FSD-Win64-Shipping.exe"+7A894A: 48 8D 8B F8 04 00 00     -  lea rcx,[rbx+000004F8]
"FSD-Win64-Shipping.exe"+7A8951: 4C 8B C3                 -  mov r8,rbx
"FSD-Win64-Shipping.exe"+7A8954: 0F 29 7C 24 20           -  movaps [rsp+20],xmm7
"FSD-Win64-Shipping.exe"+7A8959: F3 0F 58 B3 F0 04 00 00  -  addss xmm6,[rbx+000004F0]
"FSD-Win64-Shipping.exe"+7A8961: F3 0F 10 3D CF FB E8 01  -  movss xmm7,[FSD-Win64-Shipping.exe+2638538]
"FSD-Win64-Shipping.exe"+7A8969: F3 0F 5D F7              -  minss xmm6,xmm7
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+7A896D: F3 0F 11 B3 F0 04 00 00  -  movss [rbx+000004F0],xmm6
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+7A8975: F3 0F 5D 35 47 CE FB 01  -  minss xmm6,[FSD-Win64-Shipping.exe+27657C4]
"FSD-Win64-Shipping.exe"+7A897D: 0F 28 CE                 -  movaps xmm1,xmm6
"FSD-Win64-Shipping.exe"+7A8980: E8 FB 1B E5 FF           -  call FSD-Win64-Shipping.exe+5FA580
"FSD-Win64-Shipping.exe"+7A8985: 80 BB 18 01 00 00 03     -  cmp byte ptr [rbx+00000118],03
"FSD-Win64-Shipping.exe"+7A898C: 0F 85 80 00 00 00        -  jne FSD-Win64-Shipping.exe+7A8A12
"FSD-Win64-Shipping.exe"+7A8992: 0F 2F BB F0 04 00 00     -  comiss xmm7,[rbx+000004F0]
"FSD-Win64-Shipping.exe"+7A8999: 77 77                    -  ja FSD-Win64-Shipping.exe+7A8A12
"FSD-Win64-Shipping.exe"+7A899B: 48 8B 8B E0 04 00 00     -  mov rcx,[rbx+000004E0]
"FSD-Win64-Shipping.exe"+7A89A2: 48 8B 81 E8 00 00 00     -  mov rax,[rcx+000000E8]
"FSD-Win64-Shipping.exe"+7A89A9: 80 B8 18 01 00 00 03     -  cmp byte ptr [rax+00000118],03
}
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1829</ID>
                  <Description>"Minigun"</Description>
                  <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1825</ID>
                      <Description>"Instant Minigun Firing Rate"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-02-04
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InstantMinigunFiring,FSD-Win64-Shipping.exe,F3 0F 11 87 B8 06 00 00 77 2B) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+7A9F6C)

label(code)
label(return)

newmem:
// FSD-Win64-Shipping.ABeltDrivenWeapon::Tick+2FC - F3 0F11 87 B8060000   - movss [rdi+000006B8],xmm0
code:
  mov [rdi+000006B8],(float)0.0
  jmp return

InstantMinigunFiring:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(InstantMinigunFiring)

[DISABLE]

InstantMinigunFiring:
  db F3 0F 11 87 B8 06 00 00

unregistersymbol(InstantMinigunFiring)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+7A9F6C

"FSD-Win64-Shipping.exe"+7A9F40: 84 C0                    -  test al,al
"FSD-Win64-Shipping.exe"+7A9F42: 0F 84 63 01 00 00        -  je FSD-Win64-Shipping.exe+7AA0AB
"FSD-Win64-Shipping.exe"+7A9F48: 44 0F 2E 87 38 07 00 00  -  ucomiss xmm8,[rdi+00000738]
"FSD-Win64-Shipping.exe"+7A9F50: 0F B6 87 0A 07 00 00     -  movzx eax,byte ptr [rdi+0000070A]
"FSD-Win64-Shipping.exe"+7A9F57: 75 3D                    -  jne FSD-Win64-Shipping.exe+7A9F96
"FSD-Win64-Shipping.exe"+7A9F59: 3C 02                    -  cmp al,02
"FSD-Win64-Shipping.exe"+7A9F5B: 75 27                    -  jne FSD-Win64-Shipping.exe+7A9F84
"FSD-Win64-Shipping.exe"+7A9F5D: F3 0F 10 87 B8 06 00 00  -  movss xmm0,[rdi+000006B8]
"FSD-Win64-Shipping.exe"+7A9F65: F3 0F 5C C7              -  subss xmm0,xmm7
"FSD-Win64-Shipping.exe"+7A9F69: 0F 2F C6                 -  comiss xmm0,xmm6
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+7A9F6C: F3 0F 11 87 B8 06 00 00  -  movss [rdi+000006B8],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+7A9F74: 77 2B                    -  ja FSD-Win64-Shipping.exe+7A9FA1
"FSD-Win64-Shipping.exe"+7A9F76: 48 8B 07                 -  mov rax,[rdi]
"FSD-Win64-Shipping.exe"+7A9F79: 48 8B CF                 -  mov rcx,rdi
"FSD-Win64-Shipping.exe"+7A9F7C: FF 90 C0 07 00 00        -  call qword ptr [rax+000007C0]
"FSD-Win64-Shipping.exe"+7A9F82: EB 1D                    -  jmp FSD-Win64-Shipping.exe+7A9FA1
"FSD-Win64-Shipping.exe"+7A9F84: 3C 01                    -  cmp al,01
"FSD-Win64-Shipping.exe"+7A9F86: 75 19                    -  jne FSD-Win64-Shipping.exe+7A9FA1
"FSD-Win64-Shipping.exe"+7A9F88: 48 8B 07                 -  mov rax,[rdi]
"FSD-Win64-Shipping.exe"+7A9F8B: 48 8B CF                 -  mov rcx,rdi
"FSD-Win64-Shipping.exe"+7A9F8E: FF 90 C0 07 00 00        -  call qword ptr [rax+000007C0]
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1278</ID>
                      <Description>"Max Minigun Heat (Can't be used with "No Minigun Heat")"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-27
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MinigunHeat,FSD-Win64-Shipping.exe,F3 0F 11 B3 A4 03 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+796FB1)

label(code)
label(return)

newmem:
// Minigun heat between 0.00 - 9.99
code:
  mov [rbx+000003A4],(float)9.0
  jmp return

MinigunHeat:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(MinigunHeat)

[DISABLE]

MinigunHeat:
  db F3 0F 11 B3 A4 03 00 00

unregistersymbol(MinigunHeat)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+796FB1

"FSD-Win64-Shipping.exe"+796F7C: 0F 28 F0                 -  movaps xmm6,xmm0
"FSD-Win64-Shipping.exe"+796F7F: 48 8B 03                 -  mov rax,[rbx]
"FSD-Win64-Shipping.exe"+796F82: 48 8B CB                 -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+796F85: FF 90 40 01 00 00        -  call qword ptr [rax+00000140]
"FSD-Win64-Shipping.exe"+796F8B: F3 0F 59 B3 C0 03 00 00  -  mulss xmm6,[rbx+000003C0]
"FSD-Win64-Shipping.exe"+796F93: 8B 88 28 05 00 00        -  mov ecx,[rax+00000528]
"FSD-Win64-Shipping.exe"+796F99: F3 0F 58 B3 A4 03 00 00  -  addss xmm6,[rbx+000003A4]
"FSD-Win64-Shipping.exe"+796FA1: 89 8B A8 03 00 00        -  mov [rbx+000003A8],ecx
"FSD-Win64-Shipping.exe"+796FA7: 48 8B 8B B0 03 00 00     -  mov rcx,[rbx+000003B0]
"FSD-Win64-Shipping.exe"+796FAE: 0F 28 CE                 -  movaps xmm1,xmm6
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+796FB1: F3 0F 11 B3 A4 03 00 00  -  movss [rbx+000003A4],xmm6
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+796FB9: E8 32 ED 16 01           -  call FSD-Win64-Shipping.exe+1905CF0
"FSD-Win64-Shipping.exe"+796FBE: F3 0F 10 15 3A 2E F8 01  -  movss xmm2,[FSD-Win64-Shipping.exe+2719E00]
"FSD-Win64-Shipping.exe"+796FC6: 0F 57 C9                 -  xorps xmm1,xmm1
"FSD-Win64-Shipping.exe"+796FC9: 0F 2F C1                 -  comiss xmm0,xmm1
"FSD-Win64-Shipping.exe"+796FCC: 72 07                    -  jb FSD-Win64-Shipping.exe+796FD5
"FSD-Win64-Shipping.exe"+796FCE: F3 0F 5D C2              -  minss xmm0,xmm2
"FSD-Win64-Shipping.exe"+796FD2: 0F 28 C8                 -  movaps xmm1,xmm0
"FSD-Win64-Shipping.exe"+796FD5: 0F 2E CA                 -  ucomiss xmm1,xmm2
"FSD-Win64-Shipping.exe"+796FD8: F3 0F 11 8B C4 03 00 00  -  movss [rbx+000003C4],xmm1
"FSD-Win64-Shipping.exe"+796FE0: 75 76                    -  jne FSD-Win64-Shipping.exe+797058
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1197</ID>
                      <Description>"No Minigun Heat (Can't be used with "Max Minigun Heat")"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-27
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MinigunHeat,FSD-Win64-Shipping.exe,F3 0F 11 B3 A4 03 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+796FB1)

label(code)
label(return)

newmem:
// Minigun heat between 0.00 - 9.99
code:
  mov [rbx+000003A4],(float)0.00
  jmp return

MinigunHeat:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(MinigunHeat)

[DISABLE]

MinigunHeat:
  db F3 0F 11 B3 A4 03 00 00

unregistersymbol(MinigunHeat)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+796FB1

"FSD-Win64-Shipping.exe"+796F7C: 0F 28 F0                 -  movaps xmm6,xmm0
"FSD-Win64-Shipping.exe"+796F7F: 48 8B 03                 -  mov rax,[rbx]
"FSD-Win64-Shipping.exe"+796F82: 48 8B CB                 -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+796F85: FF 90 40 01 00 00        -  call qword ptr [rax+00000140]
"FSD-Win64-Shipping.exe"+796F8B: F3 0F 59 B3 C0 03 00 00  -  mulss xmm6,[rbx+000003C0]
"FSD-Win64-Shipping.exe"+796F93: 8B 88 28 05 00 00        -  mov ecx,[rax+00000528]
"FSD-Win64-Shipping.exe"+796F99: F3 0F 58 B3 A4 03 00 00  -  addss xmm6,[rbx+000003A4]
"FSD-Win64-Shipping.exe"+796FA1: 89 8B A8 03 00 00        -  mov [rbx+000003A8],ecx
"FSD-Win64-Shipping.exe"+796FA7: 48 8B 8B B0 03 00 00     -  mov rcx,[rbx+000003B0]
"FSD-Win64-Shipping.exe"+796FAE: 0F 28 CE                 -  movaps xmm1,xmm6
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+796FB1: F3 0F 11 B3 A4 03 00 00  -  movss [rbx+000003A4],xmm6
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+796FB9: E8 32 ED 16 01           -  call FSD-Win64-Shipping.exe+1905CF0
"FSD-Win64-Shipping.exe"+796FBE: F3 0F 10 15 3A 2E F8 01  -  movss xmm2,[FSD-Win64-Shipping.exe+2719E00]
"FSD-Win64-Shipping.exe"+796FC6: 0F 57 C9                 -  xorps xmm1,xmm1
"FSD-Win64-Shipping.exe"+796FC9: 0F 2F C1                 -  comiss xmm0,xmm1
"FSD-Win64-Shipping.exe"+796FCC: 72 07                    -  jb FSD-Win64-Shipping.exe+796FD5
"FSD-Win64-Shipping.exe"+796FCE: F3 0F 5D C2              -  minss xmm0,xmm2
"FSD-Win64-Shipping.exe"+796FD2: 0F 28 C8                 -  movaps xmm1,xmm0
"FSD-Win64-Shipping.exe"+796FD5: 0F 2E CA                 -  ucomiss xmm1,xmm2
"FSD-Win64-Shipping.exe"+796FD8: F3 0F 11 8B C4 03 00 00  -  movss [rbx+000003C4],xmm1
"FSD-Win64-Shipping.exe"+796FE0: 75 76                    -  jne FSD-Win64-Shipping.exe+797058
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1195</ID>
                      <Description>"No Minigun Spinup Time"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-27
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MinigunSpinupTime,FSD-Win64-Shipping.exe,F3 0F 11 87 38 07 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+776EE2)

label(code)
label(return)

newmem:
// Minigun spinup time between 0.0 and 1.0
code:
  mov [rdi+00000738],(float)1.0
  jmp return

MinigunSpinupTime:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(MinigunSpinupTime)

[DISABLE]

MinigunSpinupTime:
  db F3 0F 11 87 38 07 00 00

unregistersymbol(MinigunSpinupTime)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+776EE2

"FSD-Win64-Shipping.exe"+776EB4: 48 8B 01                    -  mov rax,[rcx]
"FSD-Win64-Shipping.exe"+776EB7: FF 90 88 06 00 00           -  call qword ptr [rax+00000688]
"FSD-Win64-Shipping.exe"+776EBD: 84 C0                       -  test al,al
"FSD-Win64-Shipping.exe"+776EBF: 75 38                       -  jne FSD-Win64-Shipping.exe+776EF9
"FSD-Win64-Shipping.exe"+776EC1: 48 8B 8F 88 03 00 00        -  mov rcx,[rdi+00000388]
"FSD-Win64-Shipping.exe"+776EC8: 0F 28 C7                    -  movaps xmm0,xmm7
"FSD-Win64-Shipping.exe"+776ECB: F3 0F 5E 87 30 07 00 00     -  divss xmm0,[rdi+00000730]
"FSD-Win64-Shipping.exe"+776ED3: B3 01                       -  mov bl,01
"FSD-Win64-Shipping.exe"+776ED5: F3 0F 58 87 38 07 00 00     -  addss xmm0,[rdi+00000738]
"FSD-Win64-Shipping.exe"+776EDD: F3 41 0F 5D C0              -  minss xmm0,xmm8
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+776EE2: F3 0F 11 87 38 07 00 00     -  movss [rdi+00000738],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+776EEA: E8 51 C5 E4 FF              -  call FSD-Win64-Shipping.exe+5C3440
"FSD-Win64-Shipping.exe"+776EEF: F3 0F 10 8F 38 07 00 00     -  movss xmm1,[rdi+00000738]
"FSD-Win64-Shipping.exe"+776EF7: EB 23                       -  jmp FSD-Win64-Shipping.exe+776F1C
"FSD-Win64-Shipping.exe"+776EF9: F3 0F 10 8F 38 07 00 00     -  movss xmm1,[rdi+00000738]
"FSD-Win64-Shipping.exe"+776F01: 0F 28 C7                    -  movaps xmm0,xmm7
"FSD-Win64-Shipping.exe"+776F04: F3 0F 5E 87 34 07 00 00     -  divss xmm0,[rdi+00000734]
"FSD-Win64-Shipping.exe"+776F0C: F3 0F 5C C8                 -  subss xmm1,xmm0
"FSD-Win64-Shipping.exe"+776F10: F3 0F 5F CE                 -  maxss xmm1,xmm6
"FSD-Win64-Shipping.exe"+776F14: F3 0F 11 8F 38 07 00 00     -  movss [rdi+00000738],xmm1
"FSD-Win64-Shipping.exe"+776F1C: 33 F6                       -  xor esi,esi
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1221</ID>
                      <Description>"No Minigun Spread (Can't be used with "Common Class-&gt;No Weapon Spread")"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-27
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MinigunAccuracy,FSD-Win64-Shipping.exe,F3 0F 11 83 44 02 00 00 48) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+795ADA)

label(code)
label(return)

newmem:
// Between 0.0 and 3.4890159
code:
  mov [rbx+00000244],(float)3.489
  jmp return

MinigunAccuracy:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(MinigunAccuracy)

[DISABLE]

MinigunAccuracy:
  db F3 0F 11 83 44 02 00 00

unregistersymbol(MinigunAccuracy)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+795ADA

"FSD-Win64-Shipping.exe"+795AA4: 4C 8B CF                 -  mov r9,rdi
"FSD-Win64-Shipping.exe"+795AA7: 48 89 44 24 20           -  mov [rsp+20],rax
"FSD-Win64-Shipping.exe"+795AAC: 49 8B CA                 -  mov rcx,r10
"FSD-Win64-Shipping.exe"+795AAF: E8 2C A9 09 01           -  call FSD-Win64-Shipping.exe+18303E0
"FSD-Win64-Shipping.exe"+795AB4: 48 8B 00                 -  mov rax,[rax]
"FSD-Win64-Shipping.exe"+795AB7: 48 89 83 E8 02 00 00     -  mov [rbx+000002E8],rax
"FSD-Win64-Shipping.exe"+795ABE: F3 0F 10 83 68 01 00 00  -  movss xmm0,[rbx+00000168]
"FSD-Win64-Shipping.exe"+795AC6: F3 0F 58 83 44 02 00 00  -  addss xmm0,[rbx+00000244]
"FSD-Win64-Shipping.exe"+795ACE: 48 8B 4D F0              -  mov rcx,[rbp-10]
"FSD-Win64-Shipping.exe"+795AD2: F3 0F 5D 83 B0 01 00 00  -  minss xmm0,[rbx+000001B0]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+795ADA: F3 0F 11 83 44 02 00 00  -  movss [rbx+00000244],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+795AE2: 48 85 C9                 -  test rcx,rcx
"FSD-Win64-Shipping.exe"+795AE5: 74 05                    -  je FSD-Win64-Shipping.exe+795AEC
"FSD-Win64-Shipping.exe"+795AE7: E8 24 BE 26 00           -  call FSD-Win64-Shipping.exe+A01910
"FSD-Win64-Shipping.exe"+795AEC: 48 8B 4D D0              -  mov rcx,[rbp-30]
"FSD-Win64-Shipping.exe"+795AF0: 48 85 C9                 -  test rcx,rcx
"FSD-Win64-Shipping.exe"+795AF3: 74 05                    -  je FSD-Win64-Shipping.exe+795AFA
"FSD-Win64-Shipping.exe"+795AF5: E8 16 BE 26 00           -  call FSD-Win64-Shipping.exe+A01910
"FSD-Win64-Shipping.exe"+795AFA: 48 8B 4D 00              -  mov rcx,[rbp+00]
"FSD-Win64-Shipping.exe"+795AFE: 48 33 CC                 -  xor rcx,rsp
"FSD-Win64-Shipping.exe"+795B01: E8 9A DE EC 01           -  call FSD-Win64-Shipping.exe+26639A0
}
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1828</ID>
                  <Description>"Zipline"</Description>
                  <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1748</ID>
                      <Description>"Unlimited Zipline Angle (Enable Before Mission Launch)"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-01-31
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ZipMod2,FSD-Win64-Shipping.exe,F3 0F 11 83 1C 07 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+6C9CFB)

label(code)
label(return)

label(ZiplineMod2)
registersymbol(ZiplineMod2)
newmem:

code:
  mulss xmm0,[ZiplineMod2]
  movss [rbx+0000071C],xmm0
  jmp return

ZiplineMod2:
  dd (float)100.0

ZipMod2:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(ZipMod2)

[DISABLE]

ZipMod2:
  db F3 0F 11 83 1C 07 00 00

unregistersymbol(ZiplineMod2)
unregistersymbol(ZipMod2)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+6C9CFB

"FSD-Win64-Shipping.exe"+6C9CC8: F3 0F 10 87 4C 01 00 00  -  movss xmm0,[rdi+0000014C]
"FSD-Win64-Shipping.exe"+6C9CD0: F3 0F 58 83 10 07 00 00  -  addss xmm0,[rbx+00000710]
"FSD-Win64-Shipping.exe"+6C9CD8: E9 23 63 81 FF           -  jmp 7FF78AB20000
"FSD-Win64-Shipping.exe"+6C9CDD: 0F 1F 00                 -  nop [rax]
"FSD-Win64-Shipping.exe"+6C9CE0: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"FSD-Win64-Shipping.exe"+6C9CE5: 48 83 C4 20              -  add rsp,20
"FSD-Win64-Shipping.exe"+6C9CE9: 5F                       -  pop rdi
"FSD-Win64-Shipping.exe"+6C9CEA: C3                       -  ret 
"FSD-Win64-Shipping.exe"+6C9CEB: F3 0F 10 87 4C 01 00 00  -  movss xmm0,[rdi+0000014C]
"FSD-Win64-Shipping.exe"+6C9CF3: F3 0F 58 83 1C 07 00 00  -  addss xmm0,[rbx+0000071C]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+6C9CFB: F3 0F 11 83 1C 07 00 00  -  movss [rbx+0000071C],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+6C9D03: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"FSD-Win64-Shipping.exe"+6C9D08: 48 83 C4 20              -  add rsp,20
"FSD-Win64-Shipping.exe"+6C9D0C: 5F                       -  pop rdi
"FSD-Win64-Shipping.exe"+6C9D0D: C3                       -  ret 
"FSD-Win64-Shipping.exe"+6C9D0E: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+6C9D0F: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+6C9D10: 48 89 6C 24 18           -  mov [rsp+18],rbp
"FSD-Win64-Shipping.exe"+6C9D15: 48 89 74 24 20           -  mov [rsp+20],rsi
"FSD-Win64-Shipping.exe"+6C9D1A: 41 54                    -  push r12
"FSD-Win64-Shipping.exe"+6C9D1C: 41 56                    -  push r14
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1747</ID>
                      <Description>"Unlimited Zipline Range (Enable Before Mission Launch)"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-01-31
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ZiplineMod,FSD-Win64-Shipping.exe,F3 0F 11 83 10 07 00 00 48 8B 5C 24 30 48 83 C4 20 5F C3 F3 0F 10) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+6C9CD8)

label(code)
label(return)

label(ZipMod)
registersymbol(ZipMod)

newmem:

code:
  mulss xmm0,[ZipMod]
  movss [rbx+00000710],xmm0
  jmp return

ZipMod:
  dd (float)100.0

ZiplineMod:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(ZiplineMod)

[DISABLE]

ZiplineMod:
  db F3 0F 11 83 10 07 00 00

unregistersymbol(ZipMod)
unregistersymbol(ZiplineMod)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+6C9CD8

"FSD-Win64-Shipping.exe"+6C9CA5: 48 8B CB                 -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+6C9CA8: 41 FF 90 E8 05 00 00     -  call qword ptr [r8+000005E8]
"FSD-Win64-Shipping.exe"+6C9CAF: 48 8B 8F 50 01 00 00     -  mov rcx,[rdi+00000150]
"FSD-Win64-Shipping.exe"+6C9CB6: 48 89 88 60 01 00 00     -  mov [rax+00000160],rcx
"FSD-Win64-Shipping.exe"+6C9CBD: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"FSD-Win64-Shipping.exe"+6C9CC2: 48 83 C4 20              -  add rsp,20
"FSD-Win64-Shipping.exe"+6C9CC6: 5F                       -  pop rdi
"FSD-Win64-Shipping.exe"+6C9CC7: C3                       -  ret 
"FSD-Win64-Shipping.exe"+6C9CC8: F3 0F 10 87 4C 01 00 00  -  movss xmm0,[rdi+0000014C]
"FSD-Win64-Shipping.exe"+6C9CD0: F3 0F 58 83 10 07 00 00  -  addss xmm0,[rbx+00000710]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+6C9CD8: F3 0F 11 83 10 07 00 00  -  movss [rbx+00000710],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+6C9CE0: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"FSD-Win64-Shipping.exe"+6C9CE5: 48 83 C4 20              -  add rsp,20
"FSD-Win64-Shipping.exe"+6C9CE9: 5F                       -  pop rdi
"FSD-Win64-Shipping.exe"+6C9CEA: C3                       -  ret 
"FSD-Win64-Shipping.exe"+6C9CEB: F3 0F 10 87 4C 01 00 00  -  movss xmm0,[rdi+0000014C]
"FSD-Win64-Shipping.exe"+6C9CF3: F3 0F 58 83 1C 07 00 00  -  addss xmm0,[rbx+0000071C]
"FSD-Win64-Shipping.exe"+6C9CFB: F3 0F 11 83 1C 07 00 00  -  movss [rbx+0000071C],xmm0
"FSD-Win64-Shipping.exe"+6C9D03: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"FSD-Win64-Shipping.exe"+6C9D08: 48 83 C4 20              -  add rsp,20
"FSD-Win64-Shipping.exe"+6C9D0C: 5F                       -  pop rdi
}
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>13</ID>
              <Description>"Engineer"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>1120</ID>
                  <Description>"(All Turrets) Unlimited Turret Ammo (Host Required)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-27
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(TurretAmmo,FSD-Win64-Shipping.exe,89 87 58 04 00 00 3B) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+7AFCFB)

label(code)
label(return)

newmem:

code:
  add [rdi+00000458],(int)0
  jmp return

TurretAmmo:
  jmp newmem
  nop
return:
registersymbol(TurretAmmo)

[DISABLE]

TurretAmmo:
  db 89 87 58 04 00 00

unregistersymbol(TurretAmmo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+7AFCFB

"FSD-Win64-Shipping.exe"+7AFCDD: 48 8B F9                 -  mov rdi,rcx
"FSD-Win64-Shipping.exe"+7AFCE0: 75 71                    -  jne FSD-Win64-Shipping.exe+7AFD53
"FSD-Win64-Shipping.exe"+7AFCE2: 8B 89 58 04 00 00        -  mov ecx,[rcx+00000458]
"FSD-Win64-Shipping.exe"+7AFCE8: 85 D2                    -  test edx,edx
"FSD-Win64-Shipping.exe"+7AFCEA: 79 04                    -  jns FSD-Win64-Shipping.exe+7AFCF0
"FSD-Win64-Shipping.exe"+7AFCEC: 33 C0                    -  xor eax,eax
"FSD-Win64-Shipping.exe"+7AFCEE: EB 0B                    -  jmp FSD-Win64-Shipping.exe+7AFCFB
"FSD-Win64-Shipping.exe"+7AFCF0: 8B 87 5C 04 00 00        -  mov eax,[rdi+0000045C]
"FSD-Win64-Shipping.exe"+7AFCF6: 3B D0                    -  cmp edx,eax
"FSD-Win64-Shipping.exe"+7AFCF8: 0F 4C C2                 -  cmovl eax,edx
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+7AFCFB: 89 87 58 04 00 00        -  mov [rdi+00000458],eax
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+7AFD01: 3B C8                    -  cmp ecx,eax
"FSD-Win64-Shipping.exe"+7AFD03: 74 4E                    -  je FSD-Win64-Shipping.exe+7AFD53
"FSD-Win64-Shipping.exe"+7AFD05: 48 89 5C 24 38           -  mov [rsp+38],rbx
"FSD-Win64-Shipping.exe"+7AFD0A: 48 8D 54 24 30           -  lea rdx,[rsp+30]
"FSD-Win64-Shipping.exe"+7AFD0F: 8B D8                    -  mov ebx,eax
"FSD-Win64-Shipping.exe"+7AFD11: 89 44 24 30              -  mov [rsp+30],eax
"FSD-Win64-Shipping.exe"+7AFD15: 2B D9                    -  sub ebx,ecx
"FSD-Win64-Shipping.exe"+7AFD17: 48 8D 8F 50 03 00 00     -  lea rcx,[rdi+00000350]
"FSD-Win64-Shipping.exe"+7AFD1E: 89 5C 24 34              -  mov [rsp+34],ebx
"FSD-Win64-Shipping.exe"+7AFD22: E8 D9 95 B2 FF           -  call FSD-Win64-Shipping.exe+2D9300
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1277</ID>
                  <Description>"Unlimited Turret Placement (Host Required) (Warning: Cannot be pickup up after placement)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version:
  Date   : 2020-01-31
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(UnlimitedTurrets,FSD-Win64-Shipping.exe,89 87 78 04 00 00 3B) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+7A251B)

label(code)
label(return)

newmem:
// INT for how many turrets you have placed on the ground
code:
  add [rdi+00000478],(int)0
  jmp return

UnlimitedTurrets:
  jmp newmem
  nop
return:
registersymbol(UnlimitedTurrets)

[DISABLE]

UnlimitedTurrets:
  db 89 87 78 04 00 00

unregistersymbol(UnlimitedTurrets)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+7A251B

"FSD-Win64-Shipping.exe"+7A24F5: 48 03 0E                 -  add rcx,[rsi]
"FSD-Win64-Shipping.exe"+7A24F8: 89 01                    -  mov [rcx],eax
"FSD-Win64-Shipping.exe"+7A24FA: 8B 45 C4                 -  mov eax,[rbp-3C]
"FSD-Win64-Shipping.exe"+7A24FD: 89 41 04                 -  mov [rcx+04],eax
"FSD-Win64-Shipping.exe"+7A2500: 48 8B 45 C8              -  mov rax,[rbp-38]
"FSD-Win64-Shipping.exe"+7A2504: 48 89 41 08              -  mov [rcx+08],rax
"FSD-Win64-Shipping.exe"+7A2508: 48 8D 4D 20              -  lea rcx,[rbp+20]
"FSD-Win64-Shipping.exe"+7A250C: E8 2F 0E 4E 00           -  call FSD-Win64-Shipping.exe+C83340
"FSD-Win64-Shipping.exe"+7A2511: 48 63 B7 78 04 00 00     -  movsxd  rsi,dword ptr [rdi+00000478]
"FSD-Win64-Shipping.exe"+7A2518: 8D 46 01                 -  lea eax,[rsi+01]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+7A251B: 89 87 78 04 00 00        -  mov [rdi+00000478],eax
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+7A2521: 3B 87 7C 04 00 00        -  cmp eax,[rdi+0000047C]
"FSD-Win64-Shipping.exe"+7A2527: 7E 0E                    -  jle FSD-Win64-Shipping.exe+7A2537
"FSD-Win64-Shipping.exe"+7A2529: 8B D6                    -  mov edx,esi
"FSD-Win64-Shipping.exe"+7A252B: 48 8D 8F 70 04 00 00     -  lea rcx,[rdi+00000470]
"FSD-Win64-Shipping.exe"+7A2532: E8 E9 1B AD FF           -  call FSD-Win64-Shipping.exe+274120
"FSD-Win64-Shipping.exe"+7A2537: 48 8B 87 70 04 00 00     -  mov rax,[rdi+00000470]
"FSD-Win64-Shipping.exe"+7A253E: 48 8B CF                 -  mov rcx,rdi
"FSD-Win64-Shipping.exe"+7A2541: 48 8D 14 F0              -  lea rdx,[rax+rsi*8]
"FSD-Win64-Shipping.exe"+7A2545: 8B 45 20                 -  mov eax,[rbp+20]
"FSD-Win64-Shipping.exe"+7A2548: 89 02                    -  mov [rdx],eax
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1809</ID>
                  <Description>"Unlimited Turret Resupply (Host Required)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-02-04
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(UnlimitedTurretResupplt,FSD-Win64-Shipping.exe,8B 81 9C 01 00 00 85 C0 7E 24) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+7B6574)

label(code)
label(return)

newmem:

code:
  mov eax,[rcx+0000019C]
  mov eax,(int)0
  jmp return

UnlimitedTurretResupplt:
  jmp newmem
  nop
return:
registersymbol(UnlimitedTurretResupplt)

[DISABLE]

UnlimitedTurretResupplt:
  db 8B 81 9C 01 00 00

unregistersymbol(UnlimitedTurretResupplt)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+7B6574

"FSD-Win64-Shipping.exe"+7B655A: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7B655B: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7B655C: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7B655D: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7B655E: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7B655F: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+7B6560: 48 83 EC 28              -  sub rsp,28
"FSD-Win64-Shipping.exe"+7B6564: 48 8B 81 E8 00 00 00     -  mov rax,[rcx+000000E8]
"FSD-Win64-Shipping.exe"+7B656B: 80 B8 18 01 00 00 03     -  cmp byte ptr [rax+00000118],03
"FSD-Win64-Shipping.exe"+7B6572: 75 2E                    -  jne FSD-Win64-Shipping.exe+7B65A2
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+7B6574: 8B 81 9C 01 00 00        -  mov eax,[rcx+0000019C]
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+7B657A: 85 C0                    -  test eax,eax
"FSD-Win64-Shipping.exe"+7B657C: 7E 24                    -  jle FSD-Win64-Shipping.exe+7B65A2
"FSD-Win64-Shipping.exe"+7B657E: 2B C2                    -  sub eax,edx
"FSD-Win64-Shipping.exe"+7B6580: 33 D2                    -  xor edx,edx
"FSD-Win64-Shipping.exe"+7B6582: 85 C0                    -  test eax,eax
"FSD-Win64-Shipping.exe"+7B6584: 0F 4E C2                 -  cmovle eax,edx
"FSD-Win64-Shipping.exe"+7B6587: 48 8D 54 24 30           -  lea rdx,[rsp+30]
"FSD-Win64-Shipping.exe"+7B658C: 89 81 9C 01 00 00        -  mov [rcx+0000019C],eax
"FSD-Win64-Shipping.exe"+7B6592: 48 81 C1 10 01 00 00     -  add rcx,00000110
"FSD-Win64-Shipping.exe"+7B6599: 89 44 24 30              -  mov [rsp+30],eax
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1838</ID>
              <Description>"Perks"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>1837</ID>
                  <Description>"Use Hover Boots Anytime (Host Required)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version:
  Date   : 2020-03-01
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HoverBoots,FSD-Win64-Shipping.exe,0F 84 8C 00 00 00 E8 AF) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+5FF066)

label(code)
label(return)

newmem:

code:
  //je FSD-Win64-Shipping.UFallingStateComponent::SetHoverBootsActive+A8
  jmp return

HoverBoots:
  jmp newmem
  nop
return:
registersymbol(HoverBoots)

[DISABLE]

HoverBoots:
  db 0F 84 8C 00 00 00

unregistersymbol(HoverBoots)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+5FF066

"FSD-Win64-Shipping.exe"+5FF049: 48 83 C4 20              -  add rsp,20
"FSD-Win64-Shipping.exe"+5FF04D: 5B                       -  pop rbx
"FSD-Win64-Shipping.exe"+5FF04E: C3                       -  ret
"FSD-Win64-Shipping.exe"+5FF04F: CC                       -  int 3
"FSD-Win64-Shipping.exe"+5FF050: 48 89 74 24 10           -  mov [rsp+10],rsi
"FSD-Win64-Shipping.exe"+5FF055: 57                       -  push rdi
"FSD-Win64-Shipping.exe"+5FF056: 48 83 EC 20              -  sub rsp,20
"FSD-Win64-Shipping.exe"+5FF05A: 0F B6 F2                 -  movzx esi,dl
"FSD-Win64-Shipping.exe"+5FF05D: 48 8B F9                 -  mov rdi,rcx
"FSD-Win64-Shipping.exe"+5FF060: 3A 91 98 01 00 00        -  cmp dl,[rcx+00000198]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+5FF066: 0F 84 8C 00 00 00        -  je FSD-Win64-Shipping.exe+5FF0F8
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+5FF06C: E8 AF FB FA FF           -  call FSD-Win64-Shipping.exe+5AEC20
"FSD-Win64-Shipping.exe"+5FF071: 84 C0                    -  test al,al
"FSD-Win64-Shipping.exe"+5FF073: 74 36                    -  je FSD-Win64-Shipping.exe+5FF0AB
"FSD-Win64-Shipping.exe"+5FF075: 80 BF 98 01 00 00 00     -  cmp byte ptr [rdi+00000198],00
"FSD-Win64-Shipping.exe"+5FF07C: 74 2D                    -  je FSD-Win64-Shipping.exe+5FF0AB
"FSD-Win64-Shipping.exe"+5FF07E: 48 89 5C 24 30           -  mov [rsp+30],rbx
"FSD-Win64-Shipping.exe"+5FF083: E8 B8 86 05 00           -  call FSD-Win64-Shipping.exe+657740
"FSD-Win64-Shipping.exe"+5FF088: 48 8B 8F 00 01 00 00     -  mov rcx,[rdi+00000100]
"FSD-Win64-Shipping.exe"+5FF08F: 48 8B 98 D0 02 00 00     -  mov rbx,[rax+000002D0]
"FSD-Win64-Shipping.exe"+5FF096: E8 05 80 FA FF           -  call FSD-Win64-Shipping.exe+5A70A0
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1847</ID>
                  <Description>"Unlimited Perks Charges"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-02-17
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(UnlimitedPerks,FSD-Win64-Shipping.exe,00 2B F0 33 C0 85 F6) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+74B2D1)

label(code)
label(return)
// FSD-Win64-Shipping.UPerkAsset::CanUseCharge
newmem:

code:
  add esi,(int)0
  xor eax,eax
  test esi,esi
  jmp return

UnlimitedPerks+01:
  jmp newmem
  nop
return:
registersymbol(UnlimitedPerks)

[DISABLE]

UnlimitedPerks+01:
  db 2B F0 33 C0 85 F6

unregistersymbol(UnlimitedPerks)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+74B2D1

"FSD-Win64-Shipping.exe"+74B2AF: 8B F0                    -  mov esi,eax
"FSD-Win64-Shipping.exe"+74B2B1: 85 C0                    -  test eax,eax
"FSD-Win64-Shipping.exe"+74B2B3: 7E 29                    -  jle FSD-Win64-Shipping.exe+74B2DE
"FSD-Win64-Shipping.exe"+74B2B5: 48 8B CB                 -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+74B2B8: E8 23 F2 00 00           -  call FSD-Win64-Shipping.exe+75A4E0
"FSD-Win64-Shipping.exe"+74B2BD: 48 85 C0                 -  test rax,rax
"FSD-Win64-Shipping.exe"+74B2C0: 0F 84 87 00 00 00        -  je FSD-Win64-Shipping.exe+74B34D
"FSD-Win64-Shipping.exe"+74B2C6: 48 8B D7                 -  mov rdx,rdi
"FSD-Win64-Shipping.exe"+74B2C9: 48 8B C8                 -  mov rcx,rax
"FSD-Win64-Shipping.exe"+74B2CC: E8 AF 42 01 00           -  call FSD-Win64-Shipping.exe+75F580
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+74B2D1: 2B F0                    -  sub esi,eax
"FSD-Win64-Shipping.exe"+74B2D3: 33 C0                    -  xor eax,eax
"FSD-Win64-Shipping.exe"+74B2D5: 85 F6                    -  test esi,esi
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+74B2D7: 0F 4E F0                 -  cmovle esi,eax
"FSD-Win64-Shipping.exe"+74B2DA: 85 F6                    -  test esi,esi
"FSD-Win64-Shipping.exe"+74B2DC: 7E 6F                    -  jle FSD-Win64-Shipping.exe+74B34D
"FSD-Win64-Shipping.exe"+74B2DE: 48 8B 07                 -  mov rax,[rdi]
"FSD-Win64-Shipping.exe"+74B2E1: 48 8B D3                 -  mov rdx,rbx
"FSD-Win64-Shipping.exe"+74B2E4: 48 8B CF                 -  mov rcx,rdi
"FSD-Win64-Shipping.exe"+74B2E7: FF 90 50 02 00 00        -  call qword ptr [rax+00000250]
"FSD-Win64-Shipping.exe"+74B2ED: 0F 28 F0                 -  movaps xmm6,xmm0
"FSD-Win64-Shipping.exe"+74B2F0: 0F 57 FF                 -  xorps xmm7,xmm7
"FSD-Win64-Shipping.exe"+74B2F3: 0F 2F F7                 -  comiss xmm6,xmm7
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1848</ID>
                  <Description>"Instant Perk Recharge"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-02-17
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(PerkTimeSinceLastUse,FSD-Win64-Shipping.exe,00 F3 0F 5E C6 0F 2F C7) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+74B32F)

label(code)
label(return)

label(ZeroTime)
registersymbol(ZeroTime)
// FSD-Win64-Shipping.UPerkAsset::CanUseCharge
newmem:

code:
  mulss xmm0,[ZeroTime]
  //divss xmm0,xmm6
  comiss xmm0,xmm7
  jmp return

ZeroTime:
  dd (float)100.0

PerkTimeSinceLastUse+01:
  jmp newmem
  nop
  nop
return:
registersymbol(PerkTimeSinceLastUse)

[DISABLE]

PerkTimeSinceLastUse+01:
  db F3 0F 5E C6 0F 2F C7

unregistersymbol(ZeroTime)
unregistersymbol(PerkTimeSinceLastUse)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+74B32F

"FSD-Win64-Shipping.exe"+74B30C: 7F 3B                    -  jg FSD-Win64-Shipping.exe+74B349
"FSD-Win64-Shipping.exe"+74B30E: 48 8B C8                 -  mov rcx,rax
"FSD-Win64-Shipping.exe"+74B311: 48 8B 42 30              -  mov rax,[rdx+30]
"FSD-Win64-Shipping.exe"+74B315: 4C 39 04 C8              -  cmp [rax+rcx*8],r8
"FSD-Win64-Shipping.exe"+74B319: 75 2E                    -  jne FSD-Win64-Shipping.exe+74B349
"FSD-Win64-Shipping.exe"+74B31B: 48 8B 8B 60 07 00 00     -  mov rcx,[rbx+00000760]
"FSD-Win64-Shipping.exe"+74B322: 48 85 C9                 -  test rcx,rcx
"FSD-Win64-Shipping.exe"+74B325: 74 22                    -  je FSD-Win64-Shipping.exe+74B349
"FSD-Win64-Shipping.exe"+74B327: 48 8B D7                 -  mov rdx,rdi
"FSD-Win64-Shipping.exe"+74B32A: E8 C1 37 01 00           -  call FSD-Win64-Shipping.exe+75EAF0
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+74B32F: F3 0F 5E C6              -  divss xmm0,xmm6
"FSD-Win64-Shipping.exe"+74B333: 0F 2F C7                 -  comiss xmm0,xmm7
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+74B336: 72 15                    -  jb FSD-Win64-Shipping.exe+74B34D
"FSD-Win64-Shipping.exe"+74B338: F3 0F 5D 05 F8 41 EF 01  -  minss xmm0,[FSD-Win64-Shipping.exe+263F538]
"FSD-Win64-Shipping.exe"+74B340: 0F 2F 05 F1 41 EF 01     -  comiss xmm0,[FSD-Win64-Shipping.exe+263F538]
"FSD-Win64-Shipping.exe"+74B347: 72 04                    -  jb FSD-Win64-Shipping.exe+74B34D
"FSD-Win64-Shipping.exe"+74B349: B0 01                    -  mov al,01
"FSD-Win64-Shipping.exe"+74B34B: EB 02                    -  jmp FSD-Win64-Shipping.exe+74B34F
"FSD-Win64-Shipping.exe"+74B34D: 32 C0                    -  xor al,al
"FSD-Win64-Shipping.exe"+74B34F: 48 8B 5C 24 50           -  mov rbx,[rsp+50]
"FSD-Win64-Shipping.exe"+74B354: 48 8B 74 24 58           -  mov rsi,[rsp+58]
"FSD-Win64-Shipping.exe"+74B359: 0F 28 74 24 30           -  movaps xmm6,[rsp+30]
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>516</ID>
              <Description>"Common Class"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" Activated="1" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>1849</ID>
                  <Description>"InstaKill™ (Host Required)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-02-25
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InstaKill,FSD-Win64-Shipping.exe,0F 29 BC 24 90 00 00 00 49 8B) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+712D86)

label(code)
label(return)

label(Multiplier)
registersymbol(Multiplier)
// FSD-Win64-Shipping.UDamageComponent::DamageTargetInternal
newmem:

code:
  mulss xmm3,[Multiplier]
  mulss xmm7,[Multiplier]
  movaps [rsp+00000090],xmm7
  jmp return

Multiplier:
  dd (float)1000.0

InstaKill:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(InstaKill)

[DISABLE]

InstaKill:
  db 0F 29 BC 24 90 00 00 00

unregistersymbol(Multiplier)
unregistersymbol(InstaKill)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+712D86

"FSD-Win64-Shipping.exe"+712D6C: CC                          -  int 3 
"FSD-Win64-Shipping.exe"+712D6D: CC                          -  int 3 
"FSD-Win64-Shipping.exe"+712D6E: CC                          -  int 3 
"FSD-Win64-Shipping.exe"+712D6F: CC                          -  int 3 
"FSD-Win64-Shipping.exe"+712D70: 40 57                       -  push rdi
"FSD-Win64-Shipping.exe"+712D72: 41 54                       -  push r12
"FSD-Win64-Shipping.exe"+712D74: 41 56                       -  push r14
"FSD-Win64-Shipping.exe"+712D76: 41 57                       -  push r15
"FSD-Win64-Shipping.exe"+712D78: 48 81 EC B8 00 00 00        -  sub rsp,000000B8
"FSD-Win64-Shipping.exe"+712D7F: 4D 8D A0 F8 00 00 00        -  lea r12,[r8+000000F8]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+712D86: 0F 29 BC 24 90 00 00 00     -  movaps [rsp+00000090],xmm7
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+712D8E: 49 8B 04 24                 -  mov rax,[r12]
"FSD-Win64-Shipping.exe"+712D92: 48 8B F9                    -  mov rdi,rcx
"FSD-Win64-Shipping.exe"+712D95: 49 8B CC                    -  mov rcx,r12
"FSD-Win64-Shipping.exe"+712D98: 0F 28 FB                    -  movaps xmm7,xmm3
"FSD-Win64-Shipping.exe"+712D9B: 4D 8B F0                    -  mov r14,r8
"FSD-Win64-Shipping.exe"+712D9E: 4C 8B FA                    -  mov r15,rdx
"FSD-Win64-Shipping.exe"+712DA1: FF 50 20                    -  call qword ptr [rax+20]
"FSD-Win64-Shipping.exe"+712DA4: 84 C0                       -  test al,al
"FSD-Win64-Shipping.exe"+712DA6: 74 08                       -  je FSD-Win64-Shipping.exe+712DB0
"FSD-Win64-Shipping.exe"+712DA8: 0F 57 C0                    -  xorps xmm0,xmm0
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1834</ID>
                  <Description>"God Mode (Host Required)"</Description>
                  <LastState Activated="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-02-10
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(GodMode,FSD-Win64-Shipping.exe,48 81 EC 90 00 00 00 0F 29 70 D8 4C) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+5FCF04)

label(code)
label(return)
label(noDamage)
// Function Name
// 7FF78B23C140 - FSD-Win64-Shipping.UPlayerHealthComponent::TakeDamage()
newmem:
  movss xmm1,[noDamage]
  movss xmm6,[noDamage]

code:
  sub rsp,00000090
  jmp return

noDamage:
  dd (float)0.0

GodMode:
  jmp newmem
  nop
  nop
return:
registersymbol(GodMode)

[DISABLE]

GodMode:
  db 48 81 EC 90 00 00 00

unregistersymbol(GodMode)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+5FCF04

"FSD-Win64-Shipping.exe"+5FCEED: C3                          -  ret 
"FSD-Win64-Shipping.exe"+5FCEEE: CC                          -  int 3 
"FSD-Win64-Shipping.exe"+5FCEEF: CC                          -  int 3 
"FSD-Win64-Shipping.exe"+5FCEF0: 48 8B C4                    -  mov rax,rsp
"FSD-Win64-Shipping.exe"+5FCEF3: 48 89 58 08                 -  mov [rax+08],rbx
"FSD-Win64-Shipping.exe"+5FCEF7: 48 89 68 10                 -  mov [rax+10],rbp
"FSD-Win64-Shipping.exe"+5FCEFB: 48 89 70 18                 -  mov [rax+18],rsi
"FSD-Win64-Shipping.exe"+5FCEFF: 57                          -  push rdi
"FSD-Win64-Shipping.exe"+5FCF00: 41 56                       -  push r14
"FSD-Win64-Shipping.exe"+5FCF02: 41 57                       -  push r15
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+5FCF04: 48 81 EC 90 00 00 00        -  sub rsp,00000090
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+5FCF0B: 0F 29 70 D8                 -  movaps [rax-28],xmm6
"FSD-Win64-Shipping.exe"+5FCF0F: 4C 8B F9                    -  mov r15,rcx
"FSD-Win64-Shipping.exe"+5FCF12: 0F 29 78 C8                 -  movaps [rax-38],xmm7
"FSD-Win64-Shipping.exe"+5FCF16: 49 8B F1                    -  mov rsi,r9
"FSD-Win64-Shipping.exe"+5FCF19: 44 0F 29 40 B8              -  movaps [rax-48],xmm8
"FSD-Win64-Shipping.exe"+5FCF1E: 49 8B E8                    -  mov rbp,r8
"FSD-Win64-Shipping.exe"+5FCF21: 44 0F 29 48 A8              -  movaps [rax-58],xmm9
"FSD-Win64-Shipping.exe"+5FCF26: 0F 28 F1                    -  movaps xmm6,xmm1
"FSD-Win64-Shipping.exe"+5FCF29: 48 8B 81 F8 00 00 00        -  mov rax,[rcx+000000F8]
"FSD-Win64-Shipping.exe"+5FCF30: 48 81 C1 F8 00 00 00        -  add rcx,000000F8
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1475</ID>
                  <Description>"Custom Firing Speed (0.0 = Fastest) (Doesn't Work On Minigun)"</Description>
                  <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                  <LastState Activated="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-27
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(TimeBetweenShots,FSD-Win64-Shipping.exe,F3 0F 11 86 B8 06 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+77D073)

label(code)
label(return)

label(FiringSpeed)
registersymbol(FiringSpeed)

newmem:

code:
  push eax
  mov eax,[FiringSpeed]
  mov [rsi+000006B8],eax
  pop eax
  jmp return

FiringSpeed:
  dq (float)0.0

TimeBetweenShots:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(TimeBetweenShots)

[DISABLE]

TimeBetweenShots:
  db F3 0F 11 86 B8 06 00 00

unregistersymbol(FiringSpeed)
unregistersymbol(TimeBetweenShots)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+77D073

"FSD-Win64-Shipping.exe"+77D041: C6 44 24 20 01              -  mov byte ptr [rsp+20],01
"FSD-Win64-Shipping.exe"+77D046: 4C 8B C3                    -  mov r8,rbx
"FSD-Win64-Shipping.exe"+77D049: E8 22 25 22 01              -  call FSD-Win64-Shipping.exe+199F570
"FSD-Win64-Shipping.exe"+77D04E: 48 8B 06                    -  mov rax,[rsi]
"FSD-Win64-Shipping.exe"+77D051: 48 8B CE                    -  mov rcx,rsi
"FSD-Win64-Shipping.exe"+77D054: FF 90 D8 07 00 00           -  call qword ptr [rax+000007D8]
"FSD-Win64-Shipping.exe"+77D05A: 40 32 FF                    -  xor dil,dil
"FSD-Win64-Shipping.exe"+77D05D: C6 86 0A 07 00 00 02        -  mov byte ptr [rsi+0000070A],02
"FSD-Win64-Shipping.exe"+77D064: 48 8D 9E 04 07 00 00        -  lea rbx,[rsi+00000704]
"FSD-Win64-Shipping.exe"+77D06B: F3 0F 58 86 B8 06 00 00     -  addss xmm0,[rsi+000006B8]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+77D073: F3 0F 11 86 B8 06 00 00     -  movss [rsi+000006B8],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+77D07B: 40 38 BE F0 06 00 00        -  cmp [rsi+000006F0],dil
"FSD-Win64-Shipping.exe"+77D082: 75 19                       -  jne FSD-Win64-Shipping.exe+77D09D
"FSD-Win64-Shipping.exe"+77D084: 8B 86 A0 06 00 00           -  mov eax,[rsi+000006A0]
"FSD-Win64-Shipping.exe"+77D08A: 39 03                       -  cmp [rbx],eax
"FSD-Win64-Shipping.exe"+77D08C: 7C 0F                       -  jl FSD-Win64-Shipping.exe+77D09D
"FSD-Win64-Shipping.exe"+77D08E: 44 88 B6 09 07 00 00        -  mov [rsi+00000709],r14l
"FSD-Win64-Shipping.exe"+77D095: 40 B7 01                    -  mov dil,01
"FSD-Win64-Shipping.exe"+77D098: 44 89 33                    -  mov [rbx],r14d
"FSD-Win64-Shipping.exe"+77D09B: EB 2A                       -  jmp FSD-Win64-Shipping.exe+77D0C7
"FSD-Win64-Shipping.exe"+77D09D: 8B 03                       -  mov eax,[rbx]
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1479</ID>
                      <Description>"Firing Speed"</Description>
                      <VariableType>Float</VariableType>
                      <Address>FiringSpeed</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1488</ID>
                  <Description>"Instant Ammo Resupply / Repair / Construction (Host Required)"</Description>
                  <LastState Activated="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-11-27
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ResupplyProgress,FSD-Win64-Shipping.exe,F3 0F 11 83 DC 01 00 00 48 8D 54 24 50) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+5F91C0)

label(code)
label(return)

newmem:

code:
  mov [rbx+000001DC],(float)1.0
  jmp return

ResupplyProgress:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(ResupplyProgress)

[DISABLE]

ResupplyProgress:
  db F3 0F 11 83 DC 01 00 00

unregistersymbol(ResupplyProgress)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+5F91C0

"FSD-Win64-Shipping.exe"+5F919A: F3 0F 58 CE                    -  addss xmm1,xmm6
"FSD-Win64-Shipping.exe"+5F919E: F3 0F 59 CF                    -  mulss xmm1,xmm7
"FSD-Win64-Shipping.exe"+5F91A2: F3 0F 5E C8                    -  divss xmm1,xmm0
"FSD-Win64-Shipping.exe"+5F91A6: 0F 57 C0                       -  xorps xmm0,xmm0
"FSD-Win64-Shipping.exe"+5F91A9: F3 0F 58 CA                    -  addss xmm1,xmm2
"FSD-Win64-Shipping.exe"+5F91AD: 0F 2F C8                       -  comiss xmm1,xmm0
"FSD-Win64-Shipping.exe"+5F91B0: 72 07                          -  jb FSD-Win64-Shipping.exe+5F91B9
"FSD-Win64-Shipping.exe"+5F91B2: 0F 28 C1                       -  movaps xmm0,xmm1
"FSD-Win64-Shipping.exe"+5F91B5: F3 0F 5D C6                    -  minss xmm0,xmm6
"FSD-Win64-Shipping.exe"+5F91B9: 48 8D 8B 68 01 00 00           -  lea rcx,[rbx+00000168]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+5F91C0: F3 0F 11 83 DC 01 00 00        -  movss [rbx+000001DC],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+5F91C8: 48 8D 54 24 50                 -  lea rdx,[rsp+50]
"FSD-Win64-Shipping.exe"+5F91CD: F3 0F 11 83 E0 01 00 00        -  movss [rbx+000001E0],xmm0
"FSD-Win64-Shipping.exe"+5F91D5: F3 0F 11 44 24 50              -  movss [rsp+50],xmm0
"FSD-Win64-Shipping.exe"+5F91DB: E8 90 12 CE FF                 -  call FSD-Win64-Shipping.exe+2DA470
"FSD-Win64-Shipping.exe"+5F91E0: 0F 2F B3 DC 01 00 00           -  comiss xmm6,[rbx+000001DC]
"FSD-Win64-Shipping.exe"+5F91E7: 77 5D                          -  ja FSD-Win64-Shipping.exe+5F9246
"FSD-Win64-Shipping.exe"+5F91E9: 48 8B 8F 10 0C 00 00           -  mov rcx,[rdi+00000C10]
"FSD-Win64-Shipping.exe"+5F91F0: E8 DB E3 F9 FF                 -  call FSD-Win64-Shipping.exe+5975D0
"FSD-Win64-Shipping.exe"+5F91F5: EB 20                          -  jmp FSD-Win64-Shipping.exe+5F9217
"FSD-Win64-Shipping.exe"+5F91F7: 48 8B 8F 10 0C 00 00           -  mov rcx,[rdi+00000C10]
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1313</ID>
                  <Description>"Instant Power Attack"</Description>
                  <LastState Activated="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version:
  Date   : 2020-01-31
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(PowerAttack,FSD-Win64-Shipping.exe,F3 0F 11 97 A4 04 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+7AF087)

label(code)
label(return)

newmem:

code:
  mov [rdi+000004A4],(float)0.0
  jmp return

PowerAttack:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(PowerAttack)

[DISABLE]

PowerAttack:
  db F3 0F 11 97 A4 04 00 00

unregistersymbol(PowerAttack)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+7AF087

"FSD-Win64-Shipping.exe"+7AF056: E8 E5 22 EA FF           -  call FSD-Win64-Shipping.exe+651340
"FSD-Win64-Shipping.exe"+7AF05B: 48 8D 97 A8 04 00 00     -  lea rdx,[rdi+000004A8]
"FSD-Win64-Shipping.exe"+7AF062: 48 8B CB                 -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+7AF065: 4C 8B 80 00 01 00 00     -  mov r8,[rax+00000100]
"FSD-Win64-Shipping.exe"+7AF06C: E8 2F E1 FA FF           -  call FSD-Win64-Shipping.exe+75D1A0
"FSD-Win64-Shipping.exe"+7AF071: F3 0F 10 8F A4 04 00 00  -  movss xmm1,[rdi+000004A4]
"FSD-Win64-Shipping.exe"+7AF079: 0F 2F CE                 -  comiss xmm1,xmm6
"FSD-Win64-Shipping.exe"+7AF07C: F3 0F 59 C7              -  mulss xmm0,xmm7
"FSD-Win64-Shipping.exe"+7AF080: 0F 28 D1                 -  movaps xmm2,xmm1
"FSD-Win64-Shipping.exe"+7AF083: F3 0F 5C D0              -  subss xmm2,xmm0
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+7AF087: F3 0F 11 97 A4 04 00 00  -  movss [rdi+000004A4],xmm2
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+7AF08F: 76 11                    -  jna FSD-Win64-Shipping.exe+7AF0A2
"FSD-Win64-Shipping.exe"+7AF091: 0F 2F D6                 -  comiss xmm2,xmm6
"FSD-Win64-Shipping.exe"+7AF094: 77 0C                    -  ja FSD-Win64-Shipping.exe+7AF0A2
"FSD-Win64-Shipping.exe"+7AF096: 48 8B 8F 88 03 00 00     -  mov rcx,[rdi+00000388]
"FSD-Win64-Shipping.exe"+7AF09D: E8 4E 75 E0 FF           -  call FSD-Win64-Shipping.exe+5B65F0
"FSD-Win64-Shipping.exe"+7AF0A2: 40 84 F6                 -  test sil,sil
"FSD-Win64-Shipping.exe"+7AF0A5: 74 43                    -  je FSD-Win64-Shipping.exe+7AF0EA
"FSD-Win64-Shipping.exe"+7AF0A7: F3 0F 10 87 A4 04 00 00  -  movss xmm0,[rdi+000004A4]
"FSD-Win64-Shipping.exe"+7AF0AF: F3 0F 5E 87 A0 04 00 00  -  divss xmm0,[rdi+000004A0]
"FSD-Win64-Shipping.exe"+7AF0B7: F3 0F 10 15 79 94 E8 01  -  movss xmm2,[FSD-Win64-Shipping.exe+2638538]
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1835</ID>
                  <Description>"No Blizzard Freeze (Only Enables AFTER Being Exposed To Cold)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version:
  Date   : 2020-02-17
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(CancelPlayerFreeze,FSD-Win64-Shipping.exe,C3 CC 40 53 48 83 EC 20 48 8B 81 20 0E 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+5CA2A2)

label(code)
label(return)

newmem:

code:
  sub rsp,20
  jmp FSD-Win64-Shipping.APlayerCharacter::TryFreezeCharacter+70
  //mov rax,[rcx+00000E10]
  jmp return

CancelPlayerFreeze+04:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(CancelPlayerFreeze)

[DISABLE]

CancelPlayerFreeze+04:
  db 48 83 EC 20 48 8B 81 20 0E 00 00

unregistersymbol(CancelPlayerFreeze)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+5CA2A2

"FSD-Win64-Shipping.exe"+5CA287: 48 85 D2              -  test rdx,rdx
"FSD-Win64-Shipping.exe"+5CA28A: 74 08                 -  je FSD-Win64-Shipping.exe+5CA294
"FSD-Win64-Shipping.exe"+5CA28C: 48 8B CB              -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+5CA28F: E8 AC 75 FD FF        -  call FSD-Win64-Shipping.exe+5A1840
"FSD-Win64-Shipping.exe"+5CA294: 48 8B 5C 24 30        -  mov rbx,[rsp+30]
"FSD-Win64-Shipping.exe"+5CA299: 48 83 C4 20           -  add rsp,20
"FSD-Win64-Shipping.exe"+5CA29D: 5F                    -  pop rdi
"FSD-Win64-Shipping.exe"+5CA29E: C3                    -  ret
"FSD-Win64-Shipping.exe"+5CA29F: CC                    -  int 3
"FSD-Win64-Shipping.exe"+5CA2A0: 40 53                 -  push rbx
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+5CA2A2: 48 83 EC 20           -  sub rsp,20
"FSD-Win64-Shipping.exe"+5CA2A6: 48 8B 81 20 0E 00 00  -  mov rax,[rcx+00000E20]
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+5CA2AD: 48 8B D9              -  mov rbx,rcx
"FSD-Win64-Shipping.exe"+5CA2B0: 48 85 C0              -  test rax,rax
"FSD-Win64-Shipping.exe"+5CA2B3: 74 09                 -  je FSD-Win64-Shipping.exe+5CA2BE
"FSD-Win64-Shipping.exe"+5CA2B5: 80 B8 F8 00 00 00 01  -  cmp byte ptr [rax+000000F8],01
"FSD-Win64-Shipping.exe"+5CA2BC: 74 50                 -  je FSD-Win64-Shipping.exe+5CA30E
"FSD-Win64-Shipping.exe"+5CA2BE: 48 8B 89 88 0C 00 00  -  mov rcx,[rcx+00000C88]
"FSD-Win64-Shipping.exe"+5CA2C5: 48 81 C1 F8 00 00 00  -  add rcx,000000F8
"FSD-Win64-Shipping.exe"+5CA2CC: 48 8B 01              -  mov rax,[rcx]
"FSD-Win64-Shipping.exe"+5CA2CF: FF 50 18              -  call qword ptr [rax+18]
"FSD-Win64-Shipping.exe"+5CA2D2: 84 C0                 -  test al,al
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1800</ID>
                  <Description>"No Recoil (Don't Turn Off During Mission)"</Description>
                  <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                  <LastState Value="" Activated="1" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1833</ID>
                      <Description>"No Recoil (Part 1)"</Description>
                      <LastState Activated="1"/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-02-10
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(GenerateRecoilImpulseA,FSD-Win64-Shipping.exe,F3 44 0F 10 25 D9 F9 05 02) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+5E6C72)

label(code)
label(return)

label(RecoilDown)
registersymbol(RecoilDown)GenerateRecoilImpulseA

newmem:

code:
  movss xmm12,[RecoilDown]
  jmp return

RecoilDown:
  dd (float)0.0

GenerateRecoilImpulseA:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(GenerateRecoilImpulseA)

[DISABLE]

GenerateRecoilImpulseA:
  db F3 44 0F 10 25 D9 F9 05 02

unregistersymbol(RecoilDown)
unregistersymbol(GenerateRecoilImpulseA)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+5E64D2

"FSD-Win64-Shipping.exe"+5E64AE: 0F 5B C9                    -  cvtdq2ps xmm1,xmm1
"FSD-Win64-Shipping.exe"+5E64B1: F3 41 0F 59 CB              -  mulss xmm1,xmm11
"FSD-Win64-Shipping.exe"+5E64B6: F3 0F 58 C9                 -  addss xmm1,xmm1
"FSD-Win64-Shipping.exe"+5E64BA: F3 0F 2C C9                 -  cvttss2si ecx,xmm1
"FSD-Win64-Shipping.exe"+5E64BE: 3B C8                       -  cmp ecx,eax
"FSD-Win64-Shipping.exe"+5E64C0: 0F 4E C1                    -  cmovle eax,ecx
"FSD-Win64-Shipping.exe"+5E64C3: 3B C6                       -  cmp eax,esi
"FSD-Win64-Shipping.exe"+5E64C5: 75 0B                       -  jne FSD-Win64-Shipping.exe+5E64D2
"FSD-Win64-Shipping.exe"+5E64C7: F3 44 0F 10 25 68 90 05 02  -  movss xmm12,[FSD-Win64-Shipping.exe+263F538]
"FSD-Win64-Shipping.exe"+5E64D0: EB 09                       -  jmp FSD-Win64-Shipping.exe+5E64DB
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+5E64D2: F3 44 0F 10 25 79 90 05 02  -  movss xmm12,[FSD-Win64-Shipping.exe+263F554]
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+5E64DB: F3 0F 10 77 04              -  movss xmm6,[rdi+04]
"FSD-Win64-Shipping.exe"+5E64E0: F3 0F 10 3F                 -  movss xmm7,[rdi]
"FSD-Win64-Shipping.exe"+5E64E4: FF 15 BE 04 03 02           -  call qword ptr [FSD-Win64-Shipping.exe+26169A8]
"FSD-Win64-Shipping.exe"+5E64EA: 45 0F 57 D2                 -  xorps xmm10,xmm10
"FSD-Win64-Shipping.exe"+5E64EE: F3 0F 5C F7                 -  subss xmm6,xmm7
"FSD-Win64-Shipping.exe"+5E64F2: F3 44 0F 2A D0              -  cvtsi2ss xmm10,eax
"FSD-Win64-Shipping.exe"+5E64F7: F3 45 0F 59 D3              -  mulss xmm10,xmm11
"FSD-Win64-Shipping.exe"+5E64FC: F3 44 0F 59 D6              -  mulss xmm10,xmm6
"FSD-Win64-Shipping.exe"+5E6501: F3 44 0F 58 D7              -  addss xmm10,xmm7
"FSD-Win64-Shipping.exe"+5E6506: FF 15 9C 04 03 02           -  call qword ptr [FSD-Win64-Shipping.exe+26169A8]
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1804</ID>
                      <Description>"No Recoil (Part 2)"</Description>
                      <LastState Activated="1"/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-02-04
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(GenerateRecoilImpulseB,FSD-Win64-Shipping.exe,F3 44 0F 11 4D 04 49) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+5E5949)

label(code)
label(return)

newmem:

code:
  mov [rbp+04],(float)0.0
  jmp return

GenerateRecoilImpulseB:
  jmp newmem
  nop
return:
registersymbol(GenerateRecoilImpulseB)

[DISABLE]

GenerateRecoilImpulseB:
  db F3 44 0F 11 4D 04

unregistersymbol(GenerateRecoilImpulseB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+5E5949

"FSD-Win64-Shipping.exe"+5E591E: 3B D8                    -  cmp ebx,eax
"FSD-Win64-Shipping.exe"+5E5920: 0F 4E C3                 -  cmovle eax,ebx
"FSD-Win64-Shipping.exe"+5E5923: 3B C6                    -  cmp eax,esi
"FSD-Win64-Shipping.exe"+5E5925: F3 45 0F 59 C8           -  mulss xmm9,xmm8
"FSD-Win64-Shipping.exe"+5E592A: 45 0F 57 C0              -  xorps xmm8,xmm8
"FSD-Win64-Shipping.exe"+5E592E: 0F 44 F2                 -  cmove esi,edx
"FSD-Win64-Shipping.exe"+5E5931: F3 44 0F 2A C6           -  cvtsi2ss xmm8,esi
"FSD-Win64-Shipping.exe"+5E5936: F3 45 0F 59 C2           -  mulss xmm8,xmm10
"FSD-Win64-Shipping.exe"+5E593B: FF 15 67 A0 02 02        -  call qword ptr [FSD-Win64-Shipping.exe+260F9A8]
"FSD-Win64-Shipping.exe"+5E5941: 4C 8D 9C 24 90 00 00 00  -  lea r11,[rsp+00000090]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+5E5949: F3 44 0F 11 4D 04        -  movss [rbp+04],xmm9
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+5E594F: 49 8B 5B 10              -  mov rbx,[r11+10]
"FSD-Win64-Shipping.exe"+5E5953: F3 0F 5C F7              -  subss xmm6,xmm7
"FSD-Win64-Shipping.exe"+5E5957: 49 8B 73 20              -  mov rsi,[r11+20]
"FSD-Win64-Shipping.exe"+5E595B: 0F 57 C0                 -  xorps xmm0,xmm0
"FSD-Win64-Shipping.exe"+5E595E: 45 0F 28 4B C0           -  movaps xmm9,[r11-40]
"FSD-Win64-Shipping.exe"+5E5963: 45 0F 28 53 B0           -  movaps xmm10,[r11-50]
"FSD-Win64-Shipping.exe"+5E5968: F3 0F 2A C0              -  cvtsi2ss xmm0,eax
"FSD-Win64-Shipping.exe"+5E596C: 48 8B C5                 -  mov rax,rbp
"FSD-Win64-Shipping.exe"+5E596F: F3 44 0F 11 45 08        -  movss [rbp+08],xmm8
"FSD-Win64-Shipping.exe"+5E5975: 45 0F 28 43 D0           -  movaps xmm8,[r11-30]
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1826</ID>
                      <Description>"No Recoil (Part 3)"</Description>
                      <LastState Activated="1"/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version:
  Date   : 2020-02-10
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(GenerateRecoilImpulseC,FSD-Win64-Shipping.exe,F3 44 0F 10 25 C8 F9 05 02) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+5E6C67)

label(code)
label(return)

newmem:

code:
  //movss xmm12,[FSD-Win64-Shipping.exe+263F538]
  jmp return

GenerateRecoilImpulseC:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(GenerateRecoilImpulseC)

[DISABLE]

GenerateRecoilImpulseC:
  db F3 44 0F 10 25 C8 F9 05 02

unregistersymbol(GenerateRecoilImpulseC)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+5E64C7

"FSD-Win64-Shipping.exe"+5E64A8: 66 0F 6E C8                 -  movd xmm1,eax
"FSD-Win64-Shipping.exe"+5E64AC: 8B C6                       -  mov eax,esi
"FSD-Win64-Shipping.exe"+5E64AE: 0F 5B C9                    -  cvtdq2ps xmm1,xmm1
"FSD-Win64-Shipping.exe"+5E64B1: F3 41 0F 59 CB              -  mulss xmm1,xmm11
"FSD-Win64-Shipping.exe"+5E64B6: F3 0F 58 C9                 -  addss xmm1,xmm1
"FSD-Win64-Shipping.exe"+5E64BA: F3 0F 2C C9                 -  cvttss2si ecx,xmm1
"FSD-Win64-Shipping.exe"+5E64BE: 3B C8                       -  cmp ecx,eax
"FSD-Win64-Shipping.exe"+5E64C0: 0F 4E C1                    -  cmovle eax,ecx
"FSD-Win64-Shipping.exe"+5E64C3: 3B C6                       -  cmp eax,esi
"FSD-Win64-Shipping.exe"+5E64C5: 75 0B                       -  jne FSD-Win64-Shipping.exe+5E64D2
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+5E64C7: F3 44 0F 10 25 68 90 05 02  -  movss xmm12,[FSD-Win64-Shipping.exe+263F538]
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+5E64D0: EB 09                       -  jmp FSD-Win64-Shipping.exe+5E64DB
"FSD-Win64-Shipping.exe"+5E64D2: E9 29 9B 8F FF              -  jmp 7FF6D00C0000
"FSD-Win64-Shipping.exe"+5E64D7: 0F 1F 40 00                 -  nop [rax+00]
"FSD-Win64-Shipping.exe"+5E64DB: F3 0F 10 77 04              -  movss xmm6,[rdi+04]
"FSD-Win64-Shipping.exe"+5E64E0: F3 0F 10 3F                 -  movss xmm7,[rdi]
"FSD-Win64-Shipping.exe"+5E64E4: FF 15 BE 04 03 02           -  call qword ptr [FSD-Win64-Shipping.exe+26169A8]
"FSD-Win64-Shipping.exe"+5E64EA: 45 0F 57 D2                 -  xorps xmm10,xmm10
"FSD-Win64-Shipping.exe"+5E64EE: F3 0F 5C F7                 -  subss xmm6,xmm7
"FSD-Win64-Shipping.exe"+5E64F2: F3 44 0F 2A D0              -  cvtsi2ss xmm10,eax
"FSD-Win64-Shipping.exe"+5E64F7: F3 45 0F 59 D3              -  mulss xmm10,xmm11
}
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1222</ID>
                  <Description>"No Weapon Spread (Can't be used with "Gunner-&gt;No Minigun Spread")"</Description>
                  <LastState Activated="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-27
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MinigunAccuracy,FSD-Win64-Shipping.exe,F3 0F 11 83 44 02 00 00 48) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+795ADA)

label(code)
label(return)

newmem:
// Same as minigun but backwards
code:
  mov [rbx+00000244],(float)0.0
  jmp return

MinigunAccuracy:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(MinigunAccuracy)

[DISABLE]

MinigunAccuracy:
  db F3 0F 11 83 44 02 00 00

unregistersymbol(MinigunAccuracy)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+795ADA

"FSD-Win64-Shipping.exe"+795AA4: 4C 8B CF                 -  mov r9,rdi
"FSD-Win64-Shipping.exe"+795AA7: 48 89 44 24 20           -  mov [rsp+20],rax
"FSD-Win64-Shipping.exe"+795AAC: 49 8B CA                 -  mov rcx,r10
"FSD-Win64-Shipping.exe"+795AAF: E8 2C A9 09 01           -  call FSD-Win64-Shipping.exe+18303E0
"FSD-Win64-Shipping.exe"+795AB4: 48 8B 00                 -  mov rax,[rax]
"FSD-Win64-Shipping.exe"+795AB7: 48 89 83 E8 02 00 00     -  mov [rbx+000002E8],rax
"FSD-Win64-Shipping.exe"+795ABE: F3 0F 10 83 68 01 00 00  -  movss xmm0,[rbx+00000168]
"FSD-Win64-Shipping.exe"+795AC6: F3 0F 58 83 44 02 00 00  -  addss xmm0,[rbx+00000244]
"FSD-Win64-Shipping.exe"+795ACE: 48 8B 4D F0              -  mov rcx,[rbp-10]
"FSD-Win64-Shipping.exe"+795AD2: F3 0F 5D 83 B0 01 00 00  -  minss xmm0,[rbx+000001B0]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+795ADA: F3 0F 11 83 44 02 00 00  -  movss [rbx+00000244],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+795AE2: 48 85 C9                 -  test rcx,rcx
"FSD-Win64-Shipping.exe"+795AE5: 74 05                    -  je FSD-Win64-Shipping.exe+795AEC
"FSD-Win64-Shipping.exe"+795AE7: E8 24 BE 26 00           -  call FSD-Win64-Shipping.exe+A01910
"FSD-Win64-Shipping.exe"+795AEC: 48 8B 4D D0              -  mov rcx,[rbp-30]
"FSD-Win64-Shipping.exe"+795AF0: 48 85 C9                 -  test rcx,rcx
"FSD-Win64-Shipping.exe"+795AF3: 74 05                    -  je FSD-Win64-Shipping.exe+795AFA
"FSD-Win64-Shipping.exe"+795AF5: E8 16 BE 26 00           -  call FSD-Win64-Shipping.exe+A01910
"FSD-Win64-Shipping.exe"+795AFA: 48 8B 4D 00              -  mov rcx,[rbp+00]
"FSD-Win64-Shipping.exe"+795AFE: 48 33 CC                 -  xor rcx,rsp
"FSD-Win64-Shipping.exe"+795B01: E8 9A DE EC 01           -  call FSD-Win64-Shipping.exe+26639A0
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1645</ID>
                  <Description>"Pickaxe Destruction Amount (Recommended: 1.0 - 5.0) (Host Required) (by Teto)"</Description>
                  <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                  <LastState Activated="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-12-31
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(PickaxeDestructionSize,FSD-Win64-Shipping.exe,F3 0F 10 4A 78 8B) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+6215D3)

label(code)
label(return)

label(DestructionAmount)
registersymbol(DestructionAmount)

newmem:

code:
  movss xmm1,[rdx+78]
  mulss xmm1,[DestructionAmount]
  jmp return

DestructionAmount:
  dq (float)5.0

PickaxeDestructionSize:
  jmp newmem
return:
registersymbol(PickaxeDestructionSize)

[DISABLE]

PickaxeDestructionSize:
  db F3 0F 10 4A 78

unregistersymbol(DestructionAmount)
unregistersymbol(PickaxeDestructionSize)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+6215D3

"FSD-Win64-Shipping.exe"+62159E: E8 0D BA FF FF           -  call FSD-Win64-Shipping.exe+61CFB0
"FSD-Win64-Shipping.exe"+6215A3: 48 8B 84 24 98 00 00 00  -  mov rax,[rsp+00000098]
"FSD-Win64-Shipping.exe"+6215AB: 48 63 8C 24 90 00 00 00  -  movsxd  rcx,dword ptr [rsp+00000090]
"FSD-Win64-Shipping.exe"+6215B3: F3 0F 10 0D B5 AC 0F 02  -  movss xmm1,[FSD-Win64-Shipping.exe+271C270]
"FSD-Win64-Shipping.exe"+6215BB: F3 0F 11 00              -  movss [rax],xmm0
"FSD-Win64-Shipping.exe"+6215BF: 48 8B 86 B8 03 00 00     -  mov rax,[rsi+000003B8]
"FSD-Win64-Shipping.exe"+6215C6: 48 8B 40 30              -  mov rax,[rax+30]
"FSD-Win64-Shipping.exe"+6215CA: 48 8B 14 C8              -  mov rdx,[rax+rcx*8]
"FSD-Win64-Shipping.exe"+6215CE: 48 85 D2                 -  test rdx,rdx
"FSD-Win64-Shipping.exe"+6215D1: 74 05                    -  je FSD-Win64-Shipping.exe+6215D8
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+6215D3: F3 0F 10 4A 78           -  movss xmm1,[rdx+78]
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+6215D8: 8B 43 08                 -  mov eax,[rbx+08]
"FSD-Win64-Shipping.exe"+6215DB: F2 0F 10 03              -  movsd xmm0,[rbx]
"FSD-Win64-Shipping.exe"+6215DF: 89 44 24 3C              -  mov [rsp+3C],eax
"FSD-Win64-Shipping.exe"+6215E3: 8B 47 08                 -  mov eax,[rdi+08]
"FSD-Win64-Shipping.exe"+6215E6: 89 44 24 48              -  mov [rsp+48],eax
"FSD-Win64-Shipping.exe"+6215EA: 8B 86 50 52 00 00        -  mov eax,[rsi+00005250]
"FSD-Win64-Shipping.exe"+6215F0: 89 44 24 30              -  mov [rsp+30],eax
"FSD-Win64-Shipping.exe"+6215F4: FF C0                    -  inc eax
"FSD-Win64-Shipping.exe"+6215F6: 89 86 50 52 00 00        -  mov [rsi+00005250],eax
"FSD-Win64-Shipping.exe"+6215FC: F2 0F 11 44 24 34        -  movsd [rsp+34],xmm0
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1641</ID>
                      <Description>"Destruction Amount"</Description>
                      <VariableType>Float</VariableType>
                      <Address>DestructionAmount</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1798</ID>
                  <Description>"Unlimited Ammo"</Description>
                  <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                  <LastState Value="" Activated="1" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1797</ID>
                      <Description>"Unlimited Belt Fed Ammo"</Description>
                      <LastState Activated="1"/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-01-31
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(UnlimitedMinigunAmmo,FSD-Win64-Shipping.exe,89 86 A0 06 00 00 89) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+7B2B1E)

label(code)
label(return)

newmem:

code:
  add [rsi+000006A0],(int)0
  jmp return

UnlimitedMinigunAmmo:
  jmp newmem
  nop
return:
registersymbol(UnlimitedMinigunAmmo)

[DISABLE]

UnlimitedMinigunAmmo:
  db 89 86 A0 06 00 00

unregistersymbol(UnlimitedMinigunAmmo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+7B2B1E

"FSD-Win64-Shipping.exe"+7B2AEE: 48 8B 15 93 5D D4 02     -  mov rdx,[FSD-Win64-Shipping.exe+34F8888]
"FSD-Win64-Shipping.exe"+7B2AF5: 41 B0 01                 -  mov r8l,01
"FSD-Win64-Shipping.exe"+7B2AF8: 48 8B C8                 -  mov rcx,rax
"FSD-Win64-Shipping.exe"+7B2AFB: E8 F0 1C 0D 01           -  call FSD-Win64-Shipping.exe+18847F0
"FSD-Win64-Shipping.exe"+7B2B00: 8B 86 A0 06 00 00        -  mov eax,[rsi+000006A0]
"FSD-Win64-Shipping.exe"+7B2B06: 48 8D 8E 80 04 00 00     -  lea rcx,[rsi+00000480]
"FSD-Win64-Shipping.exe"+7B2B0D: 2B 86 88 06 00 00        -  sub eax,[rsi+00000688]
"FSD-Win64-Shipping.exe"+7B2B13: 48 8D 54 24 70           -  lea rdx,[rsp+70]
"FSD-Win64-Shipping.exe"+7B2B18: 85 C0                    -  test eax,eax
"FSD-Win64-Shipping.exe"+7B2B1A: 41 0F 4E C6              -  cmovle eax,r14d
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+7B2B1E: 89 86 A0 06 00 00        -  mov [rsi+000006A0],eax
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+7B2B24: 89 44 24 70              -  mov [rsp+70],eax
"FSD-Win64-Shipping.exe"+7B2B28: E8 C3 BF B2 FF           -  call FSD-Win64-Shipping.exe+2DEAF0
"FSD-Win64-Shipping.exe"+7B2B2D: 8B 86 A0 06 00 00        -  mov eax,[rsi+000006A0]
"FSD-Win64-Shipping.exe"+7B2B33: 48 8D 54 24 70           -  lea rdx,[rsp+70]
"FSD-Win64-Shipping.exe"+7B2B38: 48 8B 8E B8 04 00 00     -  mov rcx,[rsi+000004B8]
"FSD-Win64-Shipping.exe"+7B2B3F: 03 86 9C 06 00 00        -  add eax,[rsi+0000069C]
"FSD-Win64-Shipping.exe"+7B2B45: 48 81 C1 30 01 00 00     -  add rcx,00000130
"FSD-Win64-Shipping.exe"+7B2B4C: 89 44 24 70              -  mov [rsp+70],eax
"FSD-Win64-Shipping.exe"+7B2B50: E8 9B BF B2 FF           -  call FSD-Win64-Shipping.exe+2DEAF0
"FSD-Win64-Shipping.exe"+7B2B55: 48 8B 8E B8 04 00 00     -  mov rcx,[rsi+000004B8]
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1824</ID>
                      <Description>"Unlimited Magazine"</Description>
                      <LastState Activated="1"/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-02-04
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(UnlimitedAmmo,FSD-Win64-Shipping.exe,89 86 A0 06 00 00 89) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+7B2EAE)

label(code)
label(return)

newmem:

code:
  add [rsi+000006A0],(int)0
  jmp return

UnlimitedAmmo:
  jmp newmem
  nop
return:
registersymbol(UnlimitedAmmo)

[DISABLE]

UnlimitedAmmo:
  db 89 86 A0 06 00 00

unregistersymbol(UnlimitedAmmo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+7B2EAE

"FSD-Win64-Shipping.exe"+7B2E7E: 48 8B 15 93 5A D4 02     -  mov rdx,[FSD-Win64-Shipping.exe+34F8918]
"FSD-Win64-Shipping.exe"+7B2E85: 41 B0 01                 -  mov r8l,01
"FSD-Win64-Shipping.exe"+7B2E88: 48 8B C8                 -  mov rcx,rax
"FSD-Win64-Shipping.exe"+7B2E8B: E8 30 1D 0D 01           -  call FSD-Win64-Shipping.exe+1884BC0
"FSD-Win64-Shipping.exe"+7B2E90: 8B 86 A0 06 00 00        -  mov eax,[rsi+000006A0]
"FSD-Win64-Shipping.exe"+7B2E96: 48 8D 8E 80 04 00 00     -  lea rcx,[rsi+00000480]
"FSD-Win64-Shipping.exe"+7B2E9D: 2B 86 88 06 00 00        -  sub eax,[rsi+00000688]
"FSD-Win64-Shipping.exe"+7B2EA3: 48 8D 54 24 70           -  lea rdx,[rsp+70]
"FSD-Win64-Shipping.exe"+7B2EA8: 85 C0                    -  test eax,eax
"FSD-Win64-Shipping.exe"+7B2EAA: 41 0F 4E C6              -  cmovle eax,r14d
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+7B2EAE: 89 86 A0 06 00 00        -  mov [rsi+000006A0],eax
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+7B2EB4: 89 44 24 70              -  mov [rsp+70],eax
"FSD-Win64-Shipping.exe"+7B2EB8: E8 13 BC B2 FF           -  call FSD-Win64-Shipping.exe+2DEAD0
"FSD-Win64-Shipping.exe"+7B2EBD: 8B 86 A0 06 00 00        -  mov eax,[rsi+000006A0]
"FSD-Win64-Shipping.exe"+7B2EC3: 48 8D 54 24 70           -  lea rdx,[rsp+70]
"FSD-Win64-Shipping.exe"+7B2EC8: 48 8B 8E B8 04 00 00     -  mov rcx,[rsi+000004B8]
"FSD-Win64-Shipping.exe"+7B2ECF: 03 86 9C 06 00 00        -  add eax,[rsi+0000069C]
"FSD-Win64-Shipping.exe"+7B2ED5: 48 81 C1 30 01 00 00     -  add rcx,00000130
"FSD-Win64-Shipping.exe"+7B2EDC: 89 44 24 70              -  mov [rsp+70],eax
"FSD-Win64-Shipping.exe"+7B2EE0: E8 EB BB B2 FF           -  call FSD-Win64-Shipping.exe+2DEAD0
"FSD-Win64-Shipping.exe"+7B2EE5: 48 8B 8E B8 04 00 00     -  mov rcx,[rsi+000004B8]
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1091</ID>
                      <Description>"Unlimited Reserve Ammo"</Description>
                      <LastState Activated="1"/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version:
  Date   : 2020-01-31
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ReserveAmmo,FSD-Win64-Shipping.exe,89 8B 9C 06 00 00 48) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+78AE84)

label(code)
label(return)

newmem:

code:
  add [rbx+0000069C],(int)0
  jmp return

ReserveAmmo:
  jmp newmem
  nop
return:
registersymbol(ReserveAmmo)

[DISABLE]

ReserveAmmo:
  db 89 8B 9C 06 00 00

unregistersymbol(ReserveAmmo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+78AE84

"FSD-Win64-Shipping.exe"+78AE5A: 80 BB 0A 07 00 00 03  -  cmp byte ptr [rbx+0000070A],03
"FSD-Win64-Shipping.exe"+78AE61: 0F 85 AA 00 00 00     -  jne FSD-Win64-Shipping.exe+78AF11
"FSD-Win64-Shipping.exe"+78AE67: 8B 8B 9C 06 00 00     -  mov ecx,[rbx+0000069C]
"FSD-Win64-Shipping.exe"+78AE6D: 8B 83 A0 06 00 00     -  mov eax,[rbx+000006A0]
"FSD-Win64-Shipping.exe"+78AE73: 8B 93 84 06 00 00     -  mov edx,[rbx+00000684]
"FSD-Win64-Shipping.exe"+78AE79: 2B D0                 -  sub edx,eax
"FSD-Win64-Shipping.exe"+78AE7B: 3B CA                 -  cmp ecx,edx
"FSD-Win64-Shipping.exe"+78AE7D: 0F 4E D1              -  cmovle edx,ecx
"FSD-Win64-Shipping.exe"+78AE80: 2B CA                 -  sub ecx,edx
"FSD-Win64-Shipping.exe"+78AE82: 03 C2                 -  add eax,edx
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+78AE84: 89 8B 9C 06 00 00     -  mov [rbx+0000069C],ecx
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+78AE8A: 48 8D 54 24 30        -  lea rdx,[rsp+30]
"FSD-Win64-Shipping.exe"+78AE8F: 48 8D 8B 80 04 00 00  -  lea rcx,[rbx+00000480]
"FSD-Win64-Shipping.exe"+78AE96: 89 83 A0 06 00 00     -  mov [rbx+000006A0],eax
"FSD-Win64-Shipping.exe"+78AE9C: 89 44 24 30           -  mov [rsp+30],eax
"FSD-Win64-Shipping.exe"+78AEA0: E8 4B 3C B5 FF        -  call FSD-Win64-Shipping.exe+2DEAF0
"FSD-Win64-Shipping.exe"+78AEA5: 48 8B 8B B8 04 00 00  -  mov rcx,[rbx+000004B8]
"FSD-Win64-Shipping.exe"+78AEAC: 48 8D 54 24 30        -  lea rdx,[rsp+30]
"FSD-Win64-Shipping.exe"+78AEB1: 8B 83 9C 06 00 00     -  mov eax,[rbx+0000069C]
"FSD-Win64-Shipping.exe"+78AEB7: 48 81 C1 20 01 00 00  -  add rcx,00000120
"FSD-Win64-Shipping.exe"+78AEBE: 89 44 24 30           -  mov [rsp+30],eax
}
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1105</ID>
                  <Description>"Unlimited Flares"</Description>
                  <LastState Activated="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version:
  Date   : 2020-02-10
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(FlareCount,FSD-Win64-Shipping.exe,89 8B 58 02 00 00 48 85) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+5C2611)

label(code)
label(return)

newmem:

code:
  add [rbx+00000258],(int)0
  jmp return

FlareCount:
  jmp newmem
  nop
return:
registersymbol(FlareCount)

[DISABLE]

FlareCount:
  db 89 8B 58 02 00 00

unregistersymbol(FlareCount)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+5C2611

"FSD-Win64-Shipping.exe"+5C25E9: 4C 39 04 C8           -  cmp [rax+rcx*8],r8
"FSD-Win64-Shipping.exe"+5C25ED: 74 02                 -  je FSD-Win64-Shipping.exe+5C25F1
"FSD-Win64-Shipping.exe"+5C25EF: 33 ED                 -  xor ebp,ebp
"FSD-Win64-Shipping.exe"+5C25F1: 80 BD 81 0E 00 00 00  -  cmp byte ptr [rbp+00000E81],00
"FSD-Win64-Shipping.exe"+5C25F8: 75 62                 -  jne FSD-Win64-Shipping.exe+5C265C
"FSD-Win64-Shipping.exe"+5C25FA: 48 8B CB              -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+5C25FD: E8 AE 29 39 00        -  call FSD-Win64-Shipping.exe+954FB0
"FSD-Win64-Shipping.exe"+5C2602: 8B 8B 58 02 00 00     -  mov ecx,[rbx+00000258]
"FSD-Win64-Shipping.exe"+5C2608: 48 8B 83 F0 00 00 00  -  mov rax,[rbx+000000F0]
"FSD-Win64-Shipping.exe"+5C260F: FF C9                 -  dec ecx
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+5C2611: 89 8B 58 02 00 00     -  mov [rbx+00000258],ecx
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+5C2617: 48 85 C0              -  test rax,rax
"FSD-Win64-Shipping.exe"+5C261A: 75 0E                 -  jne FSD-Win64-Shipping.exe+5C262A
"FSD-Win64-Shipping.exe"+5C261C: 48 8B CB              -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+5C261F: E8 9C A4 2B 01        -  call FSD-Win64-Shipping.exe+187CAC0
"FSD-Win64-Shipping.exe"+5C2624: 8B 8B 58 02 00 00     -  mov ecx,[rbx+00000258]
"FSD-Win64-Shipping.exe"+5C262A: 8B 80 28 05 00 00     -  mov eax,[rax+00000528]
"FSD-Win64-Shipping.exe"+5C2630: 48 8D 54 24 40        -  lea rdx,[rsp+40]
"FSD-Win64-Shipping.exe"+5C2635: 89 4C 24 40           -  mov [rsp+40],ecx
"FSD-Win64-Shipping.exe"+5C2639: 48 8D 8B 48 01 00 00  -  lea rcx,[rbx+00000148]
"FSD-Win64-Shipping.exe"+5C2640: 89 83 30 02 00 00     -  mov [rbx+00000230],eax
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1094</ID>
                  <Description>"Unlimited Grenades (Host Required)"</Description>
                  <LastState Activated="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-27
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(GrenadeCount,FSD-Win64-Shipping.exe,89 87 44 04 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+7AF7B4)

label(code)
label(return)

newmem:

code:
  mov [rdi+00000444],(int)4
  jmp return

GrenadeCount:
  jmp newmem
  nop
return:
registersymbol(GrenadeCount)

[DISABLE]

GrenadeCount:
  db 89 87 44 04 00 00

unregistersymbol(GrenadeCount)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+7AF7B4

"FSD-Win64-Shipping.exe"+7AF778: 8B 87 44 04 00 00           -  mov eax,[rdi+00000444]
"FSD-Win64-Shipping.exe"+7AF77E: 85 C0                       -  test eax,eax
"FSD-Win64-Shipping.exe"+7AF780: 0F 8E 9B 04 00 00           -  jng FSD-Win64-Shipping.exe+7AFC21
"FSD-Win64-Shipping.exe"+7AF786: 48 89 9C 24 38 01 00 00     -  mov [rsp+00000138],rbx
"FSD-Win64-Shipping.exe"+7AF78E: FF C8                       -  dec eax
"FSD-Win64-Shipping.exe"+7AF790: 48 89 B4 24 40 01 00 00     -  mov [rsp+00000140],rsi
"FSD-Win64-Shipping.exe"+7AF798: 48 8B CF                    -  mov rcx,rdi
"FSD-Win64-Shipping.exe"+7AF79B: 0F 29 B4 24 10 01 00 00     -  movaps [rsp+00000110],xmm6
"FSD-Win64-Shipping.exe"+7AF7A3: 0F 29 BC 24 00 01 00 00     -  movaps [rsp+00000100],xmm7
"FSD-Win64-Shipping.exe"+7AF7AB: 44 0F 29 84 24 F0 00 00 00  -  movaps [rsp+000000F0],xmm8
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+7AF7B4: 89 87 44 04 00 00           -  mov [rdi+00000444],eax
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+7AF7BA: E8 A1 44 FF FF              -  call FSD-Win64-Shipping.exe+7A3C60
"FSD-Win64-Shipping.exe"+7AF7BF: 48 8B 07                    -  mov rax,[rdi]
"FSD-Win64-Shipping.exe"+7AF7C2: 48 8B CF                    -  mov rcx,rdi
"FSD-Win64-Shipping.exe"+7AF7C5: FF 90 C0 05 00 00           -  call qword ptr [rax+000005C0]
"FSD-Win64-Shipping.exe"+7AF7CB: 48 8B 87 88 03 00 00        -  mov rax,[rdi+00000388]
"FSD-Win64-Shipping.exe"+7AF7D2: 48 8B 98 58 01 00 00        -  mov rbx,[rax+00000158]
"FSD-Win64-Shipping.exe"+7AF7D9: 48 85 DB                    -  test rbx,rbx
"FSD-Win64-Shipping.exe"+7AF7DC: 74 59                       -  je FSD-Win64-Shipping.exe+7AF837
"FSD-Win64-Shipping.exe"+7AF7DE: 0F 10 8B 90 01 00 00        -  movups xmm1,[rbx+00000190]
"FSD-Win64-Shipping.exe"+7AF7E5: 0F 28 C1                    -  movaps xmm0,xmm1
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1296</ID>
                  <Description>"Unlimited O2 (Host Required)"</Description>
                  <LastState Activated="1"/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-10-11
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(OxygenLevels,FSD-Win64-Shipping.exe,F3 0F 11 B3 1C 01 00 00 0F B6) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+74B533)

label(code)
label(return)

newmem:

code:
  mov [rbx+0000011C],(float)100
  jmp return

OxygenLevels:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(OxygenLevels)

[DISABLE]

OxygenLevels:
  db F3 0F 11 B3 1C 01 00 00

unregistersymbol(OxygenLevels)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+74B533

"FSD-Win64-Shipping.exe"+74B504: F3 0F 59 B3 20 01 00 00  -  mulss xmm6,[rbx+00000120]
"FSD-Win64-Shipping.exe"+74B50C: F3 0F 58 F2              -  addss xmm6,xmm2
"FSD-Win64-Shipping.exe"+74B510: F3 0F 5D 35 E8 39 FE 01  -  minss xmm6,[FSD-Win64-Shipping.exe+272EF00]
"FSD-Win64-Shipping.exe"+74B518: EB 16                    -  jmp FSD-Win64-Shipping.exe+74B530
"FSD-Win64-Shipping.exe"+74B51A: 0F 28 C6                 -  movaps xmm0,xmm6
"FSD-Win64-Shipping.exe"+74B51D: 0F 28 F2                 -  movaps xmm6,xmm2
"FSD-Win64-Shipping.exe"+74B520: F3 0F 59 83 30 01 00 00  -  mulss xmm0,[rbx+00000130]
"FSD-Win64-Shipping.exe"+74B528: F3 0F 5C F0              -  subss xmm6,xmm0
"FSD-Win64-Shipping.exe"+74B52C: F3 0F 5F F1              -  maxss xmm6,xmm1
"FSD-Win64-Shipping.exe"+74B530: 0F 2F F1                 -  comiss xmm6,xmm1
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+74B533: F3 0F 11 B3 1C 01 00 00  -  movss [rbx+0000011C],xmm6
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+74B53B: 0F B6 83 48 01 00 00     -  movzx eax,byte ptr [rbx+00000148]
"FSD-Win64-Shipping.exe"+74B542: 77 59                    -  ja FSD-Win64-Shipping.exe+74B59D
"FSD-Win64-Shipping.exe"+74B544: 84 C0                    -  test al,al
"FSD-Win64-Shipping.exe"+74B546: 0F 85 A4 00 00 00        -  jne FSD-Win64-Shipping.exe+74B5F0
"FSD-Win64-Shipping.exe"+74B54C: 48 8B B3 E8 00 00 00     -  mov rsi,[rbx+000000E8]
"FSD-Win64-Shipping.exe"+74B553: C6 83 48 01 00 00 01     -  mov byte ptr [rbx+00000148],01
"FSD-Win64-Shipping.exe"+74B55A: 48 85 F6                 -  test rsi,rsi
"FSD-Win64-Shipping.exe"+74B55D: 74 26                    -  je FSD-Win64-Shipping.exe+74B585
"FSD-Win64-Shipping.exe"+74B55F: E8 3C 15 24 00           -  call FSD-Win64-Shipping.exe+98CAA0
"FSD-Win64-Shipping.exe"+74B564: 48 8B 56 10              -  mov rdx,[rsi+10]
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1855</ID>
              <Description>"Resource Editing"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="1" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>1870</ID>
                  <Description>"Credits"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>"FSD-Win64-Shipping.exe"+0375C318</Address>
                  <Offsets>
                    <Offset>330</Offset>
                    <Offset>940</Offset>
                    <Offset>218</Offset>
                    <Offset>10</Offset>
                    <Offset>BD0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1885</ID>
                  <Description>"Perk Points"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>"FSD-Win64-Shipping.exe"+0375C318</Address>
                  <Offsets>
                    <Offset>1F0</Offset>
                    <Offset>940</Offset>
                    <Offset>218</Offset>
                    <Offset>10</Offset>
                    <Offset>BD0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1916</ID>
                  <Description>"Blank Matrix Core"</Description>
                  <VariableType>Float</VariableType>
                  <Address>"FSD-Win64-Shipping.exe"+0376A5A0</Address>
                  <Offsets>
                    <Offset>160</Offset>
                    <Offset>6D0</Offset>
                    <Offset>6B0</Offset>
                    <Offset>2B0</Offset>
                    <Offset>140</Offset>
                    <Offset>68</Offset>
                    <Offset>F8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>1963</ID>
                  <Description>"Transaction Scripts (Press Esc -&gt; "Disband Team" after selling minerals to get them back)"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1961</ID>
                      <Description>"Never Lose Beer Minerals When Buying Beer"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-03-03
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NoLoseBeerMinerals,FSD-Win64-Shipping.exe,F3 0F 11 09 48 8B 04 FE) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+6BE984)

label(code)
label(return)

label(MineralMult)
registersymbol(MineralMult)

newmem:

code:
  mulss xmm1,[MineralMult]
  //movss [rcx],xmm1
  //mov rax,[rsi+rdi*8]
  jmp return

MineralMult:
  dd (float)1.0

NoLoseBeerMinerals:
  jmp newmem
  nop 3
return:
registersymbol(NoLoseBeerMinerals)

[DISABLE]

NoLoseBeerMinerals:
  db F3 0F 11 09 48 8B 04 FE

unregistersymbol(MineralMult)
unregistersymbol(NoLoseBeerMinerals)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+6BE984

"FSD-Win64-Shipping.exe"+6BE95D: 48 8D 48 10              -  lea rcx,[rax+10]
"FSD-Win64-Shipping.exe"+6BE961: B8 00 00 00 00           -  mov eax,00000000
"FSD-Win64-Shipping.exe"+6BE966: 48 0F 44 C8              -  cmove rcx,rax
"FSD-Win64-Shipping.exe"+6BE96A: 48 85 C9                 -  test rcx,rcx
"FSD-Win64-Shipping.exe"+6BE96D: 74 32                    -  je FSD-Win64-Shipping.exe+6BE9A1
"FSD-Win64-Shipping.exe"+6BE96F: 66 0F 6E 44 FE 08        -  movd xmm0,[rsi+rdi*8+08]
"FSD-Win64-Shipping.exe"+6BE975: 48 8D 55 97              -  lea rdx,[rbp-69]
"FSD-Win64-Shipping.exe"+6BE979: F3 0F 10 09              -  movss xmm1,[rcx]
"FSD-Win64-Shipping.exe"+6BE97D: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
"FSD-Win64-Shipping.exe"+6BE980: F3 0F 5C C8              -  subss xmm1,xmm0
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+6BE984: F3 0F 11 09              -  movss [rcx],xmm1
"FSD-Win64-Shipping.exe"+6BE988: 48 8B 04 FE              -  mov rax,[rsi+rdi*8]
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+6BE98C: 48 89 45 97              -  mov [rbp-69],rax
"FSD-Win64-Shipping.exe"+6BE990: F3 0F 11 4D 9F           -  movss [rbp-61],xmm1
"FSD-Win64-Shipping.exe"+6BE995: 48 8D 8B F0 00 00 00     -  lea rcx,[rbx+000000F0]
"FSD-Win64-Shipping.exe"+6BE99C: E8 7F 05 C2 FF           -  call FSD-Win64-Shipping.exe+2DEF20
"FSD-Win64-Shipping.exe"+6BE9A1: 8B 45 CB                 -  mov eax,[rbp-35]
"FSD-Win64-Shipping.exe"+6BE9A4: 48 8D 4D C7              -  lea rcx,[rbp-39]
"FSD-Win64-Shipping.exe"+6BE9A8: F7 D0                    -  not eax
"FSD-Win64-Shipping.exe"+6BE9AA: 21 45 D7                 -  and [rbp-29],eax
"FSD-Win64-Shipping.exe"+6BE9AD: E8 4E DB BA FF           -  call FSD-Win64-Shipping.exe+26C500
"FSD-Win64-Shipping.exe"+6BE9B2: E9 09 FF FF FF           -  jmp FSD-Win64-Shipping.exe+6BE8C0
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1962</ID>
                      <Description>"Never Lose Minerals When Selling"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-03-03
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NeverSellMinerals,FSD-Win64-Shipping.exe,F3 0F 11 48 10 F3 0F 11) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+69ADAB)

label(code)
label(return)

newmem:

code:
  //movss [rax+10],xmm1
  jmp return

NeverSellMinerals:
  jmp newmem
return:
registersymbol(NeverSellMinerals)

[DISABLE]

NeverSellMinerals:
  db F3 0F 11 48 10

unregistersymbol(NeverSellMinerals)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+69ADAB

"FSD-Win64-Shipping.exe"+69AD7A: 48 63 44 24 70        -  movsxd  rax,dword ptr [rsp+70]
"FSD-Win64-Shipping.exe"+69AD7F: 48 6B C0 1C           -  imul rax,rax,1C
"FSD-Win64-Shipping.exe"+69AD83: 48 03 85 D0 06 00 00  -  add rax,[rbp+000006D0]
"FSD-Win64-Shipping.exe"+69AD8A: F3 0F 10 48 10        -  movss xmm1,[rax+10]
"FSD-Win64-Shipping.exe"+69AD8F: 48 8D 8D F0 00 00 00  -  lea rcx,[rbp+000000F0]
"FSD-Win64-Shipping.exe"+69AD96: F3 0F 5C CE           -  subss xmm1,xmm6
"FSD-Win64-Shipping.exe"+69AD9A: 48 89 74 24 20        -  mov [rsp+20],rsi
"FSD-Win64-Shipping.exe"+69AD9F: 0F 57 C0              -  xorps xmm0,xmm0
"FSD-Win64-Shipping.exe"+69ADA2: 48 8D 54 24 20        -  lea rdx,[rsp+20]
"FSD-Win64-Shipping.exe"+69ADA7: F3 0F 5F C8           -  maxss xmm1,xmm0
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+69ADAB: F3 0F 11 48 10        -  movss [rax+10],xmm1
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+69ADB0: F3 0F 11 4C 24 28     -  movss [rsp+28],xmm1
"FSD-Win64-Shipping.exe"+69ADB6: E8 65 41 C4 FF        -  call FSD-Win64-Shipping.exe+2DEF20
"FSD-Win64-Shipping.exe"+69ADBB: 48 8B 5C 24 68        -  mov rbx,[rsp+68]
"FSD-Win64-Shipping.exe"+69ADC0: 0F 28 74 24 30        -  movaps xmm6,[rsp+30]
"FSD-Win64-Shipping.exe"+69ADC5: 48 83 C4 40           -  add rsp,40
"FSD-Win64-Shipping.exe"+69ADC9: 5F                    -  pop rdi
"FSD-Win64-Shipping.exe"+69ADCA: 5E                    -  pop rsi
"FSD-Win64-Shipping.exe"+69ADCB: 5D                    -  pop rbp
"FSD-Win64-Shipping.exe"+69ADCC: C3                    -  ret 
"FSD-Win64-Shipping.exe"+69ADCD: CC                    -  int 3 
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1964</ID>
                      <Description>"Never Lose Credits When Purchasing Minerals"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-03-03
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NeverLoseCreditsOnBuyMinerals,FSD-Win64-Shipping.exe,89 83 30 03 00 00 89 44 24 38 E8 68) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+69ACA9)

label(code)
label(return)

newmem:

code:
  //mov [rbx+00000330],eax
  jmp return

NeverLoseCreditsOnBuyMinerals:
  jmp newmem
  nop
return:
registersymbol(NeverLoseCreditsOnBuyMinerals)

[DISABLE]

NeverLoseCreditsOnBuyMinerals:
  db 89 83 30 03 00 00

unregistersymbol(NeverLoseCreditsOnBuyMinerals)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+69ACA9

"FSD-Win64-Shipping.exe"+69AC8F: 85 D2                 -  test edx,edx
"FSD-Win64-Shipping.exe"+69AC91: 7E 33                 -  jle FSD-Win64-Shipping.exe+69ACC6
"FSD-Win64-Shipping.exe"+69AC93: 85 C0                 -  test eax,eax
"FSD-Win64-Shipping.exe"+69AC95: 7E 2F                 -  jle FSD-Win64-Shipping.exe+69ACC6
"FSD-Win64-Shipping.exe"+69AC97: 2B C2                 -  sub eax,edx
"FSD-Win64-Shipping.exe"+69AC99: 33 C9                 -  xor ecx,ecx
"FSD-Win64-Shipping.exe"+69AC9B: 85 C0                 -  test eax,eax
"FSD-Win64-Shipping.exe"+69AC9D: 48 8D 54 24 38        -  lea rdx,[rsp+38]
"FSD-Win64-Shipping.exe"+69ACA2: 0F 4E C1              -  cmovle eax,ecx
"FSD-Win64-Shipping.exe"+69ACA5: 48 8D 4B 28           -  lea rcx,[rbx+28]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+69ACA9: 89 83 30 03 00 00     -  mov [rbx+00000330],eax
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+69ACAF: 89 44 24 38           -  mov [rsp+38],eax
"FSD-Win64-Shipping.exe"+69ACB3: E8 68 42 C4 FF        -  call FSD-Win64-Shipping.exe+2DEF20
"FSD-Win64-Shipping.exe"+69ACB8: 48 8B CB              -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+69ACBB: E8 20 AC 01 00        -  call FSD-Win64-Shipping.exe+6B58E0
"FSD-Win64-Shipping.exe"+69ACC0: 8B 83 30 03 00 00     -  mov eax,[rbx+00000330]
"FSD-Win64-Shipping.exe"+69ACC6: 48 83 C4 20           -  add rsp,20
"FSD-Win64-Shipping.exe"+69ACCA: 5B                    -  pop rbx
"FSD-Win64-Shipping.exe"+69ACCB: C3                    -  ret 
"FSD-Win64-Shipping.exe"+69ACCC: CC                    -  int 3 
"FSD-Win64-Shipping.exe"+69ACCD: CC                    -  int 3 
}
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1965</ID>
                      <Description>"Never Lose Credits When Buying Beer"</Description>
                      <LastState/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-03-03
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NeverLoseCreditsWhenBuyingBeer,FSD-Win64-Shipping.exe,29 83 30 03 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+6BE8F5)

label(code)
label(return)

newmem:

code:
  //sub [rbx+00000330],eax
  jmp return

NeverLoseCreditsWhenBuyingBeer:
  jmp newmem
  nop
return:
registersymbol(NeverLoseCreditsWhenBuyingBeer)

[DISABLE]

NeverLoseCreditsWhenBuyingBeer:
  db 29 83 30 03 00 00

unregistersymbol(NeverLoseCreditsWhenBuyingBeer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+6BE8F5

"FSD-Win64-Shipping.exe"+6BE8D1: 75 09                    -  jne FSD-Win64-Shipping.exe+6BE8DC
"FSD-Win64-Shipping.exe"+6BE8D3: 49 3B F5                 -  cmp rsi,r13
"FSD-Win64-Shipping.exe"+6BE8D6: 0F 84 DB 00 00 00        -  je FSD-Win64-Shipping.exe+6BE9B7
"FSD-Win64-Shipping.exe"+6BE8DC: 48 8B 36                 -  mov rsi,[rsi]
"FSD-Win64-Shipping.exe"+6BE8DF: 48 8D 3C 40              -  lea rdi,[rax+rax*2]
"FSD-Win64-Shipping.exe"+6BE8E3: 4C 8B 04 FE              -  mov r8,[rsi+rdi*8]
"FSD-Win64-Shipping.exe"+6BE8E7: 4C 3B 45 B7              -  cmp r8,[rbp-49]
"FSD-Win64-Shipping.exe"+6BE8EB: 75 3E                    -  jne FSD-Win64-Shipping.exe+6BE92B
"FSD-Win64-Shipping.exe"+6BE8ED: 8B 44 FE 08              -  mov eax,[rsi+rdi*8+08]
"FSD-Win64-Shipping.exe"+6BE8F1: 48 8D 4B 28              -  lea rcx,[rbx+28]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+6BE8F5: 29 83 30 03 00 00        -  sub [rbx+00000330],eax
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+6BE8FB: 48 8D 55 77              -  lea rdx,[rbp+77]
"FSD-Win64-Shipping.exe"+6BE8FF: 8B 83 30 03 00 00        -  mov eax,[rbx+00000330]
"FSD-Win64-Shipping.exe"+6BE905: 89 45 77                 -  mov [rbp+77],eax
"FSD-Win64-Shipping.exe"+6BE908: E8 13 06 C2 FF           -  call FSD-Win64-Shipping.exe+2DEF20
"FSD-Win64-Shipping.exe"+6BE90D: 66 0F 6E 83 30 03 00 00  -  movd xmm0,[rbx+00000330]
"FSD-Win64-Shipping.exe"+6BE915: 48 8D 55 E7              -  lea rdx,[rbp-19]
"FSD-Win64-Shipping.exe"+6BE919: 48 8B 04 FE              -  mov rax,[rsi+rdi*8]
"FSD-Win64-Shipping.exe"+6BE91D: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
"FSD-Win64-Shipping.exe"+6BE920: 48 89 45 E7              -  mov [rbp-19],rax
"FSD-Win64-Shipping.exe"+6BE924: F3 0F 11 45 EF           -  movss [rbp-11],xmm0
}
</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1966</ID>
                  <Description>"Set Blank Core Gained From Deep Dive (Enable just before the end of 1/3 Deep Dive mission)"</Description>
                  <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-03-05
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(UnlimitedBlankCores,FSD-Win64-Shipping.exe,F3 0F 11 70 10 F3) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+68FFD3)

label(code)
label(return)

label(MultiplierBlankCores)
registersymbol(MultiplierBlankCores)
// FSD-Win64-Shipping.UFSDSaveGame::AddResources
newmem:

code:
  mulss xmm6,[MultiplierBlankCores]
  mulss xmm0,[MultiplierBlankCores]
  movss [rax+10],xmm6
  jmp return

MultiplierBlankCores:
  dd (float)100.0

UnlimitedBlankCores:
  jmp newmem
return:
registersymbol(UnlimitedBlankCores)

[DISABLE]

UnlimitedBlankCores:
  db F3 0F 11 70 10

unregistersymbol(MultiplierBlankCores)
unregistersymbol(UnlimitedBlankCores)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+68FFD3

"FSD-Win64-Shipping.exe"+68FFA1: E8 DA 6D FF FF        -  call FSD-Win64-Shipping.exe+686D80
"FSD-Win64-Shipping.exe"+68FFA6: 48 63 44 24 68        -  movsxd  rax,dword ptr [rsp+68]
"FSD-Win64-Shipping.exe"+68FFAB: 48 6B C0 1C           -  imul rax,rax,1C
"FSD-Win64-Shipping.exe"+68FFAF: 48 03 83 D0 06 00 00  -  add rax,[rbx+000006D0]
"FSD-Win64-Shipping.exe"+68FFB6: F3 0F 58 70 10        -  addss xmm6,[rax+10]
"FSD-Win64-Shipping.exe"+68FFBB: 0F 57 C0              -  xorps xmm0,xmm0
"FSD-Win64-Shipping.exe"+68FFBE: 48 89 74 24 20        -  mov [rsp+20],rsi
"FSD-Win64-Shipping.exe"+68FFC3: 48 8D 8B F0 00 00 00  -  lea rcx,[rbx+000000F0]
"FSD-Win64-Shipping.exe"+68FFCA: 48 8D 54 24 20        -  lea rdx,[rsp+20]
"FSD-Win64-Shipping.exe"+68FFCF: F3 0F 5F F0           -  maxss xmm6,xmm0
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+68FFD3: F3 0F 11 70 10        -  movss [rax+10],xmm6
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+68FFD8: F3 0F 11 74 24 28     -  movss [rsp+28],xmm6
"FSD-Win64-Shipping.exe"+68FFDE: E8 3D EF C4 FF        -  call FSD-Win64-Shipping.exe+2DEF20
"FSD-Win64-Shipping.exe"+68FFE3: 48 8B 7C 24 40        -  mov rdi,[rsp+40]
"FSD-Win64-Shipping.exe"+68FFE8: 48 8B 6C 24 60        -  mov rbp,[rsp+60]
"FSD-Win64-Shipping.exe"+68FFED: 0F 28 74 24 30        -  movaps xmm6,[rsp+30]
"FSD-Win64-Shipping.exe"+68FFF2: 48 83 C4 48           -  add rsp,48
"FSD-Win64-Shipping.exe"+68FFF6: 5E                    -  pop rsi
"FSD-Win64-Shipping.exe"+68FFF7: 5B                    -  pop rbx
"FSD-Win64-Shipping.exe"+68FFF8: C3                    -  ret 
"FSD-Win64-Shipping.exe"+68FFF9: CC                    -  int 3 
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1967</ID>
                      <Description>"Firing Speed"</Description>
                      <VariableType>Float</VariableType>
                      <Address>MultiplierBlankCores</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>103</ID>
              <Description>"Mining (Activate Item, Set Value, Then Deposit At Least 1 Unit Into Molly) (Host Required)"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="1" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>994</ID>
                  <Description>"Collect Eggs / Aquarq / Boolo Caps / Fossils / Apoca Bloom (Set Value Desired)"</Description>
                  <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-08-12
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(CollectingMineralsAmount,FSD-Win64-Shipping.exe,41 89 90 90 01 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+733811)

label(code)
label(return)

label(eggsCollected)
registerSymbol(eggsCollected)

newmem:

code:
  push rax
  mov eax,[eggsCollected]
  mov [r8+00000190],eax
  pop rax
  jmp return

  align 10 CC // align the memory to be assebled.
  eggsCollected:
    dd (int)5

CollectingMineralsAmount:
  jmp newmem
  nop
  nop
return:
registersymbol(CollectingMineralsAmount)

[DISABLE]

CollectingMineralsAmount:
  db 41 89 90 90 01 00 00

unregistersymbol(CollectingMineralsAmount)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+733811

"FSD-Win64-Shipping.exe"+7337E6: 8B 89 90 01 00 00        -  mov ecx,[rcx+00000190]
"FSD-Win64-Shipping.exe"+7337EC: F3 0F 10 05 F8 12 06 02  -  movss xmm0,[FSD-Win64-Shipping.exe+2794AEC]
"FSD-Win64-Shipping.exe"+7337F4: 4C 89 44 24 48           -  mov [rsp+48],r8
"FSD-Win64-Shipping.exe"+7337F9: F3 0F 5C C2              -  subss xmm0,xmm2
"FSD-Win64-Shipping.exe"+7337FD: F3 0F 2D C0              -  cvtss2si eax,xmm0
"FSD-Win64-Shipping.exe"+733801: D1 F8                    -  sar eax,1
"FSD-Win64-Shipping.exe"+733803: 2B C8                    -  sub ecx,eax
"FSD-Win64-Shipping.exe"+733805: 3B CA                    -  cmp ecx,edx
"FSD-Win64-Shipping.exe"+733807: 0F 4E D1                 -  cmovle edx,ecx
"FSD-Win64-Shipping.exe"+73380A: 49 8D 88 F8 00 00 00     -  lea rcx,[r8+000000F8]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+733811: 41 89 90 90 01 00 00     -  mov [r8+00000190],edx
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+733818: 48 8D 54 24 48           -  lea rdx,[rsp+48]
"FSD-Win64-Shipping.exe"+73381D: E8 DE 5A BA FF           -  call FSD-Win64-Shipping.exe+2D9300
"FSD-Win64-Shipping.exe"+733822: 48 83 C4 28              -  add rsp,28
"FSD-Win64-Shipping.exe"+733826: C3                       -  ret
"FSD-Win64-Shipping.exe"+733827: CC                       -  int 3
"FSD-Win64-Shipping.exe"+733828: CC                       -  int 3
"FSD-Win64-Shipping.exe"+733829: CC                       -  int 3
"FSD-Win64-Shipping.exe"+73382A: CC                       -  int 3
"FSD-Win64-Shipping.exe"+73382B: CC                       -  int 3
"FSD-Win64-Shipping.exe"+73382C: CC                       -  int 3
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>995</ID>
                      <Description>"Input Value"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>eggsCollected</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1229</ID>
                  <Description>"Collect Hollomite / Dystrum"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-27
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HollomiteDystrumAmount,FSD-Win64-Shipping.exe,F3 0F 11 91 94 01 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+733863)

label(code)
label(return)

newmem:

code:
  mov [rcx+00000194],(float)200
  jmp return

HollomiteDystrumAmount:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(HollomiteDystrumAmount)

[DISABLE]

HollomiteDystrumAmount:
  db F3 0F 11 91 94 01 00 00

unregistersymbol(HollomiteDystrumAmount)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+733863

"FSD-Win64-Shipping.exe"+733834: 0F 57 C0                 -  xorps xmm0,xmm0
"FSD-Win64-Shipping.exe"+733837: 0F 2F D0                 -  comiss xmm2,xmm0
"FSD-Win64-Shipping.exe"+73383A: 76 3B                    -  jna FSD-Win64-Shipping.exe+733877
"FSD-Win64-Shipping.exe"+73383C: 48 8B 81 88 01 00 00     -  mov rax,[rcx+00000188]
"FSD-Win64-Shipping.exe"+733843: 48 39 42 58              -  cmp [rdx+58],rax
"FSD-Win64-Shipping.exe"+733847: 75 2E                    -  jne FSD-Win64-Shipping.exe+733877
"FSD-Win64-Shipping.exe"+733849: F3 0F 58 91 94 01 00 00  -  addss xmm2,[rcx+00000194]
"FSD-Win64-Shipping.exe"+733851: 48 89 4C 24 48           -  mov [rsp+48],rcx
"FSD-Win64-Shipping.exe"+733856: 48 8D 54 24 48           -  lea rdx,[rsp+48]
"FSD-Win64-Shipping.exe"+73385B: F3 0F 5D 91 90 01 00 00  -  minss xmm2,[rcx+00000190]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+733863: F3 0F 11 91 94 01 00 00  -  movss [rcx+00000194],xmm2
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+73386B: 48 81 C1 F8 00 00 00     -  add rcx,000000F8
"FSD-Win64-Shipping.exe"+733872: E8 89 5A BA FF           -  call FSD-Win64-Shipping.exe+2D9300
"FSD-Win64-Shipping.exe"+733877: 48 83 C4 28              -  add rsp,28
"FSD-Win64-Shipping.exe"+73387B: C3                       -  ret 
"FSD-Win64-Shipping.exe"+73387C: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+73387D: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+73387E: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+73387F: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+733880: 48 89 5C 24 10           -  mov [rsp+10],rbx
"FSD-Win64-Shipping.exe"+733885: 56                       -  push rsi
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1426</ID>
                  <Description>"Unlimited Mineral Capacity (On Dwarf) (Enable During Mission)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-10-26
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfiniteCarry,FSD-Win64-Shipping.exe,76 13 0F 28 C1 F3 0F 5C) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+70CFAC)

label(code)
label(return)

newmem:

code:
  jmp FSD-Win64-Shipping.UCappedResource::Add+31
  //movaps xmm0,xmm1
  jmp return

InfiniteCarry:
  jmp newmem
return:
registersymbol(InfiniteCarry)

[DISABLE]

InfiniteCarry:
  db 76 13 0F 28 C1

unregistersymbol(InfiniteCarry)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+70CFAC

"FSD-Win64-Shipping.exe"+70CF8E: CC                 -  int 3 
"FSD-Win64-Shipping.exe"+70CF8F: CC                 -  int 3 
"FSD-Win64-Shipping.exe"+70CF90: 40 53              -  push rbx
"FSD-Win64-Shipping.exe"+70CF92: 48 83 EC 40        -  sub rsp,40
"FSD-Win64-Shipping.exe"+70CF96: 0F 29 74 24 30     -  movaps [rsp+30],xmm6
"FSD-Win64-Shipping.exe"+70CF9B: 0F 57 D2           -  xorps xmm2,xmm2
"FSD-Win64-Shipping.exe"+70CF9E: 0F 28 F1           -  movaps xmm6,xmm1
"FSD-Win64-Shipping.exe"+70CFA1: 48 8B D9           -  mov rbx,rcx
"FSD-Win64-Shipping.exe"+70CFA4: F3 0F 10 49 64     -  movss xmm1,[rcx+64]
"FSD-Win64-Shipping.exe"+70CFA9: 0F 2F CA           -  comiss xmm1,xmm2
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+70CFAC: 76 13              -  jna FSD-Win64-Shipping.exe+70CFC1
"FSD-Win64-Shipping.exe"+70CFAE: 0F 28 C1           -  movaps xmm0,xmm1
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+70CFB1: F3 0F 5C 41 60     -  subss xmm0,[rcx+60]
"FSD-Win64-Shipping.exe"+70CFB6: F3 0F 5D C6        -  minss xmm0,xmm6
"FSD-Win64-Shipping.exe"+70CFBA: 0F 28 F0           -  movaps xmm6,xmm0
"FSD-Win64-Shipping.exe"+70CFBD: F3 0F 5F F2        -  maxss xmm6,xmm2
"FSD-Win64-Shipping.exe"+70CFC1: 0F 2F F2           -  comiss xmm6,xmm2
"FSD-Win64-Shipping.exe"+70CFC4: 76 51              -  jna FSD-Win64-Shipping.exe+70D017
"FSD-Win64-Shipping.exe"+70CFC6: 0F 28 CE           -  movaps xmm1,xmm6
"FSD-Win64-Shipping.exe"+70CFC9: 48 89 5C 24 20     -  mov [rsp+20],rbx
"FSD-Win64-Shipping.exe"+70CFCE: F3 0F 58 49 60     -  addss xmm1,[rcx+60]
"FSD-Win64-Shipping.exe"+70CFD3: 0F 28 C6           -  movaps xmm0,xmm6
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1234</ID>
                  <Description>"Unlimited Mineral Drop In Mule (Doesn't work with "Set Minerals On Player")"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-29
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MineralsGoingToMolly,FSD-Win64-Shipping.exe,F3 0F 11 51 60) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+743FEC)

label(code)
label(return)

newmem:

code:
  add [rcx+60],0
  jmp return

MineralsGoingToMolly:
  jmp newmem
return:
registersymbol(MineralsGoingToMolly)

[DISABLE]

MineralsGoingToMolly:
  db F3 0F 11 51 60

unregistersymbol(MineralsGoingToMolly)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+743FEC

"FSD-Win64-Shipping.exe"+743FC9: 0F 2F F3                 -  comiss xmm6,xmm3
"FSD-Win64-Shipping.exe"+743FCC: 76 3D                    -  jna FSD-Win64-Shipping.exe+74400B
"FSD-Win64-Shipping.exe"+743FCE: 0F 28 C2                 -  movaps xmm0,xmm2
"FSD-Win64-Shipping.exe"+743FD1: F3 0F 5D C6              -  minss xmm0,xmm6
"FSD-Win64-Shipping.exe"+743FD5: F3 0F 5F C3              -  maxss xmm0,xmm3
"FSD-Win64-Shipping.exe"+743FD9: 0F 2F C3                 -  comiss xmm0,xmm3
"FSD-Win64-Shipping.exe"+743FDC: 76 22                    -  jna FSD-Win64-Shipping.exe+744000
"FSD-Win64-Shipping.exe"+743FDE: F3 0F 5C D0              -  subss xmm2,xmm0
"FSD-Win64-Shipping.exe"+743FE2: 48 89 4C 24 20           -  mov [rsp+20],rcx
"FSD-Win64-Shipping.exe"+743FE7: 48 8D 54 24 20           -  lea rdx,[rsp+20]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+743FEC: F3 0F 11 51 60           -  movss [rcx+60],xmm2
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+743FF1: 48 83 C1 28              -  add rcx,28
"FSD-Win64-Shipping.exe"+743FF5: F3 0F 11 54 24 28        -  movss [rsp+28],xmm2
"FSD-Win64-Shipping.exe"+743FFB: E8 00 53 B9 FF           -  call FSD-Win64-Shipping.exe+2D9300
"FSD-Win64-Shipping.exe"+744000: 0F 28 CE                 -  movaps xmm1,xmm6
"FSD-Win64-Shipping.exe"+744003: 48 8B CB                 -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+744006: E8 E5 84 FC FF           -  call FSD-Win64-Shipping.exe+70C4F0
"FSD-Win64-Shipping.exe"+74400B: 0F 28 C6                 -  movaps xmm0,xmm6
"FSD-Win64-Shipping.exe"+74400E: 0F 28 74 24 30           -  movaps xmm6,[rsp+30]
"FSD-Win64-Shipping.exe"+744013: 48 83 C4 40              -  add rsp,40
"FSD-Win64-Shipping.exe"+744017: 5B                       -  pop rbx
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1623</ID>
                  <Description>"Set Minerals On Player/Molly During Mineral Pickups/Drops (Works With BEER Minerals!)"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1631</ID>
                      <Description>"Don't Use This When Dropping Hollomite, Morkite, or Dystrum Into Molly (It Won't Count Towards Victory)"</Description>
                      <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1628</ID>
                          <Description>"Actual Amount To Be Taken Home (Won't Show In Molly During Mission)"</Description>
                          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-29
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ResourcesInMollyOne,FSD-Win64-Shipping.exe,F3 0F 11 41 68 48) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+70C54B)

label(code)
label(return)

label(currentResourceCollectedOne)
registerSymbol(currentResourceCollectedOne)

newmem:

code:
  push rax
  mov eax,[currentResourceCollectedOne]
  mov [rcx+68],eax
  pop rax
  jmp return

  align 10 CC // align the memory to be assebled.
  currentResourceCollectedOne:
    dd (float)50000

ResourcesInMollyOne:
  jmp newmem
return:
registersymbol(ResourcesInMollyOne)

[DISABLE]

ResourcesInMollyOne:
  db F3 0F 11 41 68

unregistersymbol(ResourcesInMollyOne)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+70C54B

"FSD-Win64-Shipping.exe"+70C521: 0F 2F F2              -  comiss xmm6,xmm2
"FSD-Win64-Shipping.exe"+70C524: 76 51                 -  jna FSD-Win64-Shipping.exe+70C577
"FSD-Win64-Shipping.exe"+70C526: 0F 28 CE              -  movaps xmm1,xmm6
"FSD-Win64-Shipping.exe"+70C529: 48 89 5C 24 20        -  mov [rsp+20],rbx
"FSD-Win64-Shipping.exe"+70C52E: F3 0F 58 49 60        -  addss xmm1,[rcx+60]
"FSD-Win64-Shipping.exe"+70C533: 0F 28 C6              -  movaps xmm0,xmm6
"FSD-Win64-Shipping.exe"+70C536: 48 8D 54 24 20        -  lea rdx,[rsp+20]
"FSD-Win64-Shipping.exe"+70C53B: F3 0F 58 41 68        -  addss xmm0,[rcx+68]
"FSD-Win64-Shipping.exe"+70C540: F3 0F 11 49 60        -  movss [rcx+60],xmm1
"FSD-Win64-Shipping.exe"+70C545: F3 0F 11 4C 24 28     -  movss [rsp+28],xmm1
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+70C54B: F3 0F 11 41 68        -  movss [rcx+68],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+70C550: 48 83 C1 28           -  add rcx,28
"FSD-Win64-Shipping.exe"+70C554: E8 A7 CD BC FF        -  call FSD-Win64-Shipping.exe+2D9300
"FSD-Win64-Shipping.exe"+70C559: 48 8D 4B 38           -  lea rcx,[rbx+38]
"FSD-Win64-Shipping.exe"+70C55D: F3 0F 11 74 24 28     -  movss [rsp+28],xmm6
"FSD-Win64-Shipping.exe"+70C563: 48 8D 54 24 20        -  lea rdx,[rsp+20]
"FSD-Win64-Shipping.exe"+70C568: 48 89 5C 24 20        -  mov [rsp+20],rbx
"FSD-Win64-Shipping.exe"+70C56D: E8 8E CD BC FF        -  call FSD-Win64-Shipping.exe+2D9300
"FSD-Win64-Shipping.exe"+70C572: F3 0F 10 4B 64        -  movss xmm1,[rbx+64]
"FSD-Win64-Shipping.exe"+70C577: 0F 2F 4B 60           -  comiss xmm1,[rbx+60]
"FSD-Win64-Shipping.exe"+70C57B: 77 16                 -  ja FSD-Win64-Shipping.exe+70C593
}
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1622</ID>
                              <Description>"Input Value"</Description>
                              <VariableType>Float</VariableType>
                              <Address>currentResourceCollectedTwo</Address>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1621</ID>
                          <Description>"Actual Amount To Be Used In Mission (Won't Be Taken Home After Mission)"</Description>
                          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-12-19
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ModMinerals,FSD-Win64-Shipping.exe,F3 0F 11 49 60 F3 0F 11 4C) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+74B6F0)

label(code)
label(return)

label(currentResourceCollectedTwo)
registerSymbol(currentResourceCollectedTwo)

newmem:

code:
  push rax
  mov eax,[currentResourceCollectedTwo]
  mov [rcx+60],eax
  pop rax
  jmp return

  align 10 CC // align the memory to be assebled.
  currentResourceCollectedTwo:
    dd (float)200

ModMinerals:
  jmp newmem
return:
registersymbol(ModMinerals)

[DISABLE]

ModMinerals:
  db F3 0F 11 49 60

unregistersymbol(currentResourceCollectedTwo)
unregistersymbol(ModMinerals)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+74B6F0

"FSD-Win64-Shipping.exe"+74B6CA: 0F 28 F0           -  movaps xmm6,xmm0
"FSD-Win64-Shipping.exe"+74B6CD: F3 0F 5F F2        -  maxss xmm6,xmm2
"FSD-Win64-Shipping.exe"+74B6D1: 0F 2F F2           -  comiss xmm6,xmm2
"FSD-Win64-Shipping.exe"+74B6D4: 76 51              -  jna FSD-Win64-Shipping.exe+74B727
"FSD-Win64-Shipping.exe"+74B6D6: 0F 28 CE           -  movaps xmm1,xmm6
"FSD-Win64-Shipping.exe"+74B6D9: 48 89 5C 24 20     -  mov [rsp+20],rbx
"FSD-Win64-Shipping.exe"+74B6DE: F3 0F 58 49 60     -  addss xmm1,[rcx+60]
"FSD-Win64-Shipping.exe"+74B6E3: 0F 28 C6           -  movaps xmm0,xmm6
"FSD-Win64-Shipping.exe"+74B6E6: 48 8D 54 24 20     -  lea rdx,[rsp+20]
"FSD-Win64-Shipping.exe"+74B6EB: F3 0F 58 41 68     -  addss xmm0,[rcx+68]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+74B6F0: F3 0F 11 49 60     -  movss [rcx+60],xmm1
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+74B6F5: F3 0F 11 4C 24 28  -  movss [rsp+28],xmm1
"FSD-Win64-Shipping.exe"+74B6FB: E9 00 49 77 FF     -  jmp 7FF705030000
"FSD-Win64-Shipping.exe"+74B700: 48 83 C1 28        -  add rcx,28
"FSD-Win64-Shipping.exe"+74B704: E8 37 1A B9 FF     -  call FSD-Win64-Shipping.exe+2DD140
"FSD-Win64-Shipping.exe"+74B709: 48 8D 4B 38        -  lea rcx,[rbx+38]
"FSD-Win64-Shipping.exe"+74B70D: F3 0F 11 74 24 28  -  movss [rsp+28],xmm6
"FSD-Win64-Shipping.exe"+74B713: 48 8D 54 24 20     -  lea rdx,[rsp+20]
"FSD-Win64-Shipping.exe"+74B718: 48 89 5C 24 20     -  mov [rsp+20],rbx
"FSD-Win64-Shipping.exe"+74B71D: E8 1E 1A B9 FF     -  call FSD-Win64-Shipping.exe+2DD140
"FSD-Win64-Shipping.exe"+74B722: F3 0F 10 4B 64     -  movss xmm1,[rbx+64]
}
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1629</ID>
                              <Description>"Input Value"</Description>
                              <VariableType>Float</VariableType>
                              <Address>currentResourceCollectedOne</Address>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1624</ID>
                          <Description>"Instant Mineral Drop In Molly (This Only Works Here!)"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2019-09-29
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MineralsGoingToMolly,FSD-Win64-Shipping.exe,F3 0F 11 51 60) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+743FEC)

label(code)
label(return)

newmem:

code:
  mov [rcx+60],0
  jmp return

MineralsGoingToMolly:
  jmp newmem
return:
registersymbol(MineralsGoingToMolly)

[DISABLE]

MineralsGoingToMolly:
  db F3 0F 11 51 60

unregistersymbol(MineralsGoingToMolly)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+743FEC

"FSD-Win64-Shipping.exe"+743FC9: 0F 2F F3                 -  comiss xmm6,xmm3
"FSD-Win64-Shipping.exe"+743FCC: 76 3D                    -  jna FSD-Win64-Shipping.exe+74400B
"FSD-Win64-Shipping.exe"+743FCE: 0F 28 C2                 -  movaps xmm0,xmm2
"FSD-Win64-Shipping.exe"+743FD1: F3 0F 5D C6              -  minss xmm0,xmm6
"FSD-Win64-Shipping.exe"+743FD5: F3 0F 5F C3              -  maxss xmm0,xmm3
"FSD-Win64-Shipping.exe"+743FD9: 0F 2F C3                 -  comiss xmm0,xmm3
"FSD-Win64-Shipping.exe"+743FDC: 76 22                    -  jna FSD-Win64-Shipping.exe+744000
"FSD-Win64-Shipping.exe"+743FDE: F3 0F 5C D0              -  subss xmm2,xmm0
"FSD-Win64-Shipping.exe"+743FE2: 48 89 4C 24 20           -  mov [rsp+20],rcx
"FSD-Win64-Shipping.exe"+743FE7: 48 8D 54 24 20           -  lea rdx,[rsp+20]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+743FEC: F3 0F 11 51 60           -  movss [rcx+60],xmm2
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+743FF1: 48 83 C1 28              -  add rcx,28
"FSD-Win64-Shipping.exe"+743FF5: F3 0F 11 54 24 28        -  movss [rsp+28],xmm2
"FSD-Win64-Shipping.exe"+743FFB: E8 00 53 B9 FF           -  call FSD-Win64-Shipping.exe+2D9300
"FSD-Win64-Shipping.exe"+744000: 0F 28 CE                 -  movaps xmm1,xmm6
"FSD-Win64-Shipping.exe"+744003: 48 8B CB                 -  mov rcx,rbx
"FSD-Win64-Shipping.exe"+744006: E8 E5 84 FC FF           -  call FSD-Win64-Shipping.exe+70C4F0
"FSD-Win64-Shipping.exe"+74400B: 0F 28 C6                 -  movaps xmm0,xmm6
"FSD-Win64-Shipping.exe"+74400E: 0F 28 74 24 30           -  movaps xmm6,[rsp+30]
"FSD-Win64-Shipping.exe"+744013: 48 83 C4 40              -  add rsp,40
"FSD-Win64-Shipping.exe"+744017: 5B                       -  pop rbx
}
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1285</ID>
              <Description>"Mission Specific (Host Required)"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" Activated="1" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>1690</ID>
                  <Description>"Lock Mission Timer To 5 Second Remaining (Disable Before Mission Complete!)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version:
  Date   : 2020-01-31
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(Timer,FSD-Win64-Shipping.exe,F3 0F 11 93 48 07 00 00) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+6BC8E0)

label(code)
label(myvar)
label(return)

newmem:

code:
  movss xmm2,[myvar]
  movss [rbx+00000748],xmm2
  jmp return

myvar:
  dd (float)6.0

Timer:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(Timer)

[DISABLE]

Timer:
  db F3 0F 11 93 48 07 00 00

unregistersymbol(Timer)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+6B669E

"FSD-Win64-Shipping.exe"+6B6675: E8 36 A6 F9 FF                 -  call FSD-Win64-Shipping.exe+650CB0
"FSD-Win64-Shipping.exe"+6B667A: F3 0F 10 93 28 07 00 00        -  movss xmm2,[rbx+00000728]
"FSD-Win64-Shipping.exe"+6B6682: 0F 57 F6                       -  xorps xmm6,xmm6
"FSD-Win64-Shipping.exe"+6B6685: 0F 2F D6                       -  comiss xmm2,xmm6
"FSD-Win64-Shipping.exe"+6B6688: 4C 8B F0                       -  mov r14,rax
"FSD-Win64-Shipping.exe"+6B668B: 72 77                          -  jb FSD-Win64-Shipping.exe+6B6704
"FSD-Win64-Shipping.exe"+6B668D: 8B 83 E8 06 00 00              -  mov eax,[rbx+000006E8]
"FSD-Win64-Shipping.exe"+6B6693: F3 0F 5C D7                    -  subss xmm2,xmm7
"FSD-Win64-Shipping.exe"+6B6697: F3 0F 5F D6                    -  maxss xmm2,xmm6
"FSD-Win64-Shipping.exe"+6B669B: 0F 28 CA                       -  movaps xmm1,xmm2
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+6B669E: F3 0F 11 93 28 07 00 00        -  movss [rbx+00000728],xmm2
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+6B66A6: F3 0F 58 CA                    -  addss xmm1,xmm2
"FSD-Win64-Shipping.exe"+6B66AA: F3 0F 5C 0D 82 1E F8 01        -  subss xmm1,[FSD-Win64-Shipping.exe+2638534]
"FSD-Win64-Shipping.exe"+6B66B2: F3 0F 2D C9                    -  cvtss2si ecx,xmm1
"FSD-Win64-Shipping.exe"+6B66B6: D1 F9                          -  sar ecx,1
"FSD-Win64-Shipping.exe"+6B66B8: 89 8B E8 06 00 00              -  mov [rbx+000006E8],ecx
"FSD-Win64-Shipping.exe"+6B66BE: 3B C8                          -  cmp ecx,eax
"FSD-Win64-Shipping.exe"+6B66C0: 74 1B                          -  je FSD-Win64-Shipping.exe+6B66DD
"FSD-Win64-Shipping.exe"+6B66C2: 89 4D 6F                       -  mov [rbp+6F],ecx
"FSD-Win64-Shipping.exe"+6B66C5: 48 8D 55 6F                    -  lea rdx,[rbp+6F]
"FSD-Win64-Shipping.exe"+6B66C9: 48 8D 8B F0 04 00 00           -  lea rcx,[rbx+000004F0]
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>0</ID>
                  <Description>"Always Spawn Cargo Crate in Level (By MatJoy)"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-02-11
  Author : unknown

  This script does blah blah blah
}

[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

 
 
aobscanmodule(INJECT,FSD-Win64-Shipping.exe,73 30 48 8B 13) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+8828CF)

label(code)
label(return)

newmem:

code:
  //jae FSD-Win64-Shipping.&lt;lambda_fb051eed199de3badc1adbd248028b67&gt;::operator()+A1
  mov rdx,[rbx]
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
INJECT:
  db 73 30 48 8B 13

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+8828CF

"FSD-Win64-Shipping.exe"+8828A3: 89 44 24 48                    -  mov [rsp+48],eax
"FSD-Win64-Shipping.exe"+8828A7: F3 0F 10 74 24 48              -  movss xmm6,[rsp+48]
"FSD-Win64-Shipping.exe"+8828AD: F3 0F 2C C6                    -  cvttss2si eax,xmm6
"FSD-Win64-Shipping.exe"+8828B1: 66 0F 6E C0                    -  movd xmm0,eax
"FSD-Win64-Shipping.exe"+8828B5: 48 8B 03                       -  mov rax,[rbx]
"FSD-Win64-Shipping.exe"+8828B8: 0F 5B C0                       -  cvtdq2ps xmm0,xmm0
"FSD-Win64-Shipping.exe"+8828BB: F3 0F 10 88 58 05 00 00        -  movss xmm1,[rax+00000558]
"FSD-Win64-Shipping.exe"+8828C3: F3 0F 5C F0                    -  subss xmm6,xmm0
"FSD-Win64-Shipping.exe"+8828C7: E8 C4 C9 ED FF                 -  call FSD-Win64-Shipping.exe+75F290
"FSD-Win64-Shipping.exe"+8828CC: 0F 2F F0                       -  comiss xmm6,xmm0
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+8828CF: 73 30                          -  jae FSD-Win64-Shipping.exe+882901
"FSD-Win64-Shipping.exe"+8828D1: 48 8B 13                       -  mov rdx,[rbx]
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+8828D4: 48 8B CF                       -  mov rcx,rdi
"FSD-Win64-Shipping.exe"+8828D7: 48 81 C2 48 03 00 00           -  add rdx,00000348
"FSD-Win64-Shipping.exe"+8828DE: E8 BD 80 ED FF                 -  call FSD-Win64-Shipping.exe+75A9A0
"FSD-Win64-Shipping.exe"+8828E3: 48 8B 13                       -  mov rdx,[rbx]
"FSD-Win64-Shipping.exe"+8828E6: 48 8B C8                       -  mov rcx,rax
"FSD-Win64-Shipping.exe"+8828E9: 48 8B 82 D0 03 00 00           -  mov rax,[rdx+000003D0]
"FSD-Win64-Shipping.exe"+8828F0: 48 85 C0                       -  test rax,rax
"FSD-Win64-Shipping.exe"+8828F3: 48 0F 45 C8                    -  cmovne rcx,rax
"FSD-Win64-Shipping.exe"+8828F7: 48 85 C9                       -  test rcx,rcx
"FSD-Win64-Shipping.exe"+8828FA: 74 05                          -  je FSD-Win64-Shipping.exe+882901
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1417</ID>
              <Description>"No Open. No Use. Thank."</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>FF0080</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>1403</ID>
                  <Description>"Enble to Edit Player Positions (Old N Slow Verison)"</Description>
                  <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
aobscan(PlayerXPosition,?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 00 00 00 00 00 00 80 3F 00 00 80 3F 00 00 80 3F 00 00 00 00 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 61 11 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ?? 00 00 00 ?? ?? ?? ?? ?? ?? ?? ?? ?? 00 00 00 00 ?? ?? ?? ?? 00 00 00 00 00 00 00 00 00 00 00 ?? 00 00 00 ?? ?? ?? ?? ?? ?? ?? ?? ?? 00 00 00 00 ?? ?? ?? ?? 00 00 00 00 00 00 00 00 ?? ?? ?? ?? ?? ?? 00 00 01 00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 ?? ?? ?? ?? ?? ?? 00 00 00 00 00 00 04 00 00 00 ?? ?? ?? ?? F6 7F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 ?? EA 21 16 40 7C 00 01 00 00 01 00 00 00 00 00 00 00 00 00 FF FF FF FF ?? ?? 00 00 00 00 80 3F 00 00 00 00 00 00 00 00)
aobscan(PlayerYPosition,?? ?? ?? ?? ?? ?? ?? ?? 00 00 00 00 00 00 80 3F 00 00 80 3F 00 00 80 3F 00 00 00 00 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 61 11 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ?? 00 00 00 ?? ?? ?? ?? ?? ?? ?? ?? ?? 00 00 00 00 ?? ?? ?? ?? 00 00 00 00 00 00 00 00 00 00 00 ?? 00 00 00 ?? ?? ?? ?? ?? ?? ?? ?? ?? 00 00 00 00 ?? ?? ?? ?? 00 00 00 00 00 00 00 00 ?? ?? ?? ?? ?? ?? 00 00 01 00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 ?? ?? ?? ?? ?? ?? 00 00 00 00 00 00 04 00 00 00 ?? ?? ?? ?? F6 7F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 ?? EA 21 16 40 7C 00 01 00 00 01 00 00 00 00 00 00 00 00 00 FF FF FF FF ?? ?? 00 00 00 00 80 3F 00 00 00 00 00 00 00 00)
aobscan(PlayerZPosition,?? ?? ?? ?? 00 00 00 00 00 00 80 3F 00 00 80 3F 00 00 80 3F 00 00 00 00 ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? ?? 61 11 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ?? 00 00 00 ?? ?? ?? ?? ?? ?? ?? ?? ?? 00 00 00 00 ?? ?? ?? ?? 00 00 00 00 00 00 00 00 00 00 00 ?? 00 00 00 ?? ?? ?? ?? ?? ?? ?? ?? ?? 00 00 00 00 ?? ?? ?? ?? 00 00 00 00 00 00 00 00 ?? ?? ?? ?? ?? ?? 00 00 01 00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 ?? ?? ?? ?? ?? ?? 00 00 00 00 00 00 04 00 00 00 ?? ?? ?? ?? F6 7F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 ?? EA 21 16 40 7C 00 01 00 00 01 00 00 00 00 00 00 00 00 00 FF FF FF FF ?? ?? 00 00 00 00 80 3F 00 00 00 00 00 00 00 00)

label(XPos)
label(YPos)
label(ZPos)
registersymbol(XPos)
registersymbol(YPos)
registersymbol(ZPos)

PlayerXPosition:
XPos:
PlayerYPosition:
YPos:
PlayerZPosition:
ZPos:

[DISABLE]
unregistersymbol(XPos)
unregistersymbol(YPos)
unregistersymbol(ZPos)
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1385</ID>
                      <Description>"Ammo Count"</Description>
                      <VariableType>4 Bytes</VariableType>
                      <Address>AmmoCount</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1712</ID>
                  <Description>"Get Player Position (No Set)"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-01-12
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(PlayerXPosition,FSD-Win64-Shipping.exe,0F 10 8E A0 01 00 00 48 8D 44) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+18DB932)

label(code)
label(return)

label(XPos)
registersymbol(XPos)
label(YPos)
registersymbol(YPos)
label(ZPos)
registersymbol(ZPos)

newmem:

code:
  push rax
  mov rax,[rsi+000001A0]
  mov [XPos],rax
  mov rax,[rsi+000001A8]
  mov [YPos],rax
  mov rax,[rsi+000001A4]
  mov [ZPos],rax
  pop rax

  movups xmm1,[rsi+000001A0]
  jmp return

XPos:
  dq 0

YPos:
  dq 0

ZPos:
  dq 0

PlayerXPosition:
  jmp newmem
  nop
  nop
return:
registersymbol(PlayerXPosition)

[DISABLE]

PlayerXPosition:
  db 0F 10 8E A0 01 00 00

unregistersymbol(XPos)
unregistersymbol(YPos)
unregistersymbol(ZPos)
unregistersymbol(PlayerXPosition)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+18DB932

"FSD-Win64-Shipping.exe"+18DB8FB: 0F 10 4B 40                 -  movups xmm1,[rbx+40]
"FSD-Win64-Shipping.exe"+18DB8FF: 0F 5C 8E B0 01 00 00        -  subps xmm1,[rsi+000001B0]
"FSD-Win64-Shipping.exe"+18DB906: F3 0F 11 84 24 C0 00 00 00  -  movss [rsp+000000C0],xmm0
"FSD-Win64-Shipping.exe"+18DB90F: F3 0F 10 84 24 C0 00 00 00  -  movss xmm0,[rsp+000000C0]
"FSD-Win64-Shipping.exe"+18DB918: 0F C6 C0 00                 -  shufps xmm0,xmm0,00
"FSD-Win64-Shipping.exe"+18DB91C: 0F 54 0D 1D D0 E4 01        -  andps xmm1,[FSD-Win64-Shipping.exe+3728940]
"FSD-Win64-Shipping.exe"+18DB923: 0F C2 C1 01                 -  cmpps xmm0,xmm101
"FSD-Win64-Shipping.exe"+18DB927: 0F 50 C0                    -  movmskps eax,xmm0
"FSD-Win64-Shipping.exe"+18DB92A: 85 C0                       -  test eax,eax
"FSD-Win64-Shipping.exe"+18DB92C: 0F 85 E3 00 00 00           -  jne FSD-Win64-Shipping.exe+18DBA15
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+18DB932: 0F 10 8E A0 01 00 00        -  movups xmm1,[rsi+000001A0]
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+18DB939: 48 8D 44 24 60              -  lea rax,[rsp+60]
"FSD-Win64-Shipping.exe"+18DB93E: 0F 10 86 90 01 00 00        -  movups xmm0,[rsi+00000190]
"FSD-Win64-Shipping.exe"+18DB945: 4C 8D 43 78                 -  lea r8,[rbx+78]
"FSD-Win64-Shipping.exe"+18DB949: 0F 29 44 24 60              -  movaps [rsp+60],xmm0
"FSD-Win64-Shipping.exe"+18DB94E: 48 8D 54 24 48              -  lea rdx,[rsp+48]
"FSD-Win64-Shipping.exe"+18DB953: 0F 28 C1                    -  movaps xmm0,xmm1
"FSD-Win64-Shipping.exe"+18DB956: 48 89 44 24 28              -  mov [rsp+28],rax
"FSD-Win64-Shipping.exe"+18DB95B: 0F C6 C1 55                 -  shufps xmm0,xmm1,55
"FSD-Win64-Shipping.exe"+18DB95F: 48 8D 44 24 30              -  lea rax,[rsp+30]
"FSD-Win64-Shipping.exe"+18DB964: F3 0F 11 4C 24 30           -  movss [rsp+30],xmm1
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1411</ID>
                      <Description>"X Position"</Description>
                      <VariableType>Float</VariableType>
                      <Address>XPos</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1415</ID>
                      <Description>"Y Position"</Description>
                      <VariableType>Float</VariableType>
                      <Address>YPos</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1416</ID>
                      <Description>"Z Position"</Description>
                      <VariableType>Float</VariableType>
                      <Address>ZPos</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1384</ID>
                  <Description>"How To Find A Pointer (AmmoCount)"</Description>
                  <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version:
  Date   : 2019-09-26
  Author : Vergbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MagazineAmmo,FSD-Win64-Shipping.exe,89 86 B0 06 00 00 89) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+77CCE3)

label(code)
label(return)

label(AmmoCount)
registersymbol(AmmoCount)

newmem:

code:                           // [rsi+000006B0] is the current gun's ammo count
  push rax                      // ready rax for use
  mov rax,[rsi+000006B0]        // move pointer rdi+5D0 into rax
  mov [AmmoCount],rax           // move rax into AmmoCount
  pop rax                       // unready rax for use
  add [rsi+000006B0],(int)0     // (Original Code)
  jmp return                    // AmmoCount is now [rsi+000006B0]

AmmoCount:
  dq 0

MagazineAmmo:
  jmp newmem
  nop
return:
registersymbol(MagazineAmmo)

[DISABLE]

MagazineAmmo:
  db 89 86 B0 06 00 00

unregistersymbol(AmmoCount)
unregistersymbol(MagazineAmmo)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+77CCE3

"FSD-Win64-Shipping.exe"+77CCB3: 48 8B 15 96 64 EA 02     -  mov rdx,[FSD-Win64-Shipping.exe+3623150]
"FSD-Win64-Shipping.exe"+77CCBA: 41 B0 01                 -  mov r8l,01
"FSD-Win64-Shipping.exe"+77CCBD: 48 8B C8                 -  mov rcx,rax
"FSD-Win64-Shipping.exe"+77CCC0: E8 4B 0F 0F 01           -  call FSD-Win64-Shipping.exe+186DC10
"FSD-Win64-Shipping.exe"+77CCC5: 8B 86 B0 06 00 00        -  mov eax,[rsi+000006B0]
"FSD-Win64-Shipping.exe"+77CCCB: 48 8D 8E 90 04 00 00     -  lea rcx,[rsi+00000490]
"FSD-Win64-Shipping.exe"+77CCD2: 2B 86 98 06 00 00        -  sub eax,[rsi+00000698]
"FSD-Win64-Shipping.exe"+77CCD8: 48 8D 54 24 70           -  lea rdx,[rsp+70]
"FSD-Win64-Shipping.exe"+77CCDD: 85 C0                    -  test eax,eax
"FSD-Win64-Shipping.exe"+77CCDF: 41 0F 4E C6              -  cmovle eax,r14d
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+77CCE3: 89 86 B0 06 00 00        -  mov [rsi+000006B0],eax
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+77CCE9: 89 44 24 70              -  mov [rsp+70],eax
"FSD-Win64-Shipping.exe"+77CCED: E8 CE C8 B5 FF           -  call FSD-Win64-Shipping.exe+2D95C0
"FSD-Win64-Shipping.exe"+77CCF2: 8B 86 AC 06 00 00        -  mov eax,[rsi+000006AC]
"FSD-Win64-Shipping.exe"+77CCF8: 48 8D 54 24 70           -  lea rdx,[rsp+70]
"FSD-Win64-Shipping.exe"+77CCFD: 48 8B 8E C8 04 00 00     -  mov rcx,[rsi+000004C8]
"FSD-Win64-Shipping.exe"+77CD04: 03 86 B0 06 00 00        -  add eax,[rsi+000006B0]
"FSD-Win64-Shipping.exe"+77CD0A: 48 81 C1 30 01 00 00     -  add rcx,00000130
"FSD-Win64-Shipping.exe"+77CD11: 89 44 24 70              -  mov [rsp+70],eax
"FSD-Win64-Shipping.exe"+77CD15: E8 A6 C8 B5 FF           -  call FSD-Win64-Shipping.exe+2D95C0
"FSD-Win64-Shipping.exe"+77CD1A: 48 8B 8E C8 04 00 00     -  mov rcx,[rsi+000004C8]
}
</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1711</ID>
                      <Description>"Player X Position"</Description>
                      <VariableType>Float</VariableType>
                      <Address>XPos</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1714</ID>
                      <Description>"Player Y Position"</Description>
                      <VariableType>Float</VariableType>
                      <Address>YPos</Address>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1713</ID>
                      <Description>"Player Z Position"</Description>
                      <VariableType>Float</VariableType>
                      <Address>ZPos</Address>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1839</ID>
                  <Description>"mulss example"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2020-01-31
  Author : Verbergler

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(GrappleDistance,FSD-Win64-Shipping.exe,F3 0F 11 83 74 04 00 00 48) // should be unique
alloc(newmem,$1000,"FSD-Win64-Shipping.exe"+6C7B50)

label(code)
label(return)

label(GrappleDist)
registersymbol(GrappleDist)
// 7FF78B307AA0 - FSD-Win64-Shipping.UGrapplingHookUpgrade::AddToItem()
newmem:

code:
  mulss xmm0,[GrappleDist]
  movss [rbx+00000474],xmm0
  jmp return

GrappleDist:
  dd (float)100.0

GrappleDistance:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(GrappleDistance)

[DISABLE]

GrappleDistance:
  db F3 0F 11 83 74 04 00 00

unregistersymbol(GrappleDist)
unregistersymbol(GrappleDistance)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "FSD-Win64-Shipping.exe"+6C7B50

"FSD-Win64-Shipping.exe"+6C7B1C: C3                       -  ret 
"FSD-Win64-Shipping.exe"+6C7B1D: F3 0F 10 87 4C 01 00 00  -  movss xmm0,[rdi+0000014C]
"FSD-Win64-Shipping.exe"+6C7B25: F3 0F 58 83 A8 04 00 00  -  addss xmm0,[rbx+000004A8]
"FSD-Win64-Shipping.exe"+6C7B2D: F3 0F 11 83 A8 04 00 00  -  movss [rbx+000004A8],xmm0
"FSD-Win64-Shipping.exe"+6C7B35: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"FSD-Win64-Shipping.exe"+6C7B3A: 48 83 C4 20              -  add rsp,20
"FSD-Win64-Shipping.exe"+6C7B3E: 5F                       -  pop rdi
"FSD-Win64-Shipping.exe"+6C7B3F: C3                       -  ret 
"FSD-Win64-Shipping.exe"+6C7B40: F3 0F 10 87 4C 01 00 00  -  movss xmm0,[rdi+0000014C]
"FSD-Win64-Shipping.exe"+6C7B48: F3 0F 58 83 74 04 00 00  -  addss xmm0,[rbx+00000474]
// ---------- INJECTING HERE ----------
"FSD-Win64-Shipping.exe"+6C7B50: F3 0F 11 83 74 04 00 00  -  movss [rbx+00000474],xmm0
// ---------- DONE INJECTING  ----------
"FSD-Win64-Shipping.exe"+6C7B58: 48 8B 5C 24 30           -  mov rbx,[rsp+30]
"FSD-Win64-Shipping.exe"+6C7B5D: 48 83 C4 20              -  add rsp,20
"FSD-Win64-Shipping.exe"+6C7B61: 5F                       -  pop rdi
"FSD-Win64-Shipping.exe"+6C7B62: C3                       -  ret 
"FSD-Win64-Shipping.exe"+6C7B63: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+6C7B64: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+6C7B65: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+6C7B66: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+6C7B67: CC                       -  int 3 
"FSD-Win64-Shipping.exe"+6C7B68: CC                       -  int 3 
}
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1863</ID>
                  <Description>"Minerals"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1951</ID>
                      <Description>"Magnite"</Description>
                      <VariableType>Float</VariableType>
                      <Address>"FSD-Win64-Shipping.exe"+0325C5D0</Address>
                      <Offsets>
                        <Offset>48</Offset>
                        <Offset>6D0</Offset>
                        <Offset>940</Offset>
                        <Offset>20</Offset>
                        <Offset>998</Offset>
                        <Offset>160</Offset>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1952</ID>
                      <Description>"Bismor"</Description>
                      <VariableType>Float</VariableType>
                      <Address>"FSD-Win64-Shipping.exe"+0325C5D0</Address>
                      <Offsets>
                        <Offset>10</Offset>
                        <Offset>6D0</Offset>
                        <Offset>940</Offset>
                        <Offset>20</Offset>
                        <Offset>998</Offset>
                        <Offset>160</Offset>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1953</ID>
                      <Description>"Umanite"</Description>
                      <VariableType>Float</VariableType>
                      <Address>"FSD-Win64-Shipping.exe"+0325C5D0</Address>
                      <Offsets>
                        <Offset>64</Offset>
                        <Offset>6D0</Offset>
                        <Offset>940</Offset>
                        <Offset>20</Offset>
                        <Offset>998</Offset>
                        <Offset>160</Offset>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1954</ID>
                      <Description>"Croppa"</Description>
                      <VariableType>Float</VariableType>
                      <Address>"FSD-Win64-Shipping.exe"+0325C5D0</Address>
                      <Offsets>
                        <Offset>80</Offset>
                        <Offset>6D0</Offset>
                        <Offset>940</Offset>
                        <Offset>20</Offset>
                        <Offset>998</Offset>
                        <Offset>160</Offset>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1955</ID>
                      <Description>"Enor Pearl"</Description>
                      <VariableType>Float</VariableType>
                      <Address>"FSD-Win64-Shipping.exe"+0325C5D0</Address>
                      <Offsets>
                        <Offset>2C</Offset>
                        <Offset>6D0</Offset>
                        <Offset>940</Offset>
                        <Offset>20</Offset>
                        <Offset>998</Offset>
                        <Offset>160</Offset>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1956</ID>
                      <Description>"Jadiz"</Description>
                      <VariableType>Float</VariableType>
                      <Address>"FSD-Win64-Shipping.exe"+0325C5D0</Address>
                      <Offsets>
                        <Offset>9C</Offset>
                        <Offset>6D0</Offset>
                        <Offset>940</Offset>
                        <Offset>20</Offset>
                        <Offset>998</Offset>
                        <Offset>160</Offset>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>1864</ID>
                  <Description>"Beer Minerals"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1958</ID>
                      <Description>"Barley Bulb"</Description>
                      <VariableType>Float</VariableType>
                      <Address>"FSD-Win64-Shipping.exe"+0325C5D0</Address>
                      <Offsets>
                        <Offset>10C</Offset>
                        <Offset>6D0</Offset>
                        <Offset>940</Offset>
                        <Offset>20</Offset>
                        <Offset>998</Offset>
                        <Offset>160</Offset>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1960</ID>
                      <Description>"Yeast Cone"</Description>
                      <VariableType>Float</VariableType>
                      <Address>"FSD-Win64-Shipping.exe"+0325C5D0</Address>
                      <Offsets>
                        <Offset>144</Offset>
                        <Offset>6D0</Offset>
                        <Offset>940</Offset>
                        <Offset>20</Offset>
                        <Offset>998</Offset>
                        <Offset>160</Offset>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1959</ID>
                      <Description>"Malt Star"</Description>
                      <VariableType>Float</VariableType>
                      <Address>"FSD-Win64-Shipping.exe"+0325C5D0</Address>
                      <Offsets>
                        <Offset>128</Offset>
                        <Offset>6D0</Offset>
                        <Offset>940</Offset>
                        <Offset>20</Offset>
                        <Offset>998</Offset>
                        <Offset>160</Offset>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1957</ID>
                      <Description>"Starch Nut"</Description>
                      <VariableType>Float</VariableType>
                      <Address>"FSD-Win64-Shipping.exe"+0325C5D0</Address>
                      <Offsets>
                        <Offset>F0</Offset>
                        <Offset>6D0</Offset>
                        <Offset>940</Offset>
                        <Offset>20</Offset>
                        <Offset>998</Offset>
                        <Offset>160</Offset>
                        <Offset>30</Offset>
                      </Offsets>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Code :movss [rcx+60],xmm1</Description>
      <AddressString>FSD-Win64-Shipping.exe+3F8CFD</AddressString>
      <Before>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>41</Byte>
        <Byte>68</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>49</Byte>
        <Byte>60</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of dec [rbx+00000218]</Description>
      <AddressString>FSD-Win64-Shipping.exe+548C4B</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>45</Byte>
        <Byte>E5</Byte>
        <Byte>2D</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>8B</Byte>
        <Byte>18</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>8B</Byte>
        <Byte>40</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rbx+40],rax</Description>
      <AddressString>FSD-Win64-Shipping.exe+C63A58</AddressString>
      <Before>
        <Byte>3D</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>40</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>43</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>47</Byte>
        <Byte>48</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx+18],rax</Description>
      <AddressString>FSD-Win64-Shipping.exe+964186</AddressString>
      <Before>
        <Byte>10</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>18</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx+18],rax</Description>
      <AddressString>FSD-Win64-Shipping.exe+96418E</AddressString>
      <Before>
        <Byte>18</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>18</Byte>
        <Byte>89</Byte>
        <Byte>41</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx+18],eax</Description>
      <AddressString>FSD-Win64-Shipping.exe+964195</AddressString>
      <Before>
        <Byte>41</Byte>
        <Byte>18</Byte>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>18</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rcx+18],rax</Description>
      <AddressString>FSD-Win64-Shipping.exe+96419C</AddressString>
      <Before>
        <Byte>18</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>42</Byte>
        <Byte>18</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>41</Byte>
        <Byte>18</Byte>
      </Actual>
      <After>
        <Byte>C6</Byte>
        <Byte>41</Byte>
        <Byte>38</Byte>
        <Byte>00</Byte>
        <Byte>80</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rax],ecx</Description>
      <AddressString>VCRUNTIME140.dll+135A</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>0A</Byte>
        <Byte>C3</Byte>
        <Byte>8B</Byte>
        <Byte>0A</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>C3</Byte>
        <Byte>0F</Byte>
        <Byte>1F</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of ret </Description>
      <AddressString>VCRUNTIME140.dll+135C</AddressString>
      <Before>
        <Byte>C3</Byte>
        <Byte>8B</Byte>
        <Byte>0A</Byte>
        <Byte>89</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>C3</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>1F</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
        <Byte>0A</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :mov [rsp+20],r9l</Description>
      <AddressString>FSD-Win64-Shipping.exe+7C6690</AddressString>
      <Before>
        <Byte>C4</Byte>
        <Byte>20</Byte>
        <Byte>5B</Byte>
        <Byte>C3</Byte>
        <Byte>CC</Byte>
      </Before>
      <Actual>
        <Byte>44</Byte>
        <Byte>88</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>55</Byte>
        <Byte>53</Byte>
        <Byte>57</Byte>
        <Byte>41</Byte>
        <Byte>55</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Code :movsd xmm0,[rbx+000001F0]</Description>
      <AddressString>FSD-Win64-Shipping.exe+79FEDB</AddressString>
      <Before>
        <Byte>83</Byte>
        <Byte>F8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F2</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>83</Byte>
        <Byte>F0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>83</Byte>
        <Byte>F8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call FSD-Win64-Shipping.UCharacterRecoilComponent::AddRecoil</Description>
      <AddressString>FSD-Win64-Shipping.exe+77DE49</AddressString>
      <Before>
        <Byte>89</Byte>
        <Byte>30</Byte>
        <Byte>0C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>62</Byte>
        <Byte>49</Byte>
        <Byte>E1</Byte>
        <Byte>FF</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>06</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movups xmm1,[rax+000001A0]</Description>
      <AddressString>FSD-Win64-Shipping.exe+5EECBC</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>26</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>88</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>C1</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of je FSD-Win64-Shipping.UFallingStateComponent::OnEnterState+92</Description>
      <AddressString>FSD-Win64-Shipping.exe+5EECBA</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>26</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>88</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call FSD-Win64-Shipping.APlayerCharacter::GetUseHoldToRun</Description>
      <AddressString>FSD-Win64-Shipping.exe+5EEC79</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>74</Byte>
        <Byte>0D</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>C2</Byte>
        <Byte>BA</Byte>
        <Byte>FB</Byte>
        <Byte>FF</Byte>
      </Actual>
      <After>
        <Byte>84</Byte>
        <Byte>C0</Byte>
        <Byte>75</Byte>
        <Byte>04</Byte>
        <Byte>B0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movups xmm1,[rax+000001A0]</Description>
      <AddressString>FSD-Win64-Shipping.exe+5EF71E</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>23</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>88</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>C1</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movups xmm0,[rax+000001A0]</Description>
      <AddressString>FSD-Win64-Shipping.exe+1879141</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>F7</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>80</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CB</Byte>
        <Byte>0F</Byte>
        <Byte>29</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movups xmm1,[rax+000001A0]</Description>
      <AddressString>FSD-Win64-Shipping.exe+188D5C3</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>01</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CF</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>88</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>07</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movups xmm1,[rax+000001A0]</Description>
      <AddressString>FSD-Win64-Shipping.exe+188FA1A</AddressString>
      <Before>
        <Byte>55</Byte>
        <Byte>68</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CE</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>88</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>06</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jne FSD-Win64-Shipping.UCharacterMovementComponent::PhysFalling+11C1</Description>
      <AddressString>FSD-Win64-Shipping.exe+188FA46</AddressString>
      <Before>
        <Byte>08</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>84</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>85</Byte>
        <Byte>E5</Byte>
        <Byte>0B</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F6</Byte>
        <Byte>85</Byte>
        <Byte>90</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jne FSD-Win64-Shipping.UCharacterMovementComponent::PhysFalling+70F</Description>
      <AddressString>FSD-Win64-Shipping.exe+188FA82</AddressString>
      <Before>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>58</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>85</Byte>
        <Byte>F7</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>06</Byte>
        <Byte>4C</Byte>
        <Byte>8D</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of je FSD-Win64-Shipping.UCharacterMovementComponent::PhysFalling+112E</Description>
      <AddressString>FSD-Win64-Shipping.exe+188F9FF</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>84</Byte>
        <Byte>99</Byte>
        <Byte>0B</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>86</Byte>
        <Byte>F8</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jne FSD-Win64-Shipping.UCharacterMovementComponent::PhysFalling+11E1</Description>
      <AddressString>FSD-Win64-Shipping.exe+188F9F2</AddressString>
      <Before>
        <Byte>05</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>84</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>85</Byte>
        <Byte>59</Byte>
        <Byte>0C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F6</Byte>
        <Byte>85</Byte>
        <Byte>90</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of je FSD-Win64-Shipping.UCharacterMovementComponent::PhysFalling+121F</Description>
      <AddressString>FSD-Win64-Shipping.exe+188F9CD</AddressString>
      <Before>
        <Byte>05</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>84</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>84</Byte>
        <Byte>BC</Byte>
        <Byte>0C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>06</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call FSD-Win64-Shipping.UMovementComponent::SafeMoveUpdatedComponent</Description>
      <AddressString>FSD-Win64-Shipping.exe+188F9BA</AddressString>
      <Before>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>58</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>41</Byte>
        <Byte>34</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>06</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of je FSD-Win64-Shipping.UCharacterMovementComponent::PhysFalling+4C2</Description>
      <AddressString>FSD-Win64-Shipping.exe+188F912</AddressString>
      <Before>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>A8</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>1E</Byte>
      </Actual>
      <After>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>96</Byte>
        <Byte>14</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jb FSD-Win64-Shipping.UCharacterMovementComponent::PhysFalling+4C2</Description>
      <AddressString>FSD-Win64-Shipping.exe+188F91C</AddressString>
      <Before>
        <Byte>96</Byte>
        <Byte>14</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>72</Byte>
        <Byte>14</Byte>
      </Actual>
      <After>
        <Byte>24</Byte>
        <Byte>FD</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CE</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jmp FSD-Win64-Shipping.UCharacterMovementComponent::PhysFalling+435</Description>
      <AddressString>FSD-Win64-Shipping.exe+188F887</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>58</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>EB</Byte>
        <Byte>1C</Byte>
      </Actual>
      <After>
        <Byte>F2</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>00</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of je FSD-Win64-Shipping.UCharacterMovementComponent::PhysFalling+419</Description>
      <AddressString>FSD-Win64-Shipping.exe+188F863</AddressString>
      <Before>
        <Byte>4E</Byte>
        <Byte>08</Byte>
        <Byte>45</Byte>
        <Byte>84</Byte>
        <Byte>ED</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>24</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>06</Byte>
        <Byte>4C</Byte>
        <Byte>8D</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jb FSD-Win64-Shipping.UCharacterMovementComponent::PhysFalling+3C0</Description>
      <AddressString>FSD-Win64-Shipping.exe+188F825</AddressString>
      <Before>
        <Byte>91</Byte>
        <Byte>48</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>72</Byte>
        <Byte>09</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>01</Byte>
        <Byte>FF</Byte>
        <Byte>90</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jne FSD-Win64-Shipping.UCharacterMovementComponent::PhysFalling+39A</Description>
      <AddressString>FSD-Win64-Shipping.exe+188F7FF</AddressString>
      <Before>
        <Byte>F3</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>5D</Byte>
        <Byte>C8</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>09</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>F1</Byte>
        <Byte>F3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jna FSD-Win64-Shipping.UCharacterMovementComponent::PhysFalling+3C0</Description>
      <AddressString>FSD-Win64-Shipping.exe+188F7EE</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>C2</Byte>
      </Before>
      <Actual>
        <Byte>76</Byte>
        <Byte>40</Byte>
      </Actual>
      <After>
        <Byte>F6</Byte>
        <Byte>86</Byte>
        <Byte>40</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jne FSD-Win64-Shipping.UCharacterMovementComponent::PhysFalling+34E</Description>
      <AddressString>FSD-Win64-Shipping.exe+188F7A9</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>45</Byte>
        <Byte>84</Byte>
        <Byte>ED</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>13</Byte>
      </Actual>
      <After>
        <Byte>F2</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>06</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm7,[FSD-Win64-Shipping.exe+264B034]</Description>
      <AddressString>FSD-Win64-Shipping.exe+188F720</AddressString>
      <Before>
        <Byte>BE</Byte>
        <Byte>7C</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>3D</Byte>
        <Byte>0C</Byte>
        <Byte>B9</Byte>
        <Byte>DB</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>BE</Byte>
        <Byte>84</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rsi+00000114],00000000</Description>
      <AddressString>FSD-Win64-Shipping.exe+188F6F2</AddressString>
      <Before>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>C7</Byte>
        <Byte>86</Byte>
        <Byte>14</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>FF</Byte>
        <Byte>90</Byte>
        <Byte>68</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of je FSD-Win64-Shipping.UCharacterMovementComponent::PhysFalling+2D3</Description>
      <AddressString>FSD-Win64-Shipping.exe+188F690</AddressString>
      <Before>
        <Byte>28</Byte>
        <Byte>D8</Byte>
        <Byte>45</Byte>
        <Byte>84</Byte>
        <Byte>ED</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>84</Byte>
        <Byte>AD</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F2</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>0D</Byte>
        <Byte>2A</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jne FSD-Win64-Shipping.UCharacterMovementComponent::PhysFalling+34E</Description>
      <AddressString>FSD-Win64-Shipping.exe+188F677</AddressString>
      <Before>
        <Byte>45</Byte>
        <Byte>10</Byte>
        <Byte>00</Byte>
        <Byte>84</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>85</Byte>
        <Byte>41</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>06</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of je FSD-Win64-Shipping.UFallingStateComponent::OnUpdateState+135</Description>
      <AddressString>FSD-Win64-Shipping.exe+5F1F48</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>2B</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>88</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of shufps xmm0,xmm1,55</Description>
      <AddressString>FSD-Win64-Shipping.exe+5F1F5F</AddressString>
      <Before>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>60</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>C6</Byte>
        <Byte>C1</Byte>
        <Byte>55</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>C6</Byte>
        <Byte>C9</Byte>
        <Byte>AA</Byte>
        <Byte>F3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of shufps xmm1,xmm1,-56</Description>
      <AddressString>FSD-Win64-Shipping.exe+5F1F63</AddressString>
      <Before>
        <Byte>60</Byte>
        <Byte>0F</Byte>
        <Byte>C6</Byte>
        <Byte>C1</Byte>
        <Byte>55</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>C6</Byte>
        <Byte>C9</Byte>
        <Byte>AA</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jmp FSD-Win64-Shipping.UFallingStateComponent::OnUpdateState+152</Description>
      <AddressString>FSD-Win64-Shipping.exe+5F1F73</AddressString>
      <Before>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>64</Byte>
      </Before>
      <Actual>
        <Byte>EB</Byte>
        <Byte>1D</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>05</Byte>
        <Byte>55</Byte>
        <Byte>8E</Byte>
        <Byte>F2</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov eax,[FSD-Win64-Shipping.FVector::ZeroVector+8]</Description>
      <AddressString>FSD-Win64-Shipping.exe+5F1F75</AddressString>
      <Before>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>64</Byte>
        <Byte>EB</Byte>
        <Byte>1D</Byte>
      </Before>
      <Actual>
        <Byte>8B</Byte>
        <Byte>05</Byte>
        <Byte>55</Byte>
        <Byte>8E</Byte>
        <Byte>F2</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>F2</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>05</Byte>
        <Byte>45</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rsp+68],xmm1</Description>
      <AddressString>FSD-Win64-Shipping.exe+5F1F67</AddressString>
      <Before>
        <Byte>55</Byte>
        <Byte>0F</Byte>
        <Byte>C6</Byte>
        <Byte>C9</Byte>
        <Byte>AA</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>68</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rsp+64],xmm0</Description>
      <AddressString>FSD-Win64-Shipping.exe+5F1F6D</AddressString>
      <Before>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>4C</Byte>
        <Byte>24</Byte>
        <Byte>68</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>64</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>1D</Byte>
        <Byte>8B</Byte>
        <Byte>05</Byte>
        <Byte>55</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jne FSD-Win64-Shipping.USceneComponent::EndScopedMovementUpdate+245</Description>
      <AddressString>FSD-Win64-Shipping.exe+18DB92C</AddressString>
      <Before>
        <Byte>0F</Byte>
        <Byte>50</Byte>
        <Byte>C0</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>85</Byte>
        <Byte>E3</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>8E</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movups xmm1,[rsi+000001A0]</Description>
      <AddressString>FSD-Win64-Shipping.exe+18DB932</AddressString>
      <Before>
        <Byte>85</Byte>
        <Byte>E3</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>8E</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>60</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rsp+000000C0],xmm0</Description>
      <AddressString>FSD-Win64-Shipping.exe+18DB906</AddressString>
      <Before>
        <Byte>8E</Byte>
        <Byte>B0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>84</Byte>
        <Byte>24</Byte>
        <Byte>C0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>84</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of sub ecx,01</Description>
      <AddressString>FSD-Win64-Shipping.exe+18DB8CF</AddressString>
      <Before>
        <Byte>84</Byte>
        <Byte>C3</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>83</Byte>
        <Byte>E9</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>84</Byte>
        <Byte>3D</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jmp FSD-Win64-Shipping.USceneComponent::EndScopedMovementUpdate+BC</Description>
      <AddressString>FSD-Win64-Shipping.exe+18DB87D</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>C3</Byte>
        <Byte>E6</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>EB</Byte>
        <Byte>0D</Byte>
      </Actual>
      <After>
        <Byte>F6</Byte>
        <Byte>83</Byte>
        <Byte>A8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of je FSD-Win64-Shipping.USceneComponent::EndScopedMovementUpdate+AF</Description>
      <AddressString>FSD-Win64-Shipping.exe+18DB869</AddressString>
      <Before>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>F8</Byte>
        <Byte>84</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>14</Byte>
      </Actual>
      <After>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>4B</Byte>
        <Byte>14</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of sub rsp,000000B0</Description>
      <AddressString>FSD-Win64-Shipping.exe+18DB7D2</AddressString>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>40</Byte>
        <Byte>56</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>81</Byte>
        <Byte>EC</Byte>
        <Byte>B0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>B9</Byte>
        <Byte>50</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movups xmm0,[rsi+00000190]</Description>
      <AddressString>FSD-Win64-Shipping.exe+18DB93E</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>60</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>86</Byte>
        <Byte>90</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>4C</Byte>
        <Byte>8D</Byte>
        <Byte>43</Byte>
        <Byte>78</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movups xmm7,[rsi+000001A0]</Description>
      <AddressString>FSD-Win64-Shipping.exe+18C94AA</AddressString>
      <Before>
        <Byte>24</Byte>
        <Byte>90</Byte>
        <Byte>05</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>BE</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>84</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of subps xmm7,[rsi+000001A0]</Description>
      <AddressString>FSD-Win64-Shipping.exe+18C9579</AddressString>
      <Before>
        <Byte>05</Byte>
        <Byte>67</Byte>
        <Byte>61</Byte>
        <Byte>DA</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>BE</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>25</Byte>
        <Byte>49</Byte>
        <Byte>F0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movups [rdi+000001A0],xmm12</Description>
      <AddressString>FSD-Win64-Shipping.exe+18F5862</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>45</Byte>
        <Byte>8B</Byte>
        <Byte>C6</Byte>
      </Before>
      <Actual>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>A7</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>B2</Byte>
        <Byte>01</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movups xmm7,[rdi+000001A0]</Description>
      <AddressString>FSD-Win64-Shipping.exe+18BEAD9</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>27</Byte>
        <Byte>73</Byte>
        <Byte>A4</Byte>
        <Byte>FE</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>BF</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>45</Byte>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>DB</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movups xmm1,[rdi+000001A0]</Description>
      <AddressString>FSD-Win64-Shipping.exe+18F57A4</AddressString>
      <Before>
        <Byte>F5</Byte>
        <Byte>45</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>FE</Byte>
      </Before>
      <Actual>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>8F</Byte>
        <Byte>A0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>1D</Byte>
        <Byte>8E</Byte>
        <Byte>31</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movups xmm0,[r8+10]</Description>
      <AddressString>FSD-Win64-Shipping.exe+A96BCE</AddressString>
      <Before>
        <Byte>10</Byte>
        <Byte>0F</Byte>
        <Byte>C6</Byte>
        <Byte>D0</Byte>
        <Byte>88</Byte>
      </Before>
      <Actual>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>40</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>4C</Byte>
        <Byte>8D</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov rax,[FSD-Win64-Shipping.exe+3750EC0]</Description>
      <AddressString>FSD-Win64-Shipping.exe+1DE83F4</AddressString>
      <Before>
        <Byte>CC</Byte>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>28</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>05</Byte>
        <Byte>C5</Byte>
        <Byte>8A</Byte>
        <Byte>96</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>75</Byte>
        <Byte>1A</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm0,[FSD-Win64-Shipping.exe+268A548]</Description>
      <AddressString>FSD-Win64-Shipping.exe+59464A</AddressString>
      <Before>
        <Byte>57</Byte>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>30</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>05</Byte>
        <Byte>F6</Byte>
        <Byte>5E</Byte>
        <Byte>0F</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>DA</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jne FSD-Win64-Shipping.Z_Construct_UFunction_ACharacter_OnJumped+2A</Description>
      <AddressString>FSD-Win64-Shipping.exe+1DD3DAE</AddressString>
      <Before>
        <Byte>97</Byte>
        <Byte>01</Byte>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>75</Byte>
        <Byte>1A</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>15</Byte>
        <Byte>09</Byte>
        <Byte>F5</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of setne r8l</Description>
      <AddressString>FSD-Win64-Shipping.exe+8D09FA</AddressString>
      <Before>
        <Byte>33</Byte>
        <Byte>C0</Byte>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>95</Byte>
        <Byte>C0</Byte>
      </Actual>
      <After>
        <Byte>4C</Byte>
        <Byte>03</Byte>
        <Byte>C0</Byte>
        <Byte>4C</Byte>
        <Byte>89</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of add r8,rax</Description>
      <AddressString>FSD-Win64-Shipping.exe+8D09FE</AddressString>
      <Before>
        <Byte>C0</Byte>
        <Byte>41</Byte>
        <Byte>0F</Byte>
        <Byte>95</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>4C</Byte>
        <Byte>03</Byte>
        <Byte>C0</Byte>
      </Actual>
      <After>
        <Byte>4C</Byte>
        <Byte>89</Byte>
        <Byte>42</Byte>
        <Byte>20</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov rax,[rcx]</Description>
      <AddressString>FSD-Win64-Shipping.exe+8D0A05</AddressString>
      <Before>
        <Byte>C0</Byte>
        <Byte>4C</Byte>
        <Byte>89</Byte>
        <Byte>42</Byte>
        <Byte>20</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>FF</Byte>
        <Byte>A0</Byte>
        <Byte>A8</Byte>
        <Byte>07</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of je FSD-Win64-Shipping.UZiplineGunUpgrade::AddToItem+AB</Description>
      <AddressString>FSD-Win64-Shipping.exe+6C9C8E</AddressString>
      <Before>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>84</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>5B</Byte>
      </Actual>
      <After>
        <Byte>3C</Byte>
        <Byte>01</Byte>
        <Byte>74</Byte>
        <Byte>34</Byte>
        <Byte>2C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of je FSD-Win64-Shipping.UZiplineGunUpgrade::GetUpgradedValue+140</Description>
      <AddressString>FSD-Win64-Shipping.exe+6E479B</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>23</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>6E</Byte>
        <Byte>40</Byte>
        <Byte>2F</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jae FSD-Win64-Shipping.UCharacterRecoilComponent::AddRecoil+8E</Description>
      <AddressString>FSD-Win64-Shipping.exe+59466C</AddressString>
      <Before>
        <Byte>42</Byte>
        <Byte>1C</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>F9</Byte>
      </Before>
      <Actual>
        <Byte>73</Byte>
        <Byte>70</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>42</Byte>
        <Byte>24</Byte>
        <Byte>73</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jae FSD-Win64-Shipping.UCharacterRecoilComponent::AddRecoil+8E</Description>
      <AddressString>FSD-Win64-Shipping.exe+594672</AddressString>
      <Before>
        <Byte>70</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>42</Byte>
        <Byte>24</Byte>
      </Before>
      <Actual>
        <Byte>73</Byte>
        <Byte>6A</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>54</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call FSD-Win64-Shipping.FRecoilSettings::GenerateRecoilImpulse</Description>
      <AddressString>FSD-Win64-Shipping.exe+59467C</AddressString>
      <Before>
        <Byte>24</Byte>
        <Byte>20</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CB</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>5F</Byte>
        <Byte>11</Byte>
        <Byte>05</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm12,[FSD-Win64-Shipping._realbf800000]</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E5862</AddressString>
      <Before>
        <Byte>2C</Byte>
        <Byte>05</Byte>
        <Byte>02</Byte>
        <Byte>EB</Byte>
        <Byte>09</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>25</Byte>
        <Byte>E9</Byte>
        <Byte>2C</Byte>
        <Byte>05</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>77</Byte>
        <Byte>04</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jmp FSD-Win64-Shipping.FRecoilSettings::GenerateRecoilImpulse+8B</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E5860</AddressString>
      <Before>
        <Byte>25</Byte>
        <Byte>D8</Byte>
        <Byte>2C</Byte>
        <Byte>05</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>EB</Byte>
        <Byte>09</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>25</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of je FSD-Win64-Shipping.FRecoilSettings::GenerateRecoilImpulse+82</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E5830</AddressString>
      <Before>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>60</Byte>
        <Byte>88</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>30</Byte>
      </Actual>
      <After>
        <Byte>FF</Byte>
        <Byte>15</Byte>
        <Byte>70</Byte>
        <Byte>A1</Byte>
        <Byte>02</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm11,[FSD-Win64-Shipping.exe+263B6BC]</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E5822</AddressString>
      <Before>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>58</Byte>
        <Byte>98</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>1D</Byte>
        <Byte>91</Byte>
        <Byte>5E</Byte>
        <Byte>05</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>29</Byte>
        <Byte>60</Byte>
        <Byte>88</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm6,[rdi+04]</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E586B</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>77</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>3F</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm6,[rdi+14]</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E589C</AddressString>
      <Before>
        <Byte>15</Byte>
        <Byte>0C</Byte>
        <Byte>A1</Byte>
        <Byte>02</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>77</Byte>
        <Byte>14</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>C9</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm7,[rdi+10]</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E58A4</AddressString>
      <Before>
        <Byte>77</Byte>
        <Byte>14</Byte>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>7F</Byte>
        <Byte>10</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>2A</Byte>
        <Byte>C8</Byte>
        <Byte>F3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm12,[FSD-Win64-Shipping.exe+2638538]</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E5857</AddressString>
      <Before>
        <Byte>C1</Byte>
        <Byte>3B</Byte>
        <Byte>C6</Byte>
        <Byte>75</Byte>
        <Byte>0B</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>25</Byte>
        <Byte>D8</Byte>
        <Byte>2C</Byte>
        <Byte>05</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>EB</Byte>
        <Byte>09</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call qword ptr [FSD-Win64-Shipping._imp_rand]</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E5896</AddressString>
      <Before>
        <Byte>F3</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>D7</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>15</Byte>
        <Byte>0C</Byte>
        <Byte>A1</Byte>
        <Byte>02</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>77</Byte>
        <Byte>14</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call qword ptr [FSD-Win64-Shipping._imp_rand]</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E58BA</AddressString>
      <Before>
        <Byte>C9</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>2C</Byte>
        <Byte>D9</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>15</Byte>
        <Byte>E8</Byte>
        <Byte>A0</Byte>
        <Byte>02</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>45</Byte>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>C0</Byte>
        <Byte>F3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call qword ptr [FSD-Win64-Shipping._imp_rand]</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E58DC</AddressString>
      <Before>
        <Byte>F3</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>C7</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>15</Byte>
        <Byte>C6</Byte>
        <Byte>A0</Byte>
        <Byte>02</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>77</Byte>
        <Byte>0C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of cmp byte ptr [rcx+18],00</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E57F7</AddressString>
      <Before>
        <Byte>EC</Byte>
        <Byte>90</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>80</Byte>
        <Byte>79</Byte>
        <Byte>18</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>EA</Byte>
        <Byte>0F</Byte>
        <Byte>29</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov rax,rsp</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E57E0</AddressString>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>C4</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>58</Byte>
        <Byte>08</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call qword ptr [FSD-Win64-Shipping._imp_rand]</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E5832</AddressString>
      <Before>
        <Byte>29</Byte>
        <Byte>60</Byte>
        <Byte>88</Byte>
        <Byte>74</Byte>
        <Byte>30</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>15</Byte>
        <Byte>70</Byte>
        <Byte>A1</Byte>
        <Byte>02</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>66</Byte>
        <Byte>0F</Byte>
        <Byte>6E</Byte>
        <Byte>C8</Byte>
        <Byte>8B</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm7,[rdi]</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E5870</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
        <Byte>90</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>3F</Byte>
      </Actual>
      <After>
        <Byte>FF</Byte>
        <Byte>15</Byte>
        <Byte>2E</Byte>
        <Byte>A1</Byte>
        <Byte>02</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call qword ptr [FSD-Win64-Shipping._imp_rand]</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E5874</AddressString>
      <Before>
        <Byte>04</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>3F</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>15</Byte>
        <Byte>2E</Byte>
        <Byte>A1</Byte>
        <Byte>02</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>45</Byte>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>D2</Byte>
        <Byte>F3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rbp+04],xmm9</Description>
      <AddressString>FSD-Win64-Shipping.exe+5E5949</AddressString>
      <Before>
        <Byte>24</Byte>
        <Byte>90</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>4D</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>49</Byte>
        <Byte>8B</Byte>
        <Byte>5B</Byte>
        <Byte>10</Byte>
        <Byte>F3</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm7,[FSD-Win64-Shipping.exe+2638538]</Description>
      <AddressString>FSD-Win64-Shipping.exe+7B2E41</AddressString>
      <Before>
        <Byte>24</Byte>
        <Byte>F0</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>3D</Byte>
        <Byte>EF</Byte>
        <Byte>56</Byte>
        <Byte>E8</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>D2</Byte>
        <Byte>74</Byte>
        <Byte>42</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call FSD-Win64-Shipping.AFSDPlayerController::PlayForceFeedback</Description>
      <AddressString>FSD-Win64-Shipping.exe+7B302A</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>45</Byte>
        <Byte>33</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>A1</Byte>
        <Byte>57</Byte>
        <Byte>EF</Byte>
        <Byte>FF</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>96</Byte>
        <Byte>68</Byte>
        <Byte>06</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rsp+20],xmm6</Description>
      <AddressString>FSD-Win64-Shipping.exe+7B2E6E</AddressString>
      <Before>
        <Byte>24</Byte>
        <Byte>28</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CE</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>17</Byte>
        <Byte>19</Byte>
        <Byte>20</Byte>
        <Byte>01</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov rdx,[FSD-Win64-Shipping.exe+34F88E8]</Description>
      <AddressString>FSD-Win64-Shipping.exe+7B3285</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C9</Byte>
        <Byte>74</Byte>
        <Byte>0F</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>15</Byte>
        <Byte>5C</Byte>
        <Byte>56</Byte>
        <Byte>D4</Byte>
        <Byte>02</Byte>
      </Actual>
      <After>
        <Byte>41</Byte>
        <Byte>B0</Byte>
        <Byte>01</Byte>
        <Byte>E8</Byte>
        <Byte>2C</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call FSD-Win64-Shipping.AAmmoDrivenWeapon::Server_PlayBurstFire</Description>
      <AddressString>FSD-Win64-Shipping.exe+7B33ED</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CE</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>4E</Byte>
        <Byte>E0</Byte>
        <Byte>0F</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>E9</Byte>
        <Byte>38</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call FSD-Win64-Shipping.exe+AEA7C0</Description>
      <AddressString>FSD-Win64-Shipping.exe+7B36F9</AddressString>
      <Before>
        <Byte>0D</Byte>
        <Byte>0F</Byte>
        <Byte>52</Byte>
        <Byte>D4</Byte>
        <Byte>02</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>C2</Byte>
        <Byte>70</Byte>
        <Byte>33</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>0D</Byte>
        <Byte>0B</Byte>
        <Byte>52</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of lea rdx,[FSD-Win64-Shipping.exe+274D378]</Description>
      <AddressString>FSD-Win64-Shipping.exe+7B36EB</AddressString>
      <Before>
        <Byte>B8</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>15</Byte>
        <Byte>86</Byte>
        <Byte>9C</Byte>
        <Byte>F9</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8D</Byte>
        <Byte>0D</Byte>
        <Byte>0F</Byte>
        <Byte>52</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of je FSD-Win64-Shipping.AGatlingGun::Tick+95</Description>
      <AddressString>FSD-Win64-Shipping.exe+7AD58B</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>DB</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>58</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>4E</Byte>
        <Byte>A6</Byte>
        <Byte>19</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call FSD-Win64-Shipping.ABeltDrivenWeapon::Tick</Description>
      <AddressString>FSD-Win64-Shipping.exe+7AD57C</AddressString>
      <Before>
        <Byte>28</Byte>
        <Byte>F1</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>F1</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>EF</Byte>
        <Byte>C6</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>9E</Byte>
        <Byte>B0</Byte>
        <Byte>04</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rsi+00000754],xmm1</Description>
      <AddressString>FSD-Win64-Shipping.exe+7AD693</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>5C</Byte>
        <Byte>CE</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>8E</Byte>
        <Byte>54</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>84</Byte>
        <Byte>B6</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov rsi,rcx</Description>
      <AddressString>FSD-Win64-Shipping.exe+7AD579</AddressString>
      <Before>
        <Byte>45</Byte>
        <Byte>20</Byte>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>F1</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>F1</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>EF</Byte>
        <Byte>C6</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov rcx,[rdi+00000388]</Description>
      <AddressString>FSD-Win64-Shipping.exe+79D991</AddressString>
      <Before>
        <Byte>8F</Byte>
        <Byte>36</Byte>
        <Byte>04</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>8F</Byte>
        <Byte>88</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>85</Byte>
        <Byte>C9</Byte>
        <Byte>0F</Byte>
        <Byte>84</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rsp+20],xmm0</Description>
      <AddressString>FSD-Win64-Shipping.exe+79DB3F</AddressString>
      <Before>
        <Byte>28</Byte>
        <Byte>01</Byte>
        <Byte>45</Byte>
        <Byte>33</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>D3</Byte>
        <Byte>E8</Byte>
        <Byte>83</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss xmm8,[FSD-Win64-Shipping.exe+2638538]</Description>
      <AddressString>FSD-Win64-Shipping.exe+7A9CB6</AddressString>
      <Before>
        <Byte>90</Byte>
        <Byte>B8</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>44</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>05</Byte>
        <Byte>79</Byte>
        <Byte>E8</Byte>
        <Byte>E8</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>32</Byte>
        <Byte>DB</Byte>
        <Byte>0F</Byte>
        <Byte>57</Byte>
        <Byte>F6</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of je FSD-Win64-Shipping.ABeltDrivenWeapon::Tick+C0</Description>
      <AddressString>FSD-Win64-Shipping.exe+7A9CE2</AddressString>
      <Before>
        <Byte>3C</Byte>
        <Byte>07</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>4C</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>8F</Byte>
        <Byte>88</Byte>
        <Byte>03</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of je FSD-Win64-Shipping.ABeltDrivenWeapon::Tick+6B</Description>
      <AddressString>FSD-Win64-Shipping.exe+7A9CD5</AddressString>
      <Before>
        <Byte>07</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>84</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>04</Byte>
      </Actual>
      <After>
        <Byte>3C</Byte>
        <Byte>03</Byte>
        <Byte>75</Byte>
        <Byte>1D</Byte>
        <Byte>80</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of movss [rdi+000006B8],xmm0</Description>
      <AddressString>FSD-Win64-Shipping.exe+7A9F6C</AddressString>
      <Before>
        <Byte>5C</Byte>
        <Byte>C7</Byte>
        <Byte>0F</Byte>
        <Byte>2F</Byte>
        <Byte>C6</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>87</Byte>
        <Byte>B8</Byte>
        <Byte>06</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>77</Byte>
        <Byte>2B</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>07</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call FSD-Win64-Shipping.UPerkAsset::CanUseCharge</Description>
      <AddressString>FSD-Win64-Shipping.exe+5DFE2B</AddressString>
      <Before>
        <Byte>8B</Byte>
        <Byte>D0</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>CB</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>F0</Byte>
        <Byte>B3</Byte>
        <Byte>16</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>30</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov rbx,[rsp+30]</Description>
      <AddressString>FSD-Win64-Shipping.exe+5DFE30</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>F0</Byte>
        <Byte>B3</Byte>
        <Byte>16</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>30</Byte>
      </Actual>
      <After>
        <Byte>84</Byte>
        <Byte>C0</Byte>
        <Byte>0F</Byte>
        <Byte>95</Byte>
        <Byte>C0</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rsp+20],rax</Description>
      <AddressString>FSD-Win64-Shipping.exe+712D3A</AddressString>
      <Before>
        <Byte>91</Byte>
        <Byte>E8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>E8</Byte>
        <Byte>2C</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
